{
    "name": "akamai",
    "description": "A Pulumi package for creating and managing akamai cloud resources.",
    "keywords": [
        "pulumi",
        "akamai"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`akamai` Terraform Provider](https://github.com/akamai/terraform-provider-akamai).",
    "repository": "https://github.com/pulumi/pulumi-akamai",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:config/appsecs:appsecs"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:config/config:config",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:config/dns:dns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:config/gtm:gtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:config/property:property",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "types": {
        "akamai:config/appsecs:appsecs": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/config:config": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/dns:dns": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/gtm:gtm": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/property:property": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "key name\n* `algorithm`\n* `secret`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/GtmAsmapAssignment:GtmAsmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "* `city`\n* `clone_of`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "description": "* `error_penalty`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "description": "`name`\n`value`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "description": "* `request_string`\n* `resource_type`\n* `response_string`\n* `ssl_client_certificate`\n* `ssl_client_private_key`\n* `test_object`\n* `test_object_password`\n* `test_object_port`\n* `test_object_username`\n* `timeout_penalty`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Property type  \n* `score_aggregation_type`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "* `weight`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "description": "* `host_header`\n* `least_squares_decay`\n* `upper_bound`\n* `description`\n* `leader_string`\n* `constrained_property`\n* `load_imbalance_percent`\n* `max_u_multiplicative_increment`\n* `decay_rate`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:index/ProviderAppsec:ProviderAppsec": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderConfig:ProviderConfig": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderDns:ProviderDns": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderGtm:ProviderGtm": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderProperty:ProviderProperty": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getContractsContract:getContractsContract": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contractTypeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "contractTypeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractIds",
                "groupId",
                "groupName",
                "parentGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertiesProperty:getPropertiesProperty": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latestVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "note": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "groupId",
                "latestVersion",
                "note",
                "productId",
                "productionVersion",
                "propertyId",
                "propertyName",
                "ruleFormat",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyProductsProduct:getPropertyProductsProduct": {
            "properties": {
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "productId",
                "productName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "akamai:properties/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the akamai package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "inputProperties": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderAppsec:ProviderAppsec"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:index/ProviderDns:ProviderDns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:index/ProviderGtm:ProviderGtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:index/ProviderProperty:ProviderProperty",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "resources": {
        "akamai:edgedns/dnsRecord:DnsRecord": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsRecord has been deprecated in favor of akamai.DnsRecord"
        },
        "akamai:edgedns/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "group",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "group",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsZone has been deprecated in favor of akamai.DnsZone"
        },
        "akamai:index/appSecActivations:AppSecActivations": {
            "description": "The `akamai.AppSecActivations` resource allows you to activate or deactivate a given security configuration version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst activation = new akamai.AppSecActivations(\"activation\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    version: configuration.then(configuration =\u003e configuration.latestVersion),\n    network: \"STAGING\",\n    notes: \"TEST Notes\",\n    notificationEmails: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nactivation = akamai.AppSecActivations(\"activation\",\n    config_id=configuration.config_id,\n    version=configuration.latest_version,\n    network=\"STAGING\",\n    notes=\"TEST Notes\",\n    notification_emails=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var activation = new Akamai.AppSecActivations(\"activation\", new Akamai.AppSecActivationsArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Version = configuration.Apply(configuration =\u003e configuration.LatestVersion),\n            Network = \"STAGING\",\n            Notes = \"TEST Notes\",\n            NotificationEmails = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecActivations(ctx, \"activation\", \u0026akamai.AppSecActivationsArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tVersion:  pulumi.Int(configuration.LatestVersion),\n\t\t\tNetwork:  pulumi.String(\"STAGING\"),\n\t\t\tNotes:    pulumi.String(\"TEST Notes\"),\n\t\t\tNotificationEmails: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n* `config_id` - (Required) The ID of the security configuration to use.\n\n* `version` - (Required) The version number of the security configuration to use.\n\n* `notification_emails` - (Required) A bracketed, comma-separated list of email addresses that will be notified when the operation is complete.\n\n* `network` - The network in which the security configuration should be activated. If supplied, must be either STAGING or PRODUCTION. If not supplied, STAGING will be assumed.\n\n* `notes` - An optional text note describing this operation.\n\n* `activate` - A boolean indicating whether to activate the specified configuration version. If not supplied, True is assumed.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "configId": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation. The following values are may be returned:\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "notificationEmails",
                "status",
                "version"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean"
                },
                "configId": {
                    "type": "integer"
                },
                "network": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "configId",
                "notificationEmails",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecActivations resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "network": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the operation. The following values are may be returned:\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfigurationVersionClone:AppSecConfigurationVersionClone": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "createFromVersion": {
                    "type": "integer"
                },
                "ruleUpdate": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "description": "Version of cloned configuration\n"
                }
            },
            "required": [
                "configId",
                "createFromVersion",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "createFromVersion": {
                    "type": "integer"
                },
                "ruleUpdate": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "configId",
                "createFromVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfigurationVersionClone resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "createFromVersion": {
                        "type": "integer"
                    },
                    "ruleUpdate": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer",
                        "description": "Version of cloned configuration\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRule:AppSecCustomRule": {
            "description": "The `akamai.AppSecCustomRule` resource allows you to create or modify a custom rule associated with a given security configuration.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The ID of the custom rule.\n"
                },
                "rules": {
                    "type": "string",
                    "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                }
            },
            "required": [
                "configId",
                "customRuleId",
                "rules"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "rules": {
                    "type": "string",
                    "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                }
            },
            "requiredInputs": [
                "configId",
                "rules"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "The ID of the custom rule.\n"
                    },
                    "rules": {
                        "type": "string",
                        "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction": {
            "description": "The `akamai.AppSecCustomRuleAction` resource allows you to associate an action to a custom rule.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst createCustomRuleAction = new akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    version: configuration.then(configuration =\u003e configuration.latestVersion),\n    policyId: \"crAP_75829\",\n    customRuleId: 12345,\n    customRuleAction: \"alert\",\n});\nexport const customRuleId = createCustomRuleAction.customRuleId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\ncreate_custom_rule_action = akamai.AppSecCustomRuleAction(\"createCustomRuleAction\",\n    config_id=configuration.config_id,\n    version=configuration.latest_version,\n    policy_id=\"crAP_75829\",\n    custom_rule_id=12345,\n    custom_rule_action=\"alert\")\npulumi.export(\"customRuleId\", create_custom_rule_action.custom_rule_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var createCustomRuleAction = new Akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", new Akamai.AppSecCustomRuleActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Version = configuration.Apply(configuration =\u003e configuration.LatestVersion),\n            PolicyId = \"crAP_75829\",\n            CustomRuleId = 12345,\n            CustomRuleAction = \"alert\",\n        });\n        this.CustomRuleId = createCustomRuleAction.CustomRuleId;\n    }\n\n    [Output(\"customRuleId\")]\n    public Output\u003cstring\u003e CustomRuleId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcreateCustomRuleAction, err := akamai.NewAppSecCustomRuleAction(ctx, \"createCustomRuleAction\", \u0026akamai.AppSecCustomRuleActionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tVersion:          pulumi.Int(configuration.LatestVersion),\n\t\t\tPolicyId:         pulumi.String(\"crAP_75829\"),\n\t\t\tCustomRuleId:     pulumi.Int(12345),\n\t\t\tCustomRuleAction: pulumi.String(\"alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleId\", createCustomRuleAction.CustomRuleId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "The action to be taken when the custom rule is invoked. Must be one of the following:\n* alert\n* deny\n* none\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The ID of the custom rule.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "required": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "policyId",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "The action to be taken when the custom rule is invoked. Must be one of the following:\n* alert\n* deny\n* none\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The ID of the custom rule.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "policyId",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRuleAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRuleAction": {
                        "type": "string",
                        "description": "The action to be taken when the custom rule is invoked. Must be one of the following:\n* alert\n* deny\n* none\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "The ID of the custom rule.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTarget:AppSecMatchTarget": {
            "description": "The `akamai.AppSecMatchTarget` resource allows you to create or modify a match target associated with a given security configuration version.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst matchTarget = new akamai.AppSecMatchTarget(\"matchTarget\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    version: configuration.then(configuration =\u003e configuration.latestVersion),\n    json: fs.readFileSync(`${path.module}/match_targets.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nmatch_target = akamai.AppSecMatchTarget(\"matchTarget\",\n    config_id=configuration.config_id,\n    version=configuration.latest_version,\n    json=(lambda path: open(path).read())(f\"{path['module']}/match_targets.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var matchTarget = new Akamai.AppSecMatchTarget(\"matchTarget\", new Akamai.AppSecMatchTargetArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Version = configuration.Apply(configuration =\u003e configuration.LatestVersion),\n            Json = File.ReadAllText($\"{path.Module}/match_targets.json\"),\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "json": {
                    "type": "string",
                    "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                },
                "matchTargetId": {
                    "type": "integer",
                    "description": "The ID of the match target.\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "required": [
                "configId",
                "json",
                "matchTargetId",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "json": {
                    "type": "string",
                    "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "json",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTarget resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                    },
                    "matchTargetId": {
                        "type": "integer",
                        "description": "The ID of the match target.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence": {
            "description": "The `akamai.AppSecMatchTargetSequence` resource allows you to specify the order in which match targets are applied within a given security configuration version.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst matchTargetSequence = new akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    version: configuration.then(configuration =\u003e configuration.latestVersion),\n    type: \"website\",\n    json: fs.readFileSync(`${path.module}/match_targets.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nmatch_target_sequence = akamai.AppSecMatchTargetSequence(\"matchTargetSequence\",\n    config_id=configuration.config_id,\n    version=configuration.latest_version,\n    type=\"website\",\n    json=(lambda path: open(path).read())(f\"{path['module']}/match_targets.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var matchTargetSequence = new Akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", new Akamai.AppSecMatchTargetSequenceArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Version = configuration.Apply(configuration =\u003e configuration.LatestVersion),\n            Type = \"website\",\n            Json = File.ReadAllText($\"{path.Module}/match_targets.json\"),\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "json": {
                    "type": "string",
                    "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                },
                "sequenceMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "required": [
                "configId",
                "type",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "json": {
                    "type": "string",
                    "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                },
                "sequenceMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "description": "The version number of the security configuration to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "type",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTargetSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                    },
                    "sequenceMap": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicyClone:AppSecSecurityPolicyClone": {
            "description": "The `akamai.AppSecSecurityPolicyClone` resource allows you to create a new security policy by cloning an existing policy.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst securityPolicyCloneAppSecSecurityPolicyClone = new akamai.AppSecSecurityPolicyClone(\"securityPolicyCloneAppSecSecurityPolicyClone\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    version: configuration.then(configuration =\u003e configuration.latestVersion),\n    createFromSecurityPolicy: \"crAP_75829\",\n    policyName: \"Test Policy 1\",\n    policyPrefix: \"TP1\",\n});\nexport const securityPolicyClone = securityPolicyCloneAppSecSecurityPolicyClone.policyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nsecurity_policy_clone_app_sec_security_policy_clone = akamai.AppSecSecurityPolicyClone(\"securityPolicyCloneAppSecSecurityPolicyClone\",\n    config_id=configuration.config_id,\n    version=configuration.latest_version,\n    create_from_security_policy=\"crAP_75829\",\n    policy_name=\"Test Policy 1\",\n    policy_prefix=\"TP1\")\npulumi.export(\"securityPolicyClone\", security_policy_clone_app_sec_security_policy_clone.policy_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var securityPolicyCloneAppSecSecurityPolicyClone = new Akamai.AppSecSecurityPolicyClone(\"securityPolicyCloneAppSecSecurityPolicyClone\", new Akamai.AppSecSecurityPolicyCloneArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Version = configuration.Apply(configuration =\u003e configuration.LatestVersion),\n            CreateFromSecurityPolicy = \"crAP_75829\",\n            PolicyName = \"Test Policy 1\",\n            PolicyPrefix = \"TP1\",\n        });\n        this.SecurityPolicyClone = securityPolicyCloneAppSecSecurityPolicyClone.PolicyId;\n    }\n\n    [Output(\"securityPolicyClone\")]\n    public Output\u003cstring\u003e SecurityPolicyClone { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicyCloneAppSecSecurityPolicyClone, err := akamai.NewAppSecSecurityPolicyClone(ctx, \"securityPolicyCloneAppSecSecurityPolicyClone\", \u0026akamai.AppSecSecurityPolicyCloneArgs{\n\t\t\tConfigId:                 pulumi.Int(configuration.ConfigId),\n\t\t\tVersion:                  pulumi.Int(configuration.LatestVersion),\n\t\t\tCreateFromSecurityPolicy: pulumi.String(\"crAP_75829\"),\n\t\t\tPolicyName:               pulumi.String(\"Test Policy 1\"),\n\t\t\tPolicyPrefix:             pulumi.String(\"TP1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"securityPolicyClone\", securityPolicyCloneAppSecSecurityPolicyClone.PolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "createFromSecurityPolicy": {
                    "type": "string",
                    "description": "The ID of the security policy to clone.\n"
                },
                "policyId": {
                    "type": "string",
                    "description": "The ID of the new security policy.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name to be used for the new security policy. If not specified, the name will be autogenerated with the pattern 'clone from '.\n"
                },
                "policyPrefix": {
                    "type": "string",
                    "description": "The four-character policy prefix to be used for the new security policy. If not specified, the prefix will be autogenerated.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "createFromSecurityPolicy",
                "policyId",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "createFromSecurityPolicy": {
                    "type": "string",
                    "description": "The ID of the security policy to clone.\n"
                },
                "policyName": {
                    "type": "string",
                    "description": "The name to be used for the new security policy. If not specified, the name will be autogenerated with the pattern 'clone from '.\n"
                },
                "policyPrefix": {
                    "type": "string",
                    "description": "The four-character policy prefix to be used for the new security policy. If not specified, the prefix will be autogenerated.\n"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "configId",
                "createFromSecurityPolicy",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicyClone resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "createFromSecurityPolicy": {
                        "type": "string",
                        "description": "The ID of the security policy to clone.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ID of the new security policy.\n"
                    },
                    "policyName": {
                        "type": "string",
                        "description": "The name to be used for the new security policy. If not specified, the name will be autogenerated with the pattern 'clone from '.\n"
                    },
                    "policyPrefix": {
                        "type": "string",
                        "description": "The four-character policy prefix to be used for the new security policy. If not specified, the prefix will be autogenerated.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "required": [
                "configId",
                "hostnames",
                "mode",
                "version"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mode": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames",
                "mode",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mode": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpCode:CpCode": {
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "product"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/cpCode:CpCode"
                }
            ]
        },
        "akamai:index/dnsRecord:DnsRecord": {
            "description": "The `akamai.DnsRecord` provides the resource for configuring a dns record to integrate easily with your existing DNS infrastructure to provide a secure, high performance, highly available and scalable solution for DNS hosting.\n\n{{% examples %}}\n## Example Usage\n### A Record Example\nresource \"akamai_dns_record\" \"origin\" {\n    zone = \"origin.org\"\n    name = \"origin.example.org\"\n    recordtype =  \"A\"\n    active = true\n    ttl =  30\n    target = [\"192.0.2.42\"]\n}\n{{% /examples %}}\n## Required Fields Per Record Type\n\nIn addition to the fields listed in the prior section, type specific fields define the data makeup of each Record's data. This section identfies required fields per type.\n\n### A Record\n\nThe following field is required:\n\n* target - One or more IPv4 addresses, for example, 1.2.3.4.\n\n### AAAA Record\n\nThe following field is required:\n\n* target - One or more IPv6 addresses, for example, 2001:0db8::ff00:0042:8329.\n\n### AFSDB Record\n\nThe following fields are required:\n\n* target - The domain name of the host having a server for the cell named by the owner name of the resource record.\n* subtype- An integer between 0 and 65535, indicating the type of service provided by the host.\n\n### AKAMAICDN Record\n\nThe following field is required:\n\n* target - DNS name representing selected Edge Hostname name+domain.\n\n### AKAMAITLC Record\n\nNo additional fields are required. The following fields are Computed.\n\n* dns_name - valid DNS name.\n* answer_type - answer type.\n\n### CAA Record\n\nThe following field are required:\n\n* target - One or more CA Authorizations. Each authorization contains three attributes: flags, property tag and property value.\n\nExample:\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n### CERT Record\n\nThe following fields are required:\n\n* type_value - numeric certificate type value\n* type_mnemonic - mnemonic certificate type value.\n* keytag - value computed for the key embedded in the certificate\n* algorithm - identifies the cryptographic algorithm used to create the signature.\n* certificate - certificate data\n\nNote: Type can be configured either a numeric OR menmonic value. If both set, type_mnemonic takes precedent.\n\n### CNAME Record\n\nThe following field is required:\n\n* target - A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.\n\n### DNSKEY Record\n\nThe following fields are required:\n\n* flags\n* protocol - Must have the value 3. The DNSKEY resource record must be treated as invalid during signature verification if it contains a value other than 3.\n* algorithm - The public key’s cryptographic algorithm and determine the format of the public key field.\n* key - Base 64 encoded value representing the public key, the format of which depends on the algorithm being used.\n\n### DS Record\n\nThe following fields are required:\n\n* keytag - The key tag of the DNSKEY resource record referred to by the DS record, in network byte order.\n* algorithm - The algorithm number of the DNSKEY resource record referred to by the DS record.\n* digest_type - Identifies the algorithm used to construct the digest.\n* digest - The base 16 encoded DS record refers to a DNSKEY RR by including a digest of that DNSKEY RR. The digest is calculated by concatenating the canonical form of the fully qualified owner name of the DNSKEY RR with the DNSKEY RDATA, and then applying the digest algorithm.\n\n### HINFO Record\n\nThe following fields are required:\n\n* hardware - Type of hardware the host uses. A machine name or CPU type may be up to 40 characters taken from the set of uppercase letters, digits, and the two punctuation characters hyphen and slash. It must start with a letter, and end with a letter.\n* software - Type of software the host uses. A system name may be up to 40 characters taken from the set of uppercase letters, digits, and the two punctuation characters hyphen and slash. It must start with a letter, and end with a letter or digit.\n\n### LOC Record\n\nThe following field is required:\n\n* target - A geographical location associated with a domain name.\n\n### MX Record\n\nThe following field is required:\n\n* target - One or more domain names that specifies a host willing to act as a mail exchange for the owner name.\n\nThe following fields are optional depending on configuration type. See DNS Getting Started Guide for more information.\n\n* priority - The preference value given to the MX record among MX records. When a mailer needs to send mail to a certain DNS domain, it first contacts a DNS server for that domain and retrieves all the MX records. It then contacts the mailer with the lowest preference value. Ignored if embedded priority specified in target\n* priority_increment - auto priority increment when multiple targets are provided with no embedded priority.\n\n### NAPTR Record\n\nThe following fields are required:\n\n* order - A 16-bit unsigned integer specifying the order in which the NAPTR records MUST be processed to ensure the correct ordering ofrules. Low numbers are processed before high numbers, and once a NAPTR is found whose rule “matches” the target, the client MUST NOT consider any NAPTRs with a higher value for order (except as noted below for the Flags field).\n* preference - A 16-bit unsigned integer that specifies the order in which NAPTR records with equal order values should be processed, low numbers being processed before high numbers.\n* flagsnaptr - A \u003ccharacter-string\u003e containing flags to control aspects of the rewriting and interpretation of the fields in the record. Flags are single characters from the set [A-Z0-9]. The case of the alphabetic characters is not significant.\n* service - Specifies the services available down this rewrite path.\n* regexp - A String containing a substitution expression that is applied to the original string held by the client in order to construct the next domain name to lookup.\n* replacement - The next NAME to query for NAPTR, SRV, or address records depending on the value of the flags field. This MUST be a fully qualified domain-name.\n\n### NS Record\n\nThe following field is required:\n\n* target - One or more domain names that specify authoritative hosts for the specified class and domain.\n\n### NSEC3 Record\n\nThe following fields are required:\n\n* algorithm - The cryptographic hash algorithm used to construct the hash-value.\n* flags - The 8 one-bit flags that can be used to indicate different processing. All undefined flags must be zero.\n* iterations - The number of additional times the hash function has been performed.\n* salt - The base 16 encoded salt value, which is appended to the original owner name before hashing in order to defend against pre-calculated dictionary attacks.\n* next_hashed_owner_name - Base 32 encoded. The next hashed owner name in hash order. This value is in binary format. Given the ordered set of all hashed owner names, the Next Hashed Owner Name field contains the hash of an owner name that immediately follows the owner name of the given NSEC3 RR.\n* type_bitmaps - The resource record set types that exist at the original owner name of the NSEC3 RR.\n\n### NSEC3PARAM Record\n\nThe following fields are required:\n\n* algorithm - The cryptographic hash algorithm used to construct the hash-value.\n* flags - The 8 one-bit flags that can be used to indicate different processing. All undefined flags must be zero.\n* iterations - The number of additional times the hash function has been performed.\n* salt - The base 16 encoded salt value, which is appended to the original owner name before hashing in order to defend against pre-calculated dictionary attacks.\n\n### PTR Record\n\nThe following field is required:\n\n* target - A domain name that points to some location in the domain name space.\n\n### RP Record\n\nThe following fields are required:\n\n* mailbox - A domain name that specifies the mailbox for the responsible person.\n* txt - A domain name for which TXT resource records exist.\n\n### RRSIG Record\n\nThe following fields are required:\n\n* type_covered - The resource record set type covered by this signature.\n* algorithm - The Algorithm Number field identifies the cryptographic algorithm used to create the signature.\n* original_ttl - The TTL of the covered record set as it appears in the authoritative zone.\n* expiration - The end point of this signature’s validity. The signature cannot be used for authentication past this point.\n* inception - The start point of this signature’s validity. The signature cannot be used for authentication prior to this point.\n* keytag - The Key Tag field contains the key tag value of the DNSKEY RR that validates this signature, in network byte order.\n* signer - The owner of the DSNKEY resource record who validates this signature.\n* signature - The base 64 encoded cryptographic signature that covers the RRSIG RDATA and covered record set. Format depends on the TSIG algorithm in use.\n* labels - The Labels field specifies the number of labels in the original RRSIG RR owner name. The significance of this field is that a validator uses it to determine whether the answer was synthesized from a wildcard. If so, it can be used to determine what owner name was used in generating the signature.\n\n### SPF Record\n\nThe following field is required:\n\n* target - Indicates which hosts are, and are not, authorized to use a domain name for the “HELO” and “MAIL FROM” identities.\n\n### SRV Record\n\nThe following fields are required:\n\n* target - The domain name of the target host.\n* priority - A 16-bit integer that specifies the preference given to this resource record among others at the same owner. Lower values are preferred.\n* weight - A server selection mechanism, specifying a relative weight for entries with the same priority. Larger weights should be given a proportionately higher probability of being selected. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order. Domain administrators should use Weight 0 when there isn’t any server selection to do, to make the RR easier to read for humans. In the presence of records containing weights greater than 0, records with weight 0 should have a very small chance of being selected.\n* port - The port on this target of this service. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order.\n\n### SSHFP Record\n\nThe following fields are required:\n\n* algorithm - Describes the algorithm of the public key. The following values are assigned: 0 = reserved; 1 = RSA; 2 = DSS, 3 = ECDSA\n* fingerprint_type - Describes the message-digest algorithm used to calculate the fingerprint of the public key. The following values are assigned: 0 = reserved, 1 = SHA-1, 2 = SHA-256\n* fingerprint - The base 16 encoded fingerprint as calculated over the public key blob. The message-digest algorithm is presumed to produce an opaque octet string output, which is placed as-is in the RDATA fingerprint field.\n\n### SOA Record\n\nThe following fields are required:\n\n* name_server - The domain name of the name server that was the original or primary source of data for this zone.\n* email_address - A domain name that specifies the mailbox of this person responsible for this zone.\n* serial - The unsigned version number between 0 and 214748364 of the original copy of the zone.\n* refresh - A time interval between 0 and 214748364 before the zone should be refreshed.\n* retry - A time interval between 0 and 214748364 that should elapse before a failed refresh should be retried.\n* expiry - A time value between 0 and 214748364 that specifies the upper limit on the time interval that can elapse before the zone is no longer authoritative.\n* nxdomain_ttl - The unsigned minimum TTL between 0 and 214748364 that should be exported with any resource record from this zone.\n\n### TLSA Record\n\nThe following fields are required:\n\n* usage - specifies the provided association that will be used to match the certificate presented in the TLS handshake.\n* selector - specifies which part of the TLS certificate presented by the server will be matched against the association data. \n* match_type - specifies how the certificate association is presented.\n* certificate - specifies the \"certificate association data\" to be matched.\n\n### TXT Record\n\nThe following field is required:\n\n* target - One or more character strings. TXT RRs are used to hold descriptive text. The semantics of the text depends on the domain where it is found.\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Maintained for backward compatibility\n"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.\n"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. A value of zero means that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.\n"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "description": "Domain zone, encapsulating any nested subdomains.\n"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Maintained for backward compatibility\n"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.\n"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. A value of zero means that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.\n"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "description": "Domain zone, encapsulating any nested subdomains.\n"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Maintained for backward compatibility\n"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.\n"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. A value of zero means that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.\n"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Domain zone, encapsulating any nested subdomains.\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsRecord:DnsRecord"
                }
            ]
        },
        "akamai:index/dnsZone:DnsZone": {
            "description": "The `akamai.DnsZone` provides the resource for configuring a DNS zone to integrate easily with your existing DNS infrastructure to provide a secure, high performance, highly available and scalable solution for DNS hosting.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demozone = new akamai.DnsZone(\"demozone\", {\n    comment: \"some comment\",\n    contract: \"ctr_1-AB123\",\n    group: \"100\",\n    masters: [\n        \"1.2.3.4\",\n        \"1.2.3.5\",\n    ],\n    signAndServe: false,\n    type: \"secondary\",\n    zone: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemozone = akamai.DnsZone(\"demozone\",\n    comment=\"some comment\",\n    contract=\"ctr_1-AB123\",\n    group=\"100\",\n    masters=[\n        \"1.2.3.4\",\n        \"1.2.3.5\",\n    ],\n    sign_and_serve=False,\n    type=\"secondary\",\n    zone=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demozone = new Akamai.DnsZone(\"demozone\", new Akamai.DnsZoneArgs\n        {\n            Comment = \"some comment\",\n            Contract = \"ctr_1-AB123\",\n            Group = \"100\",\n            Masters = \n            {\n                \"1.2.3.4\",\n                \"1.2.3.5\",\n            },\n            SignAndServe = false,\n            Type = \"secondary\",\n            Zone = \"example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewDnsZone(ctx, \"demozone\", \u0026akamai.DnsZoneArgs{\n\t\t\tComment:  pulumi.String(\"some comment\"),\n\t\t\tContract: pulumi.String(\"ctr_1-AB123\"),\n\t\t\tGroup:    pulumi.String(\"100\"),\n\t\t\tMasters: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.2.3.4\"),\n\t\t\t\tpulumi.String(\"1.2.3.5\"),\n\t\t\t},\n\t\t\tSignAndServe: pulumi.Bool(false),\n\t\t\tType:         pulumi.String(\"secondary\"),\n\t\t\tZone:         pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string",
                    "description": "A descriptive comment.\n"
                },
                "contract": {
                    "type": "string",
                    "description": "The contract ID.\n"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "description": "The currently selected group ID.\n"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names or addresses of the customer’s nameservers from which the zone data should be retrieved.\n"
                },
                "signAndServe": {
                    "type": "boolean",
                    "description": "Whether DNSSEC Sign\u0026Serve is enabled.\n"
                },
                "signAndServeAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used by Sign\u0026Serve.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The name of the zone whose configuration this zone will copy.\n"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey",
                    "description": "TSIG Key used in secure zone transfers\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether the zone is `primary` or `secondary`.\n"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string",
                    "description": "Domain zone, encapsulating any nested subdomains.\n"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "group",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "A descriptive comment.\n"
                },
                "contract": {
                    "type": "string",
                    "description": "The contract ID.\n"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "description": "The currently selected group ID.\n"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names or addresses of the customer’s nameservers from which the zone data should be retrieved.\n"
                },
                "signAndServe": {
                    "type": "boolean",
                    "description": "Whether DNSSEC Sign\u0026Serve is enabled.\n"
                },
                "signAndServeAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used by Sign\u0026Serve.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The name of the zone whose configuration this zone will copy.\n"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey",
                    "description": "TSIG Key used in secure zone transfers\n"
                },
                "type": {
                    "type": "string",
                    "description": "Whether the zone is `primary` or `secondary`.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Domain zone, encapsulating any nested subdomains.\n"
                }
            },
            "requiredInputs": [
                "contract",
                "group",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment.\n"
                    },
                    "contract": {
                        "type": "string",
                        "description": "The contract ID.\n"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "description": "The currently selected group ID.\n"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names or addresses of the customer’s nameservers from which the zone data should be retrieved.\n"
                    },
                    "signAndServe": {
                        "type": "boolean",
                        "description": "Whether DNSSEC Sign\u0026Serve is enabled.\n"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string",
                        "description": "Algorithm used by Sign\u0026Serve.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The name of the zone whose configuration this zone will copy.\n"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey",
                        "description": "TSIG Key used in secure zone transfers\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Whether the zone is `primary` or `secondary`.\n"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Domain zone, encapsulating any nested subdomains.\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsZone:DnsZone"
                }
            ]
        },
        "akamai:index/edgeHostName:EdgeHostName": {
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "use \"product_id\" attribute instead"
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/edgeHostName:EdgeHostName"
                }
            ]
        },
        "akamai:index/gtmAsmap:GtmAsmap": {
            "description": "`akamai.GtmAsmap` provides the resource for creating, configuring and importing a gtm AS Map to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_map_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoAsmap = new akamai.GtmAsmap(\"demo_asmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other AS numbers\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_asmap = akamai.GtmAsmap(\"demoAsmap\",\n    default_datacenter=akamai.GtmAsmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other AS numbers\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoAsmap = new Akamai.GtmAsmap(\"demoAsmap\", new Akamai.GtmAsmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmAsmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other AS numbers\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmAsmap(ctx, \"demoAsmap\", \u0026akamai.GtmAsmapArgs{\n\t\t\tDefaultDatacenter: \u0026akamai.GtmAsmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other AS numbers\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmAsmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                        },
                        "description": "* `datacenter_id`\n* `nickname`\n"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmASmap:GtmASmap"
                }
            ]
        },
        "akamai:index/gtmCidrmap:GtmCidrmap": {
            "description": "`akamai.GtmCidrmap` provides the resource for creating, configuring and importing a gtm Cidr Map to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_map_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoCidrmap = new akamai.GtmCidrmap(\"demo_cidrmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other CIDR Blocks\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_cidrmap = akamai.GtmCidrmap(\"demoCidrmap\",\n    default_datacenter=akamai.GtmCidrmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other CIDR Blocks\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoCidrmap = new Akamai.GtmCidrmap(\"demoCidrmap\", new Akamai.GtmCidrmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmCidrmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other CIDR Blocks\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmCidrmap(ctx, \"demoCidrmap\", \u0026akamai.GtmCidrmapArgs{\n\t\t\tDefaultDatacenter: \u0026akamai.GtmCidrmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other CIDR Blocks\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        },
                        "description": "* `datacenter_id`\n* `nickname`\n"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap"
                }
            ]
        },
        "akamai:index/gtmDatacenter:GtmDatacenter": {
            "description": "`akamai.GtmDatacenter` provides the resource for creating, configuring and importing a gtm datacenter to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_datacenter_id`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoDatacenter = new akamai.GtmDatacenter(\"demo_datacenter\", {\n    domain: \"demo_domain.akadns.net\",\n    nickname: \"demo_datacenter\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_datacenter = akamai.GtmDatacenter(\"demoDatacenter\",\n    domain=\"demo_domain.akadns.net\",\n    nickname=\"demo_datacenter\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoDatacenter = new Akamai.GtmDatacenter(\"demoDatacenter\", new Akamai.GtmDatacenterArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            Nickname = \"demo_datacenter\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDatacenter(ctx, \"demoDatacenter\", \u0026akamai.GtmDatacenterArgs{\n\t\t\tDomain:   pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tNickname: pulumi.String(\"demo_datacenter\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "* `continent`\n* `country`\n* `latitude`\n* `longitude`\n* `state_or_province`\n"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string",
                    "description": "datacenter nickname\n* `default_load_object`\n* `load_object`\n* `load_object_port`\n"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean",
                    "description": "* `continent`\n* `country`\n* `latitude`\n* `longitude`\n* `state_or_province`\n"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string",
                    "description": "datacenter nickname\n* `default_load_object`\n* `load_object`\n* `load_object_port`\n"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean",
                        "description": "* `continent`\n* `country`\n* `latitude`\n* `longitude`\n* `state_or_province`\n"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "datacenter nickname\n* `default_load_object`\n* `load_object`\n* `load_object_port`\n"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter"
                }
            ]
        },
        "akamai:index/gtmDomain:GtmDomain": {
            "description": "`akamai.GtmDomain` provides the resource for creating, configuring and importing a gtm domain to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demodomain = new akamai.GtmDomain(\"demodomain\", {\n    comment: \"some comment\",\n    contract: \"XXX\",\n    group: \"100\",\n    type: \"basic\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemodomain = akamai.GtmDomain(\"demodomain\",\n    comment=\"some comment\",\n    contract=\"XXX\",\n    group=\"100\",\n    type=\"basic\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demodomain = new Akamai.GtmDomain(\"demodomain\", new Akamai.GtmDomainArgs\n        {\n            Comment = \"some comment\",\n            Contract = \"XXX\",\n            Group = \"100\",\n            Type = \"basic\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDomain(ctx, \"demodomain\", \u0026akamai.GtmDomainArgs{\n\t\t\tComment:  pulumi.String(\"some comment\"),\n\t\t\tContract: pulumi.String(\"XXX\"),\n\t\t\tGroup:    pulumi.String(\"100\"),\n\t\t\tType:     pulumi.String(\"basic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string",
                    "description": "A descriptive comment\n"
                },
                "contract": {
                    "type": "string",
                    "description": "The contract ID (if creating domain)\n"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer",
                    "description": "* `load_imbalance_percentage`\n* `default_ssl_client_private_key`\n"
                },
                "defaultUnreachableThreshold": {
                    "type": "number",
                    "description": "* `min_pingable_region_fraction`\n* `servermonitor_liveness_count`\n* `round_robin_prefix`\n* `servermonitor_load_count`\n* `ping_interval`\n* `max_ttl`\n* `default_health_max`\n* `map_update_interval`\n* `max_properties`\n* `max_resources`\n* `default_error_penalty`\n* `max_test_timeout`\n* `default_health_multiplier`\n* `servermonitor_pool`\n* `min_ttl`\n* `default_max_unreachable_penalty`\n* `default_health_threshold`\n* `min_test_interval`\n* `ping_packet_size`\n"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string",
                    "description": "The currently selected group ID (if creating domain)\n"
                },
                "loadFeedback": {
                    "type": "boolean",
                    "description": "* `default_ssl_client_certificate`\n"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Domain type\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string",
                    "description": "A descriptive comment\n"
                },
                "contract": {
                    "type": "string",
                    "description": "The contract ID (if creating domain)\n"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer",
                    "description": "* `load_imbalance_percentage`\n* `default_ssl_client_private_key`\n"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string",
                    "description": "The currently selected group ID (if creating domain)\n"
                },
                "loadFeedback": {
                    "type": "boolean",
                    "description": "* `default_ssl_client_certificate`\n"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Domain type\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string",
                        "description": "A descriptive comment\n"
                    },
                    "contract": {
                        "type": "string",
                        "description": "The contract ID (if creating domain)\n"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer",
                        "description": "* `load_imbalance_percentage`\n* `default_ssl_client_private_key`\n"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number",
                        "description": "* `min_pingable_region_fraction`\n* `servermonitor_liveness_count`\n* `round_robin_prefix`\n* `servermonitor_load_count`\n* `ping_interval`\n* `max_ttl`\n* `default_health_max`\n* `map_update_interval`\n* `max_properties`\n* `max_resources`\n* `default_error_penalty`\n* `max_test_timeout`\n* `default_health_multiplier`\n* `servermonitor_pool`\n* `min_ttl`\n* `default_max_unreachable_penalty`\n* `default_health_threshold`\n* `min_test_interval`\n* `ping_packet_size`\n"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string",
                        "description": "The currently selected group ID (if creating domain)\n"
                    },
                    "loadFeedback": {
                        "type": "boolean",
                        "description": "* `default_ssl_client_certificate`\n"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Domain type\n"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDomain:GtmDomain"
                }
            ]
        },
        "akamai:index/gtmGeomap:GtmGeomap": {
            "description": "`akamai.GtmGeomap` provides the resource for creating, configuring and importing a gtm Geographic map to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_map_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoGeomap = new akamai.GtmGeomap(\"demo_geomap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Others\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_geomap = akamai.GtmGeomap(\"demoGeomap\",\n    default_datacenter=akamai.GtmGeomapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Others\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoGeomap = new Akamai.GtmGeomap(\"demoGeomap\", new Akamai.GtmGeomapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmGeomapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Others\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmGeomap(ctx, \"demoGeomap\", \u0026akamai.GtmGeomapArgs{\n\t\t\tDefaultDatacenter: \u0026akamai.GtmGeomapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Others\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    },
                    "description": "* `datacenter_id`\n* `nickname`\n"
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                        },
                        "description": "* `datacenter_id`\n* `nickname`\n"
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name\n* `default_datacenter`\n* `datacenter_id`\n* `nickname`\n"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmGeomap:GtmGeomap"
                }
            ]
        },
        "akamai:index/gtmProperty:GtmProperty": {
            "description": "`akamai.GtmProperty` provides the resource for creating, configuring and importing a gtm property to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_property_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoProperty = new akamai.GtmProperty(\"demo_property\", {\n    domain: \"demo_domain.akadns.net\",\n    handoutLimit: 5,\n    handoutMode: \"normal\",\n    scoreAggregationType: \"median\",\n    trafficTargets: [{\n        datacenterId: 3131,\n    }],\n    type: \"weighted-round-robin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_property = akamai.GtmProperty(\"demoProperty\",\n    domain=\"demo_domain.akadns.net\",\n    handout_limit=5,\n    handout_mode=\"normal\",\n    score_aggregation_type=\"median\",\n    traffic_targets=[akamai.GtmPropertyTrafficTargetArgs(\n        datacenter_id=3131,\n    )],\n    type=\"weighted-round-robin\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoProperty = new Akamai.GtmProperty(\"demoProperty\", new Akamai.GtmPropertyArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            HandoutLimit = 5,\n            HandoutMode = \"normal\",\n            ScoreAggregationType = \"median\",\n            TrafficTargets = \n            {\n                new Akamai.Inputs.GtmPropertyTrafficTargetArgs\n                {\n                    DatacenterId = 3131,\n                },\n            },\n            Type = \"weighted-round-robin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmProperty(ctx, \"demoProperty\", \u0026akamai.GtmPropertyArgs{\n\t\t\tDomain:               pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tHandoutLimit:         pulumi.Int(5),\n\t\t\tHandoutMode:          pulumi.String(\"normal\"),\n\t\t\tScoreAggregationType: pulumi.String(\"median\"),\n\t\t\tTrafficTargets: akamai.GtmPropertyTrafficTargetArray{\n\t\t\t\t\u0026akamai.GtmPropertyTrafficTargetArgs{\n\t\t\t\t\tDatacenterId: pulumi.Int(3131),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"weighted-round-robin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean",
                    "description": "* `static_ttl`\n* `unreachable_threshold`\n* `health_multiplier`\n* `dynamic_ttl`\n* `max_unreachable_penalty`\n* `map_name`\n* `load_imbalance_percentage`\n* `health_max`\n* `cname`\n* `comments`\n* `ghost_demand_reporting`\n* `min_live_fraction`\n"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "* `stickiness_bonus_percentage`\n* `stickiness_bonus_constant`\n* `health_threshold`\n"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    },
                    "description": "* `type`\n* `ttl`\n"
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    },
                    "description": "* `datacenter_id`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Property type  \n* `score_aggregation_type`\n"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean",
                    "description": "* `backup_ip`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n* `failover_delay`\n* `failback_delay`\n"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "trafficTargets",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean",
                    "description": "* `static_ttl`\n* `unreachable_threshold`\n* `health_multiplier`\n* `dynamic_ttl`\n* `max_unreachable_penalty`\n* `map_name`\n* `load_imbalance_percentage`\n* `health_max`\n* `cname`\n* `comments`\n* `ghost_demand_reporting`\n* `min_live_fraction`\n"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean",
                    "description": "* `stickiness_bonus_percentage`\n* `stickiness_bonus_constant`\n* `health_threshold`\n"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    },
                    "description": "* `type`\n* `ttl`\n"
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    },
                    "description": "* `datacenter_id`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Property type  \n* `score_aggregation_type`\n"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean",
                    "description": "* `backup_ip`\n"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n* `failover_delay`\n* `failback_delay`\n"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "trafficTargets",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean",
                        "description": "* `static_ttl`\n* `unreachable_threshold`\n* `health_multiplier`\n* `dynamic_ttl`\n* `max_unreachable_penalty`\n* `map_name`\n* `load_imbalance_percentage`\n* `health_max`\n* `cname`\n* `comments`\n* `ghost_demand_reporting`\n* `min_live_fraction`\n"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean",
                        "description": "* `stickiness_bonus_percentage`\n* `stickiness_bonus_constant`\n* `health_threshold`\n"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Liveness test name\n* `test_interval`\n* `test_object_protocol`\n* `test_timeout`\n"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        },
                        "description": "* `type`\n* `ttl`\n"
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        },
                        "description": "* `datacenter_id`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Property type  \n* `score_aggregation_type`\n"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean",
                        "description": "* `backup_ip`\n"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n* `failover_delay`\n* `failback_delay`\n"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmProperty:GtmProperty"
                }
            ]
        },
        "akamai:index/gtmResource:GtmResource": {
            "description": "`akamai.GtmResource` provides the resource for creating, configuring and importing a gtm resource to integrate easily with your existing GTM infrastructure to provide a secure, high performance, highly available and scalable solution for Global Traffic Management. Note: Import requires an ID of the format: `existing_domain_name`:`existing_resource_name`\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoResource = new akamai.GtmResource(\"demo_resource\", {\n    aggregationType: \"latest\",\n    domain: \"demo_domain.akadns.net\",\n    type: \"XML load object via HTTP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_resource = akamai.GtmResource(\"demoResource\",\n    aggregation_type=\"latest\",\n    domain=\"demo_domain.akadns.net\",\n    type=\"XML load object via HTTP\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoResource = new Akamai.GtmResource(\"demoResource\", new Akamai.GtmResourceArgs\n        {\n            AggregationType = \"latest\",\n            Domain = \"demo_domain.akadns.net\",\n            Type = \"XML load object via HTTP\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmResource(ctx, \"demoResource\", \u0026akamai.GtmResourceArgs{\n\t\t\tAggregationType: pulumi.String(\"latest\"),\n\t\t\tDomain:          pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tType:            pulumi.String(\"XML load object via HTTP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `aggregation_type`\n"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    },
                    "description": "* `datacenter_id`\n* `load_object`\n* `load_object_port`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Resource type\n"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Resource name\n* `aggregation_type`\n"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    },
                    "description": "* `datacenter_id`\n* `load_object`\n* `load_object_port`\n"
                },
                "type": {
                    "type": "string",
                    "description": "Resource type\n"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean",
                    "description": "Wait for transaction to complete\n"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string",
                        "description": "Resource name\n* `aggregation_type`\n"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        },
                        "description": "* `datacenter_id`\n* `load_object`\n* `load_object_port`\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Resource type\n"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean",
                        "description": "Wait for transaction to complete\n"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmResource:GtmResource"
                }
            ]
        },
        "akamai:index/property:Property": {
            "description": "The `akamai.Property` resource represents an Akamai property configuration. \nThis resource lets you to create, update, and activate properties on the \nAkamai platform. \n\nAkamai’s edge network caches your web assets near to servers that request them. \nA property provides the main way to control how edge servers respond to various \nkinds of requests for those assets. Properties apply rules to a set of hostnames, \nand you can only apply one property at a time to any given hostname. Each property \nis assigned to a product, which determines which behaviors you can use. Each \nproperty’s default rule needs a valid content provider (CP) code assigned to bill \nand report for the service.\n\n\u003e __NOTE:__ In version 0.10 and earlier of this resource, it also controlled content provider (CP) codes, origin settings, rules, and hostname associations. Starting with version 1.0.0, this logic is broken out into individual resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.Property(\"example\", {\n    contacts: [\"user@example.org\"],\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: {\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    ruleFormat: \"v2020-03-04\",\n    rules: data.akamai_property_rules_template.example.json,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.Property(\"example\",\n    contacts=[\"user@example.org\"],\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames={\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    rule_format=\"v2020-03-04\",\n    rules=data[\"akamai_property_rules_template\"][\"example\"][\"json\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            Contacts = \n            {\n                \"user@example.org\",\n            },\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                { \"example.org\", \"example.org.edgesuite.net\" },\n                { \"www.example.org\", \"example.org.edgesuite.net\" },\n                { \"sub.example.org\", \"sub.example.org.edgesuite.net\" },\n            },\n            RuleFormat = \"v2020-03-04\",\n            Rules = data.Akamai_property_rules_template.Example.Json,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewProperty(ctx, \"example\", \u0026akamai.PropertyArgs{\n\t\t\tContacts: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.org\"),\n\t\t\t},\n\t\t\tProductId:  pulumi.String(\"prd_SPM\"),\n\t\t\tContractId: pulumi.Any(_var.Contractid),\n\t\t\tGroupId:    pulumi.Any(_var.Groupid),\n\t\t\tHostnames: pulumi.StringMap{\n\t\t\t\t\"example.org\":     pulumi.String(\"example.org.edgesuite.net\"),\n\t\t\t\t\"www.example.org\": pulumi.String(\"example.org.edgesuite.net\"),\n\t\t\t\t\"sub.example.org\": pulumi.String(\"sub.example.org.edgesuite.net\"),\n\t\t\t},\n\t\t\tRuleFormat: pulumi.String(\"v2020-03-04\"),\n\t\t\tRules:      pulumi.Any(data.Akamai_property_rules_template.Example.Json),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `name` - (Required) The property name.\n* `contact` - (Required) One or more email addresses to send activation status changes to.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix. \n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required to create, otherwise Optional) A product's unique ID, including the `prd_` prefix.\n* `hostnames` - (Required) A mapping of public hostnames to edge hostnames. For example: `{\"example.org\" = \"example.org.edgesuite.net\"}`\n* `rules` - (Required) A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.\n* `rule_format` - (Optional) The [rule format](https://developer.akamai.com/api/core_features/property_manager/v1.html#getruleformats) to use. Uses the latest rule format by default.\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe resource returns these attributes:\n\n* `warnings` - The contents of `warnings` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `latest_version` - The version of the property you've created or updated rules for. The Akamai Provider always uses the latest version or creates a new version if latest is not editable.\n* `production_version` - The current version of the property active on the Akamai production network.\n* `staging_version` - The current version of the property active on the Akamai staging network.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_property\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import Akamai properties using either the `property_id` or a comma-delimited\n\nstring of the property, contract, and group IDs. You'll need to enter the string of IDs if the property belongs to multiple groups or contracts. If using the string of IDs, you need to enter them in this order`property_id,contract_id,group_id` Here are some examples\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123\n```\n\n ",
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    }
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "use \"product_id\" attribute instead"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                        }
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/property:Property"
                }
            ]
        },
        "akamai:index/propertyActivation:PropertyActivation": {
            "description": "The `akamai.PropertyActivation` resource lets you activate a property version. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.  \n\nBefore activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst email = \"user@example.org\";\nconst ruleFormat = \"v2020-03-04\";\nconst example = new akamai.Property(\"example\", {\n    contacts: [\"user@example.org\"],\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: {\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    ruleFormat: ruleFormat,\n    rules: fs.readFileSync(`${path.module}/main.json`),\n});\nconst exampleStaging = new akamai.PropertyActivation(\"exampleStaging\", {\n    propertyId: example.id,\n    contacts: [email],\n    version: example.latestVersion,\n});\n// not specifying network will target STAGING\nconst exampleProd = new akamai.PropertyActivation(\"exampleProd\", {\n    propertyId: example.id,\n    network: \"PRODUCTION\",\n    version: 3,\n    contacts: [email],\n}, {\n    dependsOn: [exampleStaging],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nemail = \"user@example.org\"\nrule_format = \"v2020-03-04\"\nexample = akamai.Property(\"example\",\n    contacts=[\"user@example.org\"],\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames={\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    rule_format=rule_format,\n    rules=(lambda path: open(path).read())(f\"{path['module']}/main.json\"))\nexample_staging = akamai.PropertyActivation(\"exampleStaging\",\n    property_id=example.id,\n    contacts=[email],\n    version=example.latest_version)\n# not specifying network will target STAGING\nexample_prod = akamai.PropertyActivation(\"exampleProd\",\n    property_id=example.id,\n    network=\"PRODUCTION\",\n    version=3,\n    contacts=[email],\n    opts=pulumi.ResourceOptions(depends_on=[example_staging]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var email = \"user@example.org\";\n        var ruleFormat = \"v2020-03-04\";\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            Contacts = \n            {\n                \"user@example.org\",\n            },\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                { \"example.org\", \"example.org.edgesuite.net\" },\n                { \"www.example.org\", \"example.org.edgesuite.net\" },\n                { \"sub.example.org\", \"sub.example.org.edgesuite.net\" },\n            },\n            RuleFormat = ruleFormat,\n            Rules = File.ReadAllText($\"{path.Module}/main.json\"),\n        });\n        var exampleStaging = new Akamai.PropertyActivation(\"exampleStaging\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Contacts = \n            {\n                email,\n            },\n            Version = example.LatestVersion,\n        });\n        // not specifying network will target STAGING\n        var exampleProd = new Akamai.PropertyActivation(\"exampleProd\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Network = \"PRODUCTION\",\n            Version = 3,\n            Contacts = \n            {\n                email,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                exampleStaging,\n            },\n        });\n    }\n\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `property_id` - (Required) The property’s unique identifier, including the `prp_` prefix. \n* `contact` - (Required) One or more email addresses to send activation status changes to.\n* `version` - (Required) The property version to activate. Previously this field was optional. It now depends on the `akamai.Property` resource to identify latest instead of calculating it locally.  This association helps keep the dependency tree properly aligned. To always use the latest version, enter this value `{resource}.{resource identifier}.{field name}`. Using the example code above, the entry would be `akamai_property.example.latest_version` since we want the value of the `latest_version` attribute in the `akamai.Property` resource labeled `example`.\n* `network` - (Optional) Akamai network to activate on, either `STAGING` or `PRODUCTION`. `STAGING` is the default.\n* `property` - (Deprecated) Replaced by `property_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe following attributes are returned:\n\n* `id` - The unique identifier for this activation.\n* `warnings` - The contents of `warnings` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `activation_id` - The ID given to the activation event while it's in progress.\n* `status` - The property version’s activation status on the selected network.\n",
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyActivation:PropertyActivation"
                }
            ]
        },
        "akamai:index/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyVariables:PropertyVariables"
                }
            ]
        },
        "akamai:properties/cpCode:CpCode": {
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "product"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.CpCode has been deprecated in favor of akamai.CpCode"
        },
        "akamai:properties/edgeHostName:EdgeHostName": {
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "use \"product_id\" attribute instead"
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.EdgeHostName has been deprecated in favor of akamai.EdgeHostName"
        },
        "akamai:properties/property:Property": {
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                    }
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "use \"contract_id\" attribute instead"
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "use \"group_id\" attribute instead"
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "use \"product_id\" attribute instead"
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "\"contact\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "use \"contract_id\" attribute instead"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "\"cp_code\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "use \"group_id\" attribute instead"
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Mapping of edge hostname CNAMEs to other CNAMEs\n"
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "\"is_secure\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "\"origin\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "use \"product_id\" attribute instead"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                        }
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "\"variables\" is no longer supported by this resource type - See Akamai Terraform Upgrade Guide"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.Property has been deprecated in favor of akamai.Property"
        },
        "akamai:properties/propertyActivation:PropertyActivation": {
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyActivation has been deprecated in favor of akamai.PropertyActivation"
        },
        "akamai:properties/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "resource \"akamai_property_variables\" is no longer supported - See Akamai Terraform Upgrade Guide"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyVariables has been deprecated in favor of akamai.PropertyVariables"
        },
        "akamai:trafficmanagement/gtmASmap:GtmASmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmASmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmASmap has been deprecated in favor of akamai.GtmAsmap"
        },
        "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmCidrmap has been deprecated in favor of akamai.GtmCidrmap"
        },
        "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDatacenter has been deprecated in favor of akamai.GtmDatacenter"
        },
        "akamai:trafficmanagement/gtmDomain:GtmDomain": {
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDomain has been deprecated in favor of akamai.GtmDomain"
        },
        "akamai:trafficmanagement/gtmGeomap:GtmGeomap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmGeomap has been deprecated in favor of akamai.GtmGeomap"
        },
        "akamai:trafficmanagement/gtmProperty:GtmProperty": {
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "trafficTargets",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "trafficTargets",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmProperty has been deprecated in favor of akamai.GtmProperty"
        },
        "akamai:trafficmanagement/gtmResource:GtmResource": {
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmResource has been deprecated in favor of akamai.GtmResource"
        }
    },
    "functions": {
        "akamai:edgedns/getAuthoritiesSet:getAuthoritiesSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getAuthoritiesSet has been deprecated in favor of akamai.getAuthoritiesSet"
        },
        "akamai:edgedns/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getDnsRecordSet has been deprecated in favor of akamai.getDnsRecordSet"
        },
        "akamai:index/getAppSecConfiguration:getAppSecConfiguration": {
            "description": "Use the `akamai.getAppSecConfiguration` data source to retrieve the list of security configurations, or information about a specific security configuration.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configurations = akamai.getAppSecConfiguration({});\nexport const configurationList = configurations.then(configurations =\u003e configurations.outputText);\nconst specificConfiguration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nexport const latest = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.latestVersion);\nexport const staging = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.stagingVersion);\nexport const production = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.productionVersion);\nexport const id = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.configId);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfigurations = akamai.get_app_sec_configuration()\npulumi.export(\"configurationList\", configurations.output_text)\nspecific_configuration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\npulumi.export(\"latest\", specific_configuration.latest_version)\npulumi.export(\"staging\", specific_configuration.staging_version)\npulumi.export(\"production\", specific_configuration.production_version)\npulumi.export(\"id\", specific_configuration.config_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configurations = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync());\n        this.ConfigurationList = configurations.Apply(configurations =\u003e configurations.OutputText);\n        var specificConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        this.Latest = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.LatestVersion);\n        this.Staging = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.StagingVersion);\n        this.Production = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.ProductionVersion);\n        this.Id = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.ConfigId);\n    }\n\n    [Output(\"configurationList\")]\n    public Output\u003cstring\u003e ConfigurationList { get; set; }\n    [Output(\"latest\")]\n    public Output\u003cstring\u003e Latest { get; set; }\n    [Output(\"staging\")]\n    public Output\u003cstring\u003e Staging { get; set; }\n    [Output(\"production\")]\n    public Output\u003cstring\u003e Production { get; set; }\n    [Output(\"id\")]\n    public Output\u003cstring\u003e Id { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tconfigurations, err := akamai.GetAppSecConfiguration(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"configurationList\", configurations.OutputText)\n\t\topt0 := \"Akamai Tools\"\n\t\tspecificConfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"latest\", specificConfiguration.LatestVersion)\n\t\tctx.Export(\"staging\", specificConfiguration.StagingVersion)\n\t\tctx.Export(\"production\", specificConfiguration.ProductionVersion)\n\t\tctx.Export(\"id\", specificConfiguration.ConfigId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfiguration.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of a specific security configuration. If not supplied, information about all security configurations is returned.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the specified security configuration. Returned only if `name` was specified.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "The last version of the specified security configuration created. Returned only if `name` was specified.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the following information about all available security configurations: config_id, name, latest_version, version_active_in_staging, and version_active_in_production.\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "The version of the specified security configuration currently active in production. Returned only if `name` was specified.\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "The version of the specified security configuration currently active in staging. Returned only if `name` was specified.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionVersion",
                    "stagingVersion",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecConfigurationVersion:getAppSecConfigurationVersion": {
            "description": "Use the `akamai.getAppSecConfigurationVersion` data source to retrieve information about the versions of a security configuration, or about a specific version.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst specificConfiguration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst versions = specificConfiguration.then(specificConfiguration =\u003e akamai.getAppSecConfigurationVersion({\n    configId: specificConfiguration.configId,\n}));\nexport const versionsOutputText = versions.then(versions =\u003e versions.outputText);\nexport const versionsLatest = versions.then(versions =\u003e versions.latestVersion);\nconst specificVersion = specificConfiguration.then(specificConfiguration =\u003e akamai.getAppSecConfigurationVersion({\n    configId: specificConfiguration.configId,\n    version: 42,\n}));\nexport const specificVersionVersion = specificVersion.then(specificVersion =\u003e specificVersion.version);\nexport const specificVersionStaging = specificVersion.then(specificVersion =\u003e specificVersion.stagingStatus);\nexport const specificVersionProduction = specificVersion.then(specificVersion =\u003e specificVersion.productionStatus);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nspecific_configuration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nversions = akamai.get_app_sec_configuration_version(config_id=specific_configuration.config_id)\npulumi.export(\"versionsOutputText\", versions.output_text)\npulumi.export(\"versionsLatest\", versions.latest_version)\nspecific_version = akamai.get_app_sec_configuration_version(config_id=specific_configuration.config_id,\n    version=42)\npulumi.export(\"specificVersionVersion\", specific_version.version)\npulumi.export(\"specificVersionStaging\", specific_version.staging_status)\npulumi.export(\"specificVersionProduction\", specific_version.production_status)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var specificConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var versions = specificConfiguration.Apply(specificConfiguration =\u003e Output.Create(Akamai.GetAppSecConfigurationVersion.InvokeAsync(new Akamai.GetAppSecConfigurationVersionArgs\n        {\n            ConfigId = specificConfiguration.ConfigId,\n        })));\n        this.VersionsOutputText = versions.Apply(versions =\u003e versions.OutputText);\n        this.VersionsLatest = versions.Apply(versions =\u003e versions.LatestVersion);\n        var specificVersion = specificConfiguration.Apply(specificConfiguration =\u003e Output.Create(Akamai.GetAppSecConfigurationVersion.InvokeAsync(new Akamai.GetAppSecConfigurationVersionArgs\n        {\n            ConfigId = specificConfiguration.ConfigId,\n            Version = 42,\n        })));\n        this.SpecificVersionVersion = specificVersion.Apply(specificVersion =\u003e specificVersion.Version);\n        this.SpecificVersionStaging = specificVersion.Apply(specificVersion =\u003e specificVersion.StagingStatus);\n        this.SpecificVersionProduction = specificVersion.Apply(specificVersion =\u003e specificVersion.ProductionStatus);\n    }\n\n    [Output(\"versionsOutputText\")]\n    public Output\u003cstring\u003e VersionsOutputText { get; set; }\n    [Output(\"versionsLatest\")]\n    public Output\u003cstring\u003e VersionsLatest { get; set; }\n    [Output(\"specificVersionVersion\")]\n    public Output\u003cstring\u003e SpecificVersionVersion { get; set; }\n    [Output(\"specificVersionStaging\")]\n    public Output\u003cstring\u003e SpecificVersionStaging { get; set; }\n    [Output(\"specificVersionProduction\")]\n    public Output\u003cstring\u003e SpecificVersionProduction { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tspecificConfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversions, err := akamai.GetAppSecConfigurationVersion(ctx, \u0026akamai.GetAppSecConfigurationVersionArgs{\n\t\t\tConfigId: specificConfiguration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionsOutputText\", versions.OutputText)\n\t\tctx.Export(\"versionsLatest\", versions.LatestVersion)\n\t\topt1 := 42\n\t\tspecificVersion, err := akamai.GetAppSecConfigurationVersion(ctx, \u0026akamai.GetAppSecConfigurationVersionArgs{\n\t\t\tConfigId: specificConfiguration.ConfigId,\n\t\t\tVersion:  \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificVersionVersion\", specificVersion.Version)\n\t\tctx.Export(\"specificVersionStaging\", specificVersion.StagingStatus)\n\t\tctx.Export(\"specificVersionProduction\", specificVersion.ProductionStatus)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use. If not supplied, information about all versions of the specified security configuration is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "The last version of the security configuration created.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the following information about all versions of the security configuration: version number, staging status, and production status.\n"
                    },
                    "productionStatus": {
                        "type": "string",
                        "description": "The status of the specified version in production: \"Active\", \"Inactive\", or \"Deactivated\". Returned only if `version` was specified.\n"
                    },
                    "stagingStatus": {
                        "type": "string",
                        "description": "The status of the specified version in staging: \"Active\", \"Inactive\", or \"Deactivated\". Returned only if `version` was specified.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionStatus",
                    "stagingStatus",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRuleActions:getAppSecCustomRuleActions": {
            "description": "Use the `akamai.getAppSecCustomRuleActions` data source to retrieve information about the actions defined for the custom rules associated with a specific security configuration, version and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst customRuleActionsAppSecCustomRuleActions = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecCustomRuleActions({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n    policyId: \"crAP_75829\",\n}));\nexport const customRuleActions = customRuleActionsAppSecCustomRuleActions.then(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\ncustom_rule_actions_app_sec_custom_rule_actions = akamai.get_app_sec_custom_rule_actions(config_id=configuration.config_id,\n    version=configuration.latest_version,\n    policy_id=\"crAP_75829\")\npulumi.export(\"customRuleActions\", custom_rule_actions_app_sec_custom_rule_actions.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var customRuleActionsAppSecCustomRuleActions = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecCustomRuleActions.InvokeAsync(new Akamai.GetAppSecCustomRuleActionsArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n                PolicyId = \"crAP_75829\",\n            }));\n        });\n        this.CustomRuleActions = customRuleActionsAppSecCustomRuleActions.Apply(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.OutputText);\n    }\n\n    [Output(\"customRuleActions\")]\n    public Output\u003cstring\u003e CustomRuleActions { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRuleActionsAppSecCustomRuleActions, err := akamai.GetAppSecCustomRuleActions(ctx, \u0026akamai.GetAppSecCustomRuleActionsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t\tPolicyId: \"crAP_75829\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleActions\", customRuleActionsAppSecCustomRuleActions.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "policyId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID, name, and action of all custom rules associated with the specified security configuration, version and security policy.\n"
                    },
                    "policyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "policyId",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRules:getAppSecCustomRules": {
            "description": "Use the `akamai.getAppSecCustomRules` data source to retrieve a list of the custom rules defined for a security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst customRules = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n}));\nexport const customRulesList = customRules.then(customRules =\u003e customRules.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\ncustom_rules = akamai.get_app_sec_custom_rules(config_id=configuration.config_id)\npulumi.export(\"customRulesList\", custom_rules.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var customRules = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomRulesList = customRules.Apply(customRules =\u003e customRules.OutputText);\n    }\n\n    [Output(\"customRulesList\")]\n    public Output\u003cstring\u003e CustomRulesList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRules, err := akamai.GetAppSecCustomRules(ctx, \u0026akamai.GetAppSecCustomRulesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRulesList\", customRules.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of the custom rules defined for the security configuration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration": {
            "description": "Use the `akamai.getAppSecExportConfiguration` data source to retrieve comprehensive details about a security configuration version, including rate and security policies, rules, hostnames, and other settings. You can retrieve the entire set of information in JSON format, or a subset of the information in tabular format.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst export = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecExportConfiguration({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n    searches: [\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ],\n}));\nexport const json = _export.then(_export =\u003e _export.json);\nexport const text = _export.then(_export =\u003e _export.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nexport = akamai.get_app_sec_export_configuration(config_id=configuration.config_id,\n    version=configuration.latest_version,\n    searches=[\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ])\npulumi.export(\"json\", export.json)\npulumi.export(\"text\", export.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var export = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecExportConfiguration.InvokeAsync(new Akamai.GetAppSecExportConfigurationArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n                Searches = \n                {\n                    \"securityPolicies\",\n                    \"selectedHosts\",\n                },\n            }));\n        });\n        this.Json = export.Apply(export =\u003e export.Json);\n        this.Text = export.Apply(export =\u003e export.OutputText);\n    }\n\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"text\")]\n    public Output\u003cstring\u003e Text { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texport, err := akamai.GetAppSecExportConfiguration(ctx, \u0026akamai.GetAppSecExportConfigurationArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t\tSearches: []string{\n\t\t\t\t\"securityPolicies\",\n\t\t\t\t\"selectedHosts\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"json\", export.Json)\n\t\tctx.Export(\"text\", export.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracket-delimited list of quoted strings specifying the types of information to be retrieved and made available for display in the `output_text` format. The following types are available:\n* customRules\n* matchTargets\n* ratePolicies\n* reputationProfiles\n* rulesets\n* securityPolicies\n* selectableHosts\n* selectedHosts\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "The complete set of information about the specified security configuration version, in JSON format. This includes the types available for the `search` parameter, plus several additional fields such as createDate and createdBy.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the types of data specified in the `search` parameter. Included only if the `search` parameter specifies at least one type.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecMatchTargets:getAppSecMatchTargets": {
            "description": "Use the `akamai.getAppSecMatchTargets` data source to retrieve information about the match targets associated with a given configuration version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst matchTargetsAppSecMatchTargets = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecMatchTargets({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n}));\nexport const matchTargets = matchTargetsAppSecMatchTargets.then(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nmatch_targets_app_sec_match_targets = akamai.get_app_sec_match_targets(config_id=configuration.config_id,\n    version=configuration.latest_version)\npulumi.export(\"matchTargets\", match_targets_app_sec_match_targets.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var matchTargetsAppSecMatchTargets = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecMatchTargets.InvokeAsync(new Akamai.GetAppSecMatchTargetsArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n            }));\n        });\n        this.MatchTargets = matchTargetsAppSecMatchTargets.Apply(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.OutputText);\n    }\n\n    [Output(\"matchTargets\")]\n    public Output\u003cstring\u003e MatchTargets { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmatchTargetsAppSecMatchTargets, err := akamai.GetAppSecMatchTargets(ctx, \u0026akamai.GetAppSecMatchTargetsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"matchTargets\", matchTargetsAppSecMatchTargets.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and Policy ID of all match targets associated with the specified security configuration and version.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSecurityPolicy:getAppSecSecurityPolicy": {
            "description": "Use the `akamai.getAppSecSecurityPolicy` data source to retrieve information about the security policies associated with a specific security configuration version, or about a specific security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst securityPolicies = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n}));\nexport const securityPoliciesList = securityPolicies.then(securityPolicies =\u003e securityPolicies.policyLists);\nexport const securityPoliciesText = securityPolicies.then(securityPolicies =\u003e securityPolicies.outputText);\nconst specificSecurityPolicy = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n    name: \"APIs\",\n}));\nexport const specificSecurityPolicyId = specificSecurityPolicy.then(specificSecurityPolicy =\u003e specificSecurityPolicy.policyId);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nsecurity_policies = akamai.get_app_sec_security_policy(config_id=configuration.config_id,\n    version=configuration.latest_version)\npulumi.export(\"securityPoliciesList\", security_policies.policy_lists)\npulumi.export(\"securityPoliciesText\", security_policies.output_text)\nspecific_security_policy = akamai.get_app_sec_security_policy(config_id=configuration.config_id,\n    version=configuration.latest_version,\n    name=\"APIs\")\npulumi.export(\"specificSecurityPolicyId\", specific_security_policy.policy_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var securityPolicies = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n            }));\n        });\n        this.SecurityPoliciesList = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.PolicyLists);\n        this.SecurityPoliciesText = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.OutputText);\n        var specificSecurityPolicy = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n                Name = \"APIs\",\n            }));\n        });\n        this.SpecificSecurityPolicyId = specificSecurityPolicy.Apply(specificSecurityPolicy =\u003e specificSecurityPolicy.PolicyId);\n    }\n\n    [Output(\"securityPoliciesList\")]\n    public Output\u003cstring\u003e SecurityPoliciesList { get; set; }\n    [Output(\"securityPoliciesText\")]\n    public Output\u003cstring\u003e SecurityPoliciesText { get; set; }\n    [Output(\"specificSecurityPolicyId\")]\n    public Output\u003cstring\u003e SpecificSecurityPolicyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicies, err := akamai.GetAppSecSecurityPolicy(ctx, \u0026akamai.GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"securityPoliciesList\", securityPolicies.PolicyLists)\n\t\tctx.Export(\"securityPoliciesText\", securityPolicies.OutputText)\n\t\topt1 := \"APIs\"\n\t\tspecificSecurityPolicy, err := akamai.GetAppSecSecurityPolicy(ctx, \u0026akamai.GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t\tName:     \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificSecurityPolicyId\", specificSecurityPolicy.PolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the security policy to use. If not supplied, information about all security policies is returned.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of all security policies.\n"
                    },
                    "policyId": {
                        "type": "string",
                        "description": "The ID of the security policy. Included only if `name` was specified.\n"
                    },
                    "policyLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the IDs of all security policies.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "policyId",
                    "policyLists",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames": {
            "description": "Use the `akamai.getAppSecSelectableHostnames` data source to retrieve the list of hostnames that may be protected under a given security configuration version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst selectableHostnamesAppSecSelectableHostnames = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecSelectableHostnames({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n}));\nexport const selectableHostnames = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnames);\nexport const selectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnamesJson);\nexport const selectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nselectable_hostnames_app_sec_selectable_hostnames = akamai.get_app_sec_selectable_hostnames(config_id=configuration.config_id,\n    version=configuration.latest_version)\npulumi.export(\"selectableHostnames\", selectable_hostnames_app_sec_selectable_hostnames.hostnames)\npulumi.export(\"selectableHostnamesJson\", selectable_hostnames_app_sec_selectable_hostnames.hostnames_json)\npulumi.export(\"selectableHostnamesOutputText\", selectable_hostnames_app_sec_selectable_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var selectableHostnamesAppSecSelectableHostnames = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n            }));\n        });\n        this.SelectableHostnames = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.Hostnames);\n        this.SelectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.HostnamesJson);\n        this.SelectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.OutputText);\n    }\n\n    [Output(\"selectableHostnames\")]\n    public Output\u003cstring\u003e SelectableHostnames { get; set; }\n    [Output(\"selectableHostnamesJson\")]\n    public Output\u003cstring\u003e SelectableHostnamesJson { get; set; }\n    [Output(\"selectableHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectableHostnamesOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tselectableHostnamesAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026akamai.GetAppSecSelectableHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectableHostnames\", selectableHostnamesAppSecSelectableHostnames.Hostnames)\n\t\tctx.Export(\"selectableHostnamesJson\", selectableHostnamesAppSecSelectableHostnames.HostnamesJson)\n\t\tctx.Export(\"selectableHostnamesOutputText\", selectableHostnamesAppSecSelectableHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of selectable hostnames.\n"
                    },
                    "hostnamesJson": {
                        "type": "string",
                        "description": "The list of selectable hostnames in json format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the selectable hostnames showing the name and config_id of the security configuration under which the host is protected in production, or '-' if the host is not protected in production.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectedHostnames:getAppSecSelectedHostnames": {
            "description": "Use the `akamai.AppSecSelectedHostnames` data source to retrieve a list of the hostnames that are currently protected under a given security configuration version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst selectedHostnamesAppSecSelectedHostnames = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecSelectedHostnames({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n}));\nexport const selectedHostnames = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnames);\nexport const selectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnamesJson);\nexport const selectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nselected_hostnames_app_sec_selected_hostnames = akamai.get_app_sec_selected_hostnames(config_id=configuration.config_id,\n    version=configuration.latest_version)\npulumi.export(\"selectedHostnames\", selected_hostnames_app_sec_selected_hostnames.hostnames)\npulumi.export(\"selectedHostnamesJson\", selected_hostnames_app_sec_selected_hostnames.hostnames_json)\npulumi.export(\"selectedHostnamesOutputText\", selected_hostnames_app_sec_selected_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var selectedHostnamesAppSecSelectedHostnames = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecSelectedHostnames.InvokeAsync(new Akamai.GetAppSecSelectedHostnamesArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n            }));\n        });\n        this.SelectedHostnames = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.Hostnames);\n        this.SelectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.HostnamesJson);\n        this.SelectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.OutputText);\n    }\n\n    [Output(\"selectedHostnames\")]\n    public Output\u003cstring\u003e SelectedHostnames { get; set; }\n    [Output(\"selectedHostnamesJson\")]\n    public Output\u003cstring\u003e SelectedHostnamesJson { get; set; }\n    [Output(\"selectedHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectedHostnamesOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.GetAppSecConfiguration(ctx, \u0026akamai.GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tselectedHostnamesAppSecSelectedHostnames, err := akamai.LookupAppSecSelectedHostnames(ctx, \u0026akamai.LookupAppSecSelectedHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectedHostnames\", selectedHostnamesAppSecSelectedHostnames.Hostnames)\n\t\tctx.Export(\"selectedHostnamesJson\", selectedHostnamesAppSecSelectedHostnames.HostnamesJson)\n\t\tctx.Export(\"selectedHostnamesOutputText\", selectedHostnamesAppSecSelectedHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of selected hostnames.\n"
                    },
                    "hostnamesJson": {
                        "type": "string",
                        "description": "The list of selected hostnames in JSON format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the selected hostnames.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAuthoritiesSet:getAuthoritiesSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            }
        },
        "akamai:index/getContract:getContract": {
            "inputs": {
                "description": "A collection of arguments for invoking getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "groupName",
                    "id"
                ]
            }
        },
        "akamai:index/getContracts:getContracts": {
            "outputs": {
                "description": "A collection of values returned by getContracts.\n",
                "properties": {
                    "contracts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getContractsContract:getContractsContract"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "contracts",
                    "id"
                ]
            }
        },
        "akamai:index/getCpCode:getCpCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            }
        },
        "akamai:index/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            }
        },
        "akamai:index/getGroup:getGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "groupName",
                    "name",
                    "id"
                ]
            }
        },
        "akamai:index/getGroups:getGroups": {
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGroupsGroup:getGroupsGroup"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "akamai:index/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "description": "Use `akamai.getGtmDefaultDatacenter` data source to retrieve default datacenter id and nickname.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer",
                        "description": "The default datacenter ID\n"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "The default datacenter nickname\n"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            }
        },
        "akamai:index/getProperties:getProperties": {
            "description": "Use the `akamai.getProperties` data source to query and retrieve the list of properties for a group and contract \nbased on the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nReturn properties associated with the EdgeGrid API client token currently used for authentication:\n\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const myPropertyList = data.akamai_properties.example;\n```\n```python\nimport pulumi\n\npulumi.export(\"myPropertyList\", data[\"akamai_properties\"][\"example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.MyPropertyList = data.Akamai_properties.Example;\n    }\n\n    [Output(\"myPropertyList\")]\n    public Output\u003cstring\u003e MyPropertyList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"myPropertyList\", data.Akamai_properties.Example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix. \n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `properties` - A list of properties available for the contract and group IDs provided.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertiesProperty:getPropertiesProperty"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "properties",
                    "id"
                ]
            }
        },
        "akamai:index/getProperty:getProperty": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyProducts:getPropertyProducts": {
            "description": "Use the `akamai.getPropertyProducts` data source to list the products included on a contract. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThis example returns products associated with the [EdgeGrid client token](https://developer.akamai.com/getting-started/edgegrid) for a given contract:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_products[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_products\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_products.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_products.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports this argument:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix. \n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `products` - A list of supported products for the contract, including:\n  * `product_id` - The product's unique ID, including the `prd_` prefix.\n  * `product_name` - A string containing the product name.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyProductsProduct:getPropertyProductsProduct"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "products",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRuleFormats:getPropertyRuleFormats": {
            "description": "Use the `akamai.getPropertyRuleFormats` data source to query the list of \nknown rule formats. \nYou use rule formats to [freeze](https://developer.akamai.com/api/core_features/property_manager/v1.html#freezerf) or \n[update](https://developer.akamai.com/api/core_features/property_manager/v1.html#updaterf) the versioned set of behaviors\nand criteria a rule tree invokes. Without this mechanism, behaviors and criteria \nwould update automatically and generate unexpected errors. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse this example to list available property rule formats:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rule_formats[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rule_formats\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rule_formats.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rule_formats.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThere are no arguments available for this data source.\n",
            "outputs": {
                "description": "A collection of values returned by getPropertyRuleFormats.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ruleFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "ruleFormats",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRules:getPropertyRules": {
            "description": "Use the `akamai.getPropertyRules` data source to query and retrieve the rule tree of \nan existing property version. This data source lets you search across the contracts \nand groups you have access to.\n\n## Basic usage\n\nThis example returns the rule tree for version 3 of a property based on the selected contract and group:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rules[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rules\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rules.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v2/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rules.My-example)\n\t\treturn nil\n\t})\n}\n```\n\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix. \n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `property_id` - (Required) A property's unique ID, including the `prp_` prefix. \n* `version` - (Optional) The version to return. Returns the latest version by default.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `rules` - A JSON-encoded rule tree for the property.\n* `errors` - A list of validation errors for the rule tree object returned. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the Property Manager API documentation.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate": {
            "description": "The `akamai.getPropertyRulesTemplate` data source lets you configure a rule tree through the use of JSON template files. A rule tree is a nested block of property \nrules in JSON format that include match criteria and behaviors. \n\nWith this data source you define the location of the JSON template files and provide information about any user-defined variables included within the templates.\n\nThe template format used in this data source matches those used in the [Property Manager CLI](https://learn.akamai.com/en-us/learn_akamai/getting_started_with_akamai_developers/developer_tools/getstartedpmcli.html#addanewsnippet).\n\nYou can pass user-defined variables by supplying either: \n\n* paths to `variableDefinitions.json` and `variables.json` with syntax used in Property Manager CLI, or \n* a set of provider variables.\n\n## Referencing sub-files from a template\n\nYou can split each template out into a series of smaller template files. To add \nthem to this data source, you need to include them in the currently loaded file, \nwhich corresponds to the value in the `template_file` argument.  For example, to \ninclude `example-file.json` from the `template` directory, use this syntax \nincluding the quotes: `\"#include:example-file.json\"`.  All files are resolved in \nrelation to the directory that contains the starting template file. \n\n## Inserting variables in a template\n\nYou can also add variables to a template by using a string like `“${env.\u003cvariableName\u003e}\"`. You'll need the quotes here too.  \nThese variables follow the format used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager#update-the-variabledefinitions-file).  They differ from the provider variables which should resolve normally.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n## Argument reference\n\n* `template_file` - (Required) The absolute path to your top-level JSON template file. The top-level template combines smaller, nested JSON templates to form your property rule tree.\n* `variables` - (Optional) A definition of a variable. Variables aren't required and you can use multiple ones if needed. This argument conflicts with the `variable_definition_file` and `variable_values_file` arguments. A `variables` block includes:\n    * `name` - The name of the variable used in template.\n    * `type` - The type of variable: `string`, `number`, `bool`, or `jsonBlock`.\n    * `value` - The value of the variable passed as a string.\n* `variable_definition_file` - (Optional) The absolute path to the file containing variable definitions and defaults. This file follows the syntax used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager). This argument is required if you set `variable_values_file` and conflicts with `variables`.\n* `variable_values_file` - (Optional) The absolute path to the file containing variable values. This file follows the syntax used in the Property Manager CLI. This argument is required if you set `variable_definition_file` and conflicts with `variables`.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `json` - The fully expanded template with variables and all nested templates resolved.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRulesTemplate.\n",
                "properties": {
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "templateFile"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRulesTemplate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "templateFile",
                    "id"
                ]
            }
        },
        "akamai:properties/getCpCode:getCpCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getCpCode has been deprecated in favor of akamai.getCpCode"
        },
        "akamai:properties/getProperty:getProperty": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getProperty has been deprecated in favor of akamai.getProperty"
        },
        "akamai:properties/getPropertyRules:getPropertyRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getPropertyRules has been deprecated in favor of akamai.getPropertyRules"
        },
        "akamai:trafficmanagement/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.trafficmanagement.getGtmDefaultDatacenter has been deprecated in favor of akamai.getGtmDefaultDatacenter"
        }
    },
    "language": {
        "csharp": {
            "namespaces": {
                "akamai": "Akamai"
            },
            "packageReferences": {
                "Pulumi": "2.*",
                "System.Collections.Immutable": "1.6.0"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-akamai/sdk/go/akamai"
        },
        "nodejs": {
            "dependencies": {
                "@pulumi/pulumi": "^2.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^8.0.25"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing akamai cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "requires": {
                "pulumi": "\u003e=2.9.0,\u003c3.0.0"
            }
        }
    }
}