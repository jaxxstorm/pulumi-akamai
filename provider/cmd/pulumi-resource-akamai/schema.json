{
    "name": "akamai",
    "description": "A Pulumi package for creating and managing akamai cloud resources.",
    "keywords": [
        "pulumi",
        "akamai"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`akamai` Terraform Provider](https://github.com/akamai/terraform-provider-akamai).",
    "repository": "https://github.com/pulumi/pulumi-akamai",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:config/appsecs:appsecs"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:config/config:config",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:config/dns:dns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:config/gtm:gtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:config/networks:networks"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:config/property:property",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "types": {
        "akamai:config/appsecs:appsecs": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/config:config": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/dns:dns": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/gtm:gtm": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/networks:networks": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:config/property:property": {
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accountKey": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientToken": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxBody": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "email",
                "firstName",
                "lastName",
                "organization",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr": {
            "properties": {
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organizationalUnit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "state": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "city",
                "countryCode",
                "organization",
                "organizationalUnit",
                "state"
            ]
        },
        "akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge": {
            "properties": {
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fullPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseBody": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "fullPath",
                        "responseBody"
                    ]
                }
            }
        },
        "akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration": {
            "properties": {
                "clientMutualAuthentication": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloneDnsNames": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disallowedTlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geography": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mustHaveCiphers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ocspStapling": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "preferredCiphers": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "quicEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "geography"
            ]
        },
        "akamai:index/CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication:CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication": {
            "properties": {
                "ocspEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sendCaListToClient": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "name",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact": {
            "properties": {
                "addressLineOne": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "addressLineTwo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "city": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "email": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "organization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "phone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "postalCode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "addressLineOne",
                "city",
                "countryCode",
                "email",
                "firstName",
                "lastName",
                "organization",
                "phone",
                "postalCode",
                "region"
            ]
        },
        "akamai:index/DnsZoneTsigKey:DnsZoneTsigKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "name",
                "secret"
            ]
        },
        "akamai:index/GtmAsmapAssignment:GtmAsmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:index/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:index/PropertyActivationRuleError:PropertyActivationRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyHostname:PropertyHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "cnameFrom",
                "cnameTo"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "certStatuses",
                        "cnameFrom",
                        "cnameTo",
                        "cnameType",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:index/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostname",
                        "productionStatus",
                        "stagingStatus",
                        "target"
                    ]
                }
            }
        },
        "akamai:index/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:index/ProviderAppsec:ProviderAppsec": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderConfig:ProviderConfig": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderDns:ProviderDns": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderGtm:ProviderGtm": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderNetwork:ProviderNetwork": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/ProviderProperty:ProviderProperty": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "accountKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxBody": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:index/getContractsContract:getContractsContract": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contractTypeName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "contractTypeName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getGroupsGroup:getGroupsGroup": {
            "properties": {
                "contractIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "parentGroupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractIds",
                "groupId",
                "groupName",
                "parentGroupId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertiesProperty:getPropertiesProperty": {
            "properties": {
                "contractId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "latestVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "note": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "propertyName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingVersion": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "contractId",
                "groupId",
                "latestVersion",
                "note",
                "productId",
                "productionVersion",
                "propertyId",
                "propertyName",
                "ruleFormat",
                "stagingVersion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "certStatuses",
                "cnameFrom",
                "cnameTo",
                "cnameType",
                "edgeHostnameId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyHostnamesHostnameCertStatus:getPropertyHostnamesHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hostname",
                "productionStatus",
                "stagingStatus",
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyProductsProduct:getPropertyProductsProduct": {
            "properties": {
                "productId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "productId",
                "productName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyHostname:PropertyHostname": {
            "properties": {
                "certProvisioningType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "certStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostnameCertStatus:PropertyHostnameCertStatus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameFrom": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameTo": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cnameType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "edgeHostnameId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "certProvisioningType",
                "cnameFrom",
                "cnameTo"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certProvisioningType",
                        "certStatuses",
                        "cnameFrom",
                        "cnameTo",
                        "cnameType",
                        "edgeHostnameId"
                    ]
                }
            }
        },
        "akamai:properties/PropertyHostnameCertStatus:PropertyHostnameCertStatus": {
            "properties": {
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "productionStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stagingStatus": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "hostname",
                        "productionStatus",
                        "stagingStatus",
                        "target"
                    ]
                }
            }
        },
        "akamai:properties/PropertyOrigin:PropertyOrigin": {
            "properties": {
                "cacheKeyHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableTrueClientIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forwardHostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleError:PropertyRuleError": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyRuleWarning:PropertyRuleWarning": {
            "properties": {
                "behaviorName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "detail": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorLocation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instance": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "statusCode": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "title": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable": {
            "properties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:properties/PropertyVariablesVariableVariable:PropertyVariablesVariableVariable": {
            "properties": {
                "description": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hidden": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "hidden",
                "name",
                "sensitive"
            ]
        },
        "akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment": {
            "properties": {
                "asNumbers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "asNumbers",
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment": {
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject": {
            "properties": {
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment": {
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId",
                "nickname"
            ]
        },
        "akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nickname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest": {
            "properties": {
                "answersRequired": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableNonstandardPortWarning": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "errorPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError3xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError4xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpError5xx": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "peerCertificateVerification": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recursionRequested": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientCertificate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientPrivateKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testInterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testObjectUsername": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "testTimeout": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeoutPenalty": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "testInterval",
                "testObject",
                "testObjectProtocol",
                "testTimeout"
            ]
        },
        "akamai:trafficmanagement/GtmPropertyLivenessTestHttpHeader:GtmPropertyLivenessTestHttpHeader": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet": {
            "properties": {
                "rdatas": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ttl": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "handoutCname": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "weight": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance": {
            "properties": {
                "datacenterId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadObjectPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "loadServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useDefaultLoadObject": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datacenterId"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the akamai package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderAppsec:ProviderAppsec"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:index/ProviderDns:ProviderDns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:index/ProviderGtm:ProviderGtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderNetwork:ProviderNetwork"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:index/ProviderProperty:ProviderProperty",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        },
        "inputProperties": {
            "appsecSection": {
                "type": "string",
                "deprecationMessage": "The setting \"appsec_section\" has been deprecated."
            },
            "appsecs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderAppsec:ProviderAppsec"
                },
                "deprecationMessage": "The setting \"appsec\" has been deprecated."
            },
            "cacheEnabled": {
                "type": "boolean"
            },
            "config": {
                "$ref": "#/types/akamai:index/ProviderConfig:ProviderConfig",
                "language": {
                    "csharp": {
                        "name": "ConfigDetails"
                    }
                }
            },
            "configSection": {
                "type": "string",
                "description": "The section of the edgerc file to use for configuration\n"
            },
            "dns": {
                "$ref": "#/types/akamai:index/ProviderDns:ProviderDns",
                "deprecationMessage": "The setting \"dns\" has been deprecated."
            },
            "dnsSection": {
                "type": "string",
                "deprecationMessage": "The setting \"dns_section\" has been deprecated."
            },
            "edgerc": {
                "type": "string"
            },
            "gtm": {
                "$ref": "#/types/akamai:index/ProviderGtm:ProviderGtm",
                "deprecationMessage": "The setting \"gtm\" has been deprecated."
            },
            "gtmSection": {
                "type": "string",
                "deprecationMessage": "The setting \"gtm_section\" has been deprecated."
            },
            "networklistSection": {
                "type": "string",
                "deprecationMessage": "The setting \"networklist_section\" has been deprecated."
            },
            "networks": {
                "type": "array",
                "items": {
                    "$ref": "#/types/akamai:index/ProviderNetwork:ProviderNetwork"
                }
            },
            "papiSection": {
                "type": "string",
                "deprecationMessage": "The setting \"papi_section\" has been deprecated."
            },
            "property": {
                "$ref": "#/types/akamai:index/ProviderProperty:ProviderProperty",
                "deprecationMessage": "The setting \"property\" has been deprecated."
            },
            "propertySection": {
                "type": "string",
                "deprecationMessage": "The setting \"property_section\" has been deprecated."
            }
        }
    },
    "resources": {
        "akamai:edgedns/dnsRecord:DnsRecord": {
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "svcParams": {
                        "type": "string"
                    },
                    "svcPriority": {
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsRecord has been deprecated in favor of akamai.DnsRecord"
        },
        "akamai:edgedns/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:edgedns/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.edgedns.DnsZone has been deprecated in favor of akamai.DnsZone"
        },
        "akamai:index/appSecActivations:AppSecActivations": {
            "description": "The `akamai.AppSecActivations` resource allows you to activate or deactivate a given security configuration version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst activation = new akamai.AppSecActivations(\"activation\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    network: \"STAGING\",\n    notes: \"TEST Notes\",\n    notificationEmails: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nactivation = akamai.AppSecActivations(\"activation\",\n    config_id=configuration.config_id,\n    network=\"STAGING\",\n    notes=\"TEST Notes\",\n    notification_emails=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var activation = new Akamai.AppSecActivations(\"activation\", new Akamai.AppSecActivationsArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Network = \"STAGING\",\n            Notes = \"TEST Notes\",\n            NotificationEmails = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecActivations(ctx, \"activation\", \u0026akamai.AppSecActivationsArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tNetwork:  pulumi.String(\"STAGING\"),\n\t\t\tNotes:    pulumi.String(\"TEST Notes\"),\n\t\t\tNotificationEmails: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activate": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to activate the specified configuration version. If not supplied, True is assumed.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network in which the security configuration should be activated. If supplied, must be either STAGING or PRODUCTION. If not supplied, STAGING will be assumed.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A text note describing this operation. If no attributes were changed since the last time a security\nconfiguration was updated using the akamai.AppSecActivations resource, an activation will not occur. To ensure an activation\nis called, please update one of the attributes, e.g. the notes attribute.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the operation is complete.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the operation. The following values are may be returned:\n"
                }
            },
            "required": [
                "configId",
                "notes",
                "notificationEmails",
                "status"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean",
                    "description": "A boolean indicating whether to activate the specified configuration version. If not supplied, True is assumed.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network in which the security configuration should be activated. If supplied, must be either STAGING or PRODUCTION. If not supplied, STAGING will be assumed.\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A text note describing this operation. If no attributes were changed since the last time a security\nconfiguration was updated using the akamai.AppSecActivations resource, an activation will not occur. To ensure an activation\nis called, please update one of the attributes, e.g. the notes attribute.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the operation is complete.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "notes",
                "notificationEmails"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecActivations resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean",
                        "description": "A boolean indicating whether to activate the specified configuration version. If not supplied, True is assumed.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network in which the security configuration should be activated. If supplied, must be either STAGING or PRODUCTION. If not supplied, STAGING will be assumed.\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A text note describing this operation. If no attributes were changed since the last time a security\nconfiguration was updated using the akamai.AppSecActivations resource, an activation will not occur. To ensure an activation\nis called, please update one of the attributes, e.g. the notes attribute.\n"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracketed, comma-separated list of email addresses that will be notified when the operation is complete.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the operation. The following values are may be returned:\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging": {
            "description": "The `resource_akamai_appsec_advanced_settings_logging` resource allows you to enable, disable, or update HTTP header logging settings for a configuration. This operation applies at the configuration level, and therefore applies to all policies within a configuration. You may override these settings for a particular policy by specifying the policy using the security_policy_id parameter.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst logging = new akamai.AppSecAdvancedSettingsLogging(\"logging\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    logging: fs.readFileSync(`${path.module}/logging.json`),\n});\n// USE CASE: user wants to override the logging settings for a security policy\nconst policyLogging = new akamai.AppSecAdvancedSettingsLogging(\"policyLogging\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    logging: fs.readFileSync(`${path.module}/logging.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nlogging = akamai.AppSecAdvancedSettingsLogging(\"logging\",\n    config_id=configuration.config_id,\n    logging=(lambda path: open(path).read())(f\"{path['module']}/logging.json\"))\n# USE CASE: user wants to override the logging settings for a security policy\npolicy_logging = akamai.AppSecAdvancedSettingsLogging(\"policyLogging\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    logging=(lambda path: open(path).read())(f\"{path['module']}/logging.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var logging = new Akamai.AppSecAdvancedSettingsLogging(\"logging\", new Akamai.AppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Logging = File.ReadAllText($\"{path.Module}/logging.json\"),\n        });\n        // USE CASE: user wants to override the logging settings for a security policy\n        var policyLogging = new Akamai.AppSecAdvancedSettingsLogging(\"policyLogging\", new Akamai.AppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Logging = File.ReadAllText($\"{path.Module}/logging.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsLogging(ctx, \"logging\", \u0026akamai.AppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tLogging:  readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/logging.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsLogging(ctx, \"policyLogging\", \u0026akamai.AppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tLogging:          readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/logging.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "logging": {
                    "type": "string",
                    "description": "The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.\n"
                }
            },
            "required": [
                "configId",
                "logging"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "logging": {
                    "type": "string",
                    "description": "The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "logging"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsLogging resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "logging": {
                        "type": "string",
                        "description": "The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPragmaHeader:AppSecAdvancedSettingsPragmaHeader": {
            "properties": {
                "configId": {
                    "type": "integer"
                },
                "pragmaHeader": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "pragmaHeader"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer"
                },
                "pragmaHeader": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "pragmaHeader"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPragmaHeader resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "pragmaHeader": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch": {
            "description": "The `resource_akamai_appsec_advanced_settings_prefetch` resource allows you to enable inspection of internal requests (those between your origin and Akamai’s servers) for file types that you specify. You can also apply rate controls to prefetch requests. This operation applies at the configuration level.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst prefetch = new akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    enableAppLayer: false,\n    allExtensions: true,\n    enableRateControls: false,\n    extensions: _var.extensions,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprefetch = akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\",\n    config_id=configuration.config_id,\n    enable_app_layer=False,\n    all_extensions=True,\n    enable_rate_controls=False,\n    extensions=var[\"extensions\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var prefetch = new Akamai.AppSecAdvancedSettingsPrefetch(\"prefetch\", new Akamai.AppSecAdvancedSettingsPrefetchArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            EnableAppLayer = false,\n            AllExtensions = true,\n            EnableRateControls = false,\n            Extensions = @var.Extensions,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAdvancedSettingsPrefetch(ctx, \"prefetch\", \u0026akamai.AppSecAdvancedSettingsPrefetchArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tEnableAppLayer:     pulumi.Bool(false),\n\t\t\tAllExtensions:      pulumi.Bool(true),\n\t\t\tEnableRateControls: pulumi.Bool(false),\n\t\t\tExtensions:         pulumi.Any(_var.Extensions),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for all extensions.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests.\n"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for rate controls.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The specific extensions for which to enable prefetch requests. If `all_extensions` is True, `extensions` must be an empty list.\n"
                }
            },
            "required": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "inputProperties": {
                "allExtensions": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for all extensions.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enableAppLayer": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests.\n"
                },
                "enableRateControls": {
                    "type": "boolean",
                    "description": "Whether to enable prefetch requests for rate controls.\n"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The specific extensions for which to enable prefetch requests. If `all_extensions` is True, `extensions` must be an empty list.\n"
                }
            },
            "requiredInputs": [
                "allExtensions",
                "configId",
                "enableAppLayer",
                "enableRateControls",
                "extensions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.\n",
                "properties": {
                    "allExtensions": {
                        "type": "boolean",
                        "description": "Whether to enable prefetch requests for all extensions.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enableAppLayer": {
                        "type": "boolean",
                        "description": "Whether to enable prefetch requests.\n"
                    },
                    "enableRateControls": {
                        "type": "boolean",
                        "description": "Whether to enable prefetch requests for rate controls.\n"
                    },
                    "extensions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The specific extensions for which to enable prefetch requests. If `all_extensions` is True, `extensions` must be an empty list.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiConstraintsProtection:AppSecApiConstraintsProtection": {
            "description": "Use the `akamai.AppSecApiConstraintsProtection` resource to enable or disable API constraints protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecApiConstraintsProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecApiConstraintsProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecApiConstraintsProtection(\"protection\", new Akamai.AppSecApiConstraintsProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecApiConstraintsProtection(ctx, \"protection\", \u0026akamai.AppSecApiConstraintsProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable API constraints protection: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable API constraints protection: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiConstraintsProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable API constraints protection: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecApiRequestConstraints:AppSecApiRequestConstraints": {
            "description": "The `resource_akamai_appsec_api_request_constraints` resource allows you to update what action to take when the API request constraint triggers. This operation modifies an individual API constraint action. To use this operation, use the `akamai.getAppSecApiEndpoints` data source to list one or all API endpoints, and use the ID of the selected endpoint. Use the `action` paameter to specify how the alert should be handled.\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to assign to API request constraints: either `alert`, `deny`, or `none`.\n"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": "The ID of the API endpoint to use.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to assign to API request constraints: either `alert`, `deny`, or `none`.\n"
                },
                "apiEndpointId": {
                    "type": "integer",
                    "description": "The ID of the API endpoint to use.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecApiRequestConstraints resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to assign to API request constraints: either `alert`, `deny`, or `none`.\n"
                    },
                    "apiEndpointId": {
                        "type": "integer",
                        "description": "The ID of the API endpoint to use.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecAttackGroup:AppSecAttackGroup": {
            "description": "Use the `akamai.AppSecAttackGroup` resource to create or modify an attack group's action, conditions and exceptions. When the conditions are met, the rule’s actions are ignored and not applied to that specific traffic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst attackGroup = new akamai.AppSecAttackGroup(\"attackGroup\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    attackGroup: _var.attack_group,\n    attackGroupAction: _var.attack_group_action,\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nattack_group = akamai.AppSecAttackGroup(\"attackGroup\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    attack_group=var[\"attack_group\"],\n    attack_group_action=var[\"attack_group_action\"],\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var attackGroup = new Akamai.AppSecAttackGroup(\"attackGroup\", new Akamai.AppSecAttackGroupArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            AttackGroup = @var.Attack_group,\n            AttackGroupAction = @var.Attack_group_action,\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecAttackGroup(ctx, \"attackGroup\", \u0026akamai.AppSecAttackGroupArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.Any(_var.Security_policy_id),\n\t\t\tAttackGroup:        pulumi.Any(_var.Attack_group),\n\t\t\tAttackGroupAction:  pulumi.Any(_var.Attack_group_action),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": "The attack group to use.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": "The attack group to use.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecAttackGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "The attack group to use.\n"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecByPassNetworkList:AppSecByPassNetworkList": {
            "description": "Use the `akamai.AppSecByPassNetworkList` resource to update which network lists to use in the\nbypass network lists settings. Note: this resource is only applicable to WAP (Web Application\nProtector) configurations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst bypassNetworkLists = new akamai.AppSecByPassNetworkList(\"bypassNetworkLists\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    bypassNetworkLists: [\n        \"id1\",\n        \"id2\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nbypass_network_lists = akamai.AppSecByPassNetworkList(\"bypassNetworkLists\",\n    config_id=configuration.config_id,\n    bypass_network_lists=[\n        \"id1\",\n        \"id2\",\n    ])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var bypassNetworkLists = new Akamai.AppSecByPassNetworkList(\"bypassNetworkLists\", new Akamai.AppSecByPassNetworkListArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            BypassNetworkLists = \n            {\n                \"id1\",\n                \"id2\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecByPassNetworkList(ctx, \"bypassNetworkLists\", \u0026akamai.AppSecByPassNetworkListArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tBypassNetworkLists: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"id1\"),\n\t\t\t\tpulumi.String(\"id2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing the IDs of the network lists to use.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                }
            },
            "required": [
                "bypassNetworkLists",
                "configId"
            ],
            "inputProperties": {
                "bypassNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing the IDs of the network lists to use.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                }
            },
            "requiredInputs": [
                "bypassNetworkLists",
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecByPassNetworkList resources.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list containing the IDs of the network lists to use.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfiguration:AppSecConfiguration": {
            "description": "The `resource_akamai_appsec_configuration` resource allows you to create a new WAP or KSD security configuration. KSD security configurations start out empty, and WAP configurations are created with preset values. The contract you pass in the request body determines which product you use. You can edit the default settings included in the WAP configuration, but you’ll need to run additional operations in this API to select specific protections for KSD. Your KSD configuration needs match targets and protection settings before it can be activated. \n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "(Required) The ID of the security configuration.\n"
                },
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the configuration.\n"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": "The config ID of the security configuration to clone from.\n"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": "The version number of the security configuration to clone from.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the configuration.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the configuration.\n"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of hostnames protected by this security configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the configuration.\n"
                }
            },
            "required": [
                "configId",
                "contractId",
                "description",
                "groupId",
                "hostNames",
                "name"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the configuration.\n"
                },
                "createFromConfigId": {
                    "type": "integer",
                    "description": "The config ID of the security configuration to clone from.\n"
                },
                "createFromVersion": {
                    "type": "integer",
                    "description": "The version number of the security configuration to clone from.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the configuration.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the configuration.\n"
                },
                "hostNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of hostnames protected by this security configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the configuration.\n"
                }
            },
            "requiredInputs": [
                "contractId",
                "description",
                "groupId",
                "hostNames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfiguration resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "(Required) The ID of the security configuration.\n"
                    },
                    "contractId": {
                        "type": "string",
                        "description": "The contract ID of the configuration.\n"
                    },
                    "createFromConfigId": {
                        "type": "integer",
                        "description": "The config ID of the security configuration to clone from.\n"
                    },
                    "createFromVersion": {
                        "type": "integer",
                        "description": "The version number of the security configuration to clone from.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the configuration.\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The group ID of the configuration.\n"
                    },
                    "hostNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of hostnames protected by this security configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecConfigurationRename:AppSecConfigurationRename": {
            "description": "The `akamai.AppSecConfigurationRename` resource allows you to rename an existing security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configurationAppSecConfiguration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst configurationAppSecConfigurationRename = new akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\", {\n    configId: configurationAppSecConfiguration.then(configurationAppSecConfiguration =\u003e configurationAppSecConfiguration.configId),\n    description: _var.description,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration_app_sec_configuration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nconfiguration_app_sec_configuration_rename = akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\",\n    config_id=configuration_app_sec_configuration.config_id,\n    description=var[\"description\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configurationAppSecConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var configurationAppSecConfigurationRename = new Akamai.AppSecConfigurationRename(\"configurationAppSecConfigurationRename\", new Akamai.AppSecConfigurationRenameArgs\n        {\n            ConfigId = configurationAppSecConfiguration.Apply(configurationAppSecConfiguration =\u003e configurationAppSecConfiguration.ConfigId),\n            Description = @var.Description,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfigurationAppSecConfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecConfigurationRename(ctx, \"configurationAppSecConfigurationRename\", \u0026akamai.AppSecConfigurationRenameArgs{\n\t\t\tConfigId:    pulumi.Int(configurationAppSecConfiguration.ConfigId),\n\t\t\tDescription: pulumi.Any(_var.Description),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to be renamed.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be applied to the configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The new name to be given to the configuration.\n"
                }
            },
            "required": [
                "configId",
                "description",
                "name"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to be renamed.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be applied to the configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The new name to be given to the configuration.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecConfigurationRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to be renamed.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description to be applied to the configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The new name to be given to the configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomDeny:AppSecCustomDeny": {
            "description": "The `resource_akamai_appsec_custom_deny` resource allows you to create a new custom deny action for a specific configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst customDeny = new akamai.AppSecCustomDeny(\"customDeny\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    customDeny: fs.readFileSync(`${path.module}/custom_deny.json`),\n});\nexport const customDenyId = customDeny.customDenyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\ncustom_deny = akamai.AppSecCustomDeny(\"customDeny\",\n    config_id=configuration.config_id,\n    custom_deny=(lambda path: open(path).read())(f\"{path['module']}/custom_deny.json\"))\npulumi.export(\"customDenyId\", custom_deny.custom_deny_id)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var customDeny = new Akamai.AppSecCustomDeny(\"customDeny\", new Akamai.AppSecCustomDenyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            CustomDeny = File.ReadAllText($\"{path.Module}/custom_deny.json\"),\n        });\n        this.CustomDenyId = customDeny.CustomDenyId;\n    }\n\n    [Output(\"customDenyId\")]\n    public Output\u003cstring\u003e CustomDenyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomDeny, err := akamai.NewAppSecCustomDeny(ctx, \"customDeny\", \u0026akamai.AppSecCustomDenyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tCustomDeny: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/custom_deny.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyId\", customDeny.CustomDenyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customDeny": {
                    "type": "string",
                    "description": "The JSON-formatted definition of the custom deny action ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3)).\n"
                },
                "customDenyId": {
                    "type": "string",
                    "description": "custom_deny_id\n"
                }
            },
            "required": [
                "configId",
                "customDeny",
                "customDenyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customDeny": {
                    "type": "string",
                    "description": "The JSON-formatted definition of the custom deny action ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3)).\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customDeny"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomDeny resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customDeny": {
                        "type": "string",
                        "description": "The JSON-formatted definition of the custom deny action ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#63df3de3)).\n"
                    },
                    "customDenyId": {
                        "type": "string",
                        "description": "custom_deny_id\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRule:AppSecCustomRule": {
            "description": "The `akamai.AppSecCustomRule` resource allows you to create or modify a custom rule associated with a given security configuration.\n",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRule": {
                    "type": "string",
                    "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The ID of the custom rule.\n"
                }
            },
            "required": [
                "configId",
                "customRule",
                "customRuleId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRule": {
                    "type": "string",
                    "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customRule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRule resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRule": {
                        "type": "string",
                        "description": "The name of a JSON file containing a custom rule definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postcustomrules)).\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "The ID of the custom rule.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction": {
            "description": "The `akamai.AppSecCustomRuleAction` resource allows you to associate an action to a custom rule.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst createCustomRuleAction = new akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: \"crAP_75829\",\n    customRuleId: 12345,\n    customRuleAction: \"alert\",\n});\nexport const customRuleId = createCustomRuleAction.customRuleId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\ncreate_custom_rule_action = akamai.AppSecCustomRuleAction(\"createCustomRuleAction\",\n    config_id=configuration.config_id,\n    security_policy_id=\"crAP_75829\",\n    custom_rule_id=12345,\n    custom_rule_action=\"alert\")\npulumi.export(\"customRuleId\", create_custom_rule_action.custom_rule_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var createCustomRuleAction = new Akamai.AppSecCustomRuleAction(\"createCustomRuleAction\", new Akamai.AppSecCustomRuleActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = \"crAP_75829\",\n            CustomRuleId = 12345,\n            CustomRuleAction = \"alert\",\n        });\n        this.CustomRuleId = createCustomRuleAction.CustomRuleId;\n    }\n\n    [Output(\"customRuleId\")]\n    public Output\u003cstring\u003e CustomRuleId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcreateCustomRuleAction, err := akamai.NewAppSecCustomRuleAction(ctx, \"createCustomRuleAction\", \u0026akamai.AppSecCustomRuleActionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.String(\"crAP_75829\"),\n\t\t\tCustomRuleId:     pulumi.Int(12345),\n\t\t\tCustomRuleAction: pulumi.String(\"alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleId\", createCustomRuleAction.CustomRuleId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "The action to take when the custom rule is invoked: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The custom rule for which to apply the action.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "customRuleAction": {
                    "type": "string",
                    "description": "The action to take when the custom rule is invoked: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "customRuleId": {
                    "type": "integer",
                    "description": "The custom rule for which to apply the action.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "customRuleAction",
                "customRuleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecCustomRuleAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRuleAction": {
                        "type": "string",
                        "description": "The action to take when the custom rule is invoked: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "The custom rule for which to apply the action.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEval:AppSecEval": {
            "description": "Use the `akamai.AppSecEval` resource to perform evaluation mode operations such as Start, Stop, Restart, Update, or Complete.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalOperation = new akamai.AppSecEval(\"evalOperation\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    evalOperation: _var.eval_operation,\n});\nexport const evalModeEvaluatingRuleset = evalOperation.evaluatingRuleset;\nexport const evalModeExpirationDate = evalOperation.expirationDate;\nexport const evalModeCurrentRuleset = evalOperation.currentRuleset;\nexport const evalModeStatus = evalOperation.evalStatus;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_operation = akamai.AppSecEval(\"evalOperation\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    eval_operation=var[\"eval_operation\"])\npulumi.export(\"evalModeEvaluatingRuleset\", eval_operation.evaluating_ruleset)\npulumi.export(\"evalModeExpirationDate\", eval_operation.expiration_date)\npulumi.export(\"evalModeCurrentRuleset\", eval_operation.current_ruleset)\npulumi.export(\"evalModeStatus\", eval_operation.eval_status)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalOperation = new Akamai.AppSecEval(\"evalOperation\", new Akamai.AppSecEvalArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            EvalOperation = @var.Eval_operation,\n        });\n        this.EvalModeEvaluatingRuleset = evalOperation.EvaluatingRuleset;\n        this.EvalModeExpirationDate = evalOperation.ExpirationDate;\n        this.EvalModeCurrentRuleset = evalOperation.CurrentRuleset;\n        this.EvalModeStatus = evalOperation.EvalStatus;\n    }\n\n    [Output(\"evalModeEvaluatingRuleset\")]\n    public Output\u003cstring\u003e EvalModeEvaluatingRuleset { get; set; }\n    [Output(\"evalModeExpirationDate\")]\n    public Output\u003cstring\u003e EvalModeExpirationDate { get; set; }\n    [Output(\"evalModeCurrentRuleset\")]\n    public Output\u003cstring\u003e EvalModeCurrentRuleset { get; set; }\n    [Output(\"evalModeStatus\")]\n    public Output\u003cstring\u003e EvalModeStatus { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalOperation, err := akamai.NewAppSecEval(ctx, \"evalOperation\", \u0026akamai.AppSecEvalArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEvalOperation:    pulumi.Any(_var.Eval_operation),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalModeEvaluatingRuleset\", evalOperation.EvaluatingRuleset)\n\t\tctx.Export(\"evalModeExpirationDate\", evalOperation.ExpirationDate)\n\t\tctx.Export(\"evalModeCurrentRuleset\", evalOperation.CurrentRuleset)\n\t\tctx.Export(\"evalModeStatus\", evalOperation.EvalStatus)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "The set of rules currently in effect.\n"
                },
                "evalMode": {
                    "type": "string",
                    "description": "__ASE Beta__. (Optional) Used for ASE Rulesets: ASE_MANUAL or ASE_AUTO - default. \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Policy Evaluation Rule Actions and Threat Intelligence setting are read only in ASE_AUTO evaluation mode\n"
                },
                "evalOperation": {
                    "type": "string",
                    "description": "The operation to perform: START, STOP, RESTART, UPDATE, or COMPLETE.\n"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "Either `enabled` if an evaluation is currently in progress (that is, if the `eval_operation` parameter was `START`, `RESTART`, or `COMPLETE`) or `disabled` otherwise (that is, if the `eval_operation` parameter was `STOP` or `UPDATE`).\n"
                },
                "evaluatingRuleset": {
                    "type": "string",
                    "description": "The set of rules being evaluated.\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The date on which the evaluation period ends.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalOperation",
                "evalStatus",
                "evaluatingRuleset",
                "expirationDate",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "evalMode": {
                    "type": "string",
                    "description": "__ASE Beta__. (Optional) Used for ASE Rulesets: ASE_MANUAL or ASE_AUTO - default. \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Policy Evaluation Rule Actions and Threat Intelligence setting are read only in ASE_AUTO evaluation mode\n"
                },
                "evalOperation": {
                    "type": "string",
                    "description": "The operation to perform: START, STOP, RESTART, UPDATE, or COMPLETE.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "evalOperation",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEval resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "The set of rules currently in effect.\n"
                    },
                    "evalMode": {
                        "type": "string",
                        "description": "__ASE Beta__. (Optional) Used for ASE Rulesets: ASE_MANUAL or ASE_AUTO - default. \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Policy Evaluation Rule Actions and Threat Intelligence setting are read only in ASE_AUTO evaluation mode\n"
                    },
                    "evalOperation": {
                        "type": "string",
                        "description": "The operation to perform: START, STOP, RESTART, UPDATE, or COMPLETE.\n"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Either `enabled` if an evaluation is currently in progress (that is, if the `eval_operation` parameter was `START`, `RESTART`, or `COMPLETE`) or `disabled` otherwise (that is, if the `eval_operation` parameter was `STOP` or `UPDATE`).\n"
                    },
                    "evaluatingRuleset": {
                        "type": "string",
                        "description": "The set of rules being evaluated.\n"
                    },
                    "expirationDate": {
                        "type": "string",
                        "description": "The date on which the evaluation period ends.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalGroup:AppSecEvalGroup": {
            "description": "Use the `akamai.AppSecEvalGroup` resource to create or modify an evaluation attack group's action, conditions and exceptions. When the conditions are met, the rule’s actions are ignored and not applied to that specific traffic.\n__BETA__ This is Adaptive Security Engine(ASE) related data resource. Please contact your akamai representative if you want to learn more\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalAttackGroup = new akamai.AppSecEvalGroup(\"evalAttackGroup\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    attackGroup: _var.attack_group,\n    attackGroupAction: _var.attack_group_action,\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_attack_group = akamai.AppSecEvalGroup(\"evalAttackGroup\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    attack_group=var[\"attack_group\"],\n    attack_group_action=var[\"attack_group_action\"],\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalAttackGroup = new Akamai.AppSecEvalGroup(\"evalAttackGroup\", new Akamai.AppSecEvalGroupArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            AttackGroup = @var.Attack_group,\n            AttackGroupAction = @var.Attack_group_action,\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalGroup(ctx, \"evalAttackGroup\", \u0026akamai.AppSecEvalGroupArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.Any(_var.Security_policy_id),\n\t\t\tAttackGroup:        pulumi.Any(_var.Attack_group),\n\t\t\tAttackGroupAction:  pulumi.Any(_var.Attack_group_action),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attackGroup": {
                    "type": "string",
                    "description": "The eval attack group to use.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "attackGroup": {
                    "type": "string",
                    "description": "The eval attack group to use.\n"
                },
                "attackGroupAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "attackGroup",
                "attackGroupAction",
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalGroup resources.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "The eval attack group to use.\n"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalHostnames:AppSecEvalHostnames": {
            "description": "The `resource_akamai_appsec_eval_hostnames` resource allows you to update the list of hostnames you want to evaluate for a configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\n// USE CASE: user wants to specify the hostnames to evaluate\nconst evalHostnames = new akamai.AppSecEvalHostnames(\"evalHostnames\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: _var.hostnames,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\n# USE CASE: user wants to specify the hostnames to evaluate\neval_hostnames = akamai.AppSecEvalHostnames(\"evalHostnames\",\n    config_id=configuration.config_id,\n    hostnames=var[\"hostnames\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        // USE CASE: user wants to specify the hostnames to evaluate\n        var evalHostnames = new Akamai.AppSecEvalHostnames(\"evalHostnames\", new Akamai.AppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = @var.Hostnames,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalHostnames(ctx, \"evalHostnames\", \u0026akamai.AppSecEvalHostnamesArgs{\n\t\t\tConfigId:  pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: pulumi.Any(_var.Hostnames),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of evaluation hostnames to be used for the specified configuration version.\n"
                }
            },
            "required": [
                "configId",
                "hostnames"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of evaluation hostnames to be used for the specified configuration version.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of evaluation hostnames to be used for the specified configuration version.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalProtectHost:AppSecEvalProtectHost": {
            "description": "The `resource_akamai_appsec_eval_protect_host` resource allows you to move hostnames that you are evaluating to active protection. When you move a hostname from the evaluation hostnames list, it’s added to your security policy as a protected hostname.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalHostnames = configuration.then(configuration =\u003e akamai.getAppSecEvalHostnames({\n    configId: configuration.configId,\n}));\nconst protectHost = new akamai.AppSecEvalProtectHost(\"protectHost\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: evalHostnames.then(evalHostnames =\u003e evalHostnames.hostnames),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_hostnames = akamai.get_app_sec_eval_hostnames(config_id=configuration.config_id)\nprotect_host = akamai.AppSecEvalProtectHost(\"protectHost\",\n    config_id=configuration.config_id,\n    hostnames=eval_hostnames.hostnames)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalHostnames.InvokeAsync(new Akamai.GetAppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        var protectHost = new Akamai.AppSecEvalProtectHost(\"protectHost\", new Akamai.AppSecEvalProtectHostArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = evalHostnames.Apply(evalHostnames =\u003e evalHostnames.Hostnames),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalHostnames, err := akamai.LookupAppSecEvalHostnames(ctx, \u0026GetAppSecEvalHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalProtectHost(ctx, \"protectHost\", \u0026akamai.AppSecEvalProtectHostArgs{\n\t\t\tConfigId:  pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: interface{}(evalHostnames.Hostnames),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The evaluation hostnames to be moved to active protection.\n"
                }
            },
            "required": [
                "configId",
                "hostnames"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The evaluation hostnames to be moved to active protection.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalProtectHost resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The evaluation hostnames to be moved to active protection.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecEvalRule:AppSecEvalRule": {
            "description": "Use the `akamai.AppSecEvalRule` resource to create or modify an eval rule's action, conditions and exceptions. When the conditions are met, the rule’s actions are ignored and not applied to that specific traffic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalRule = new akamai.AppSecEvalRule(\"evalRule\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    ruleId: _var.rule_id,\n    ruleAction: _var.action,\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_rule = akamai.AppSecEvalRule(\"evalRule\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    rule_id=var[\"rule_id\"],\n    rule_action=var[\"action\"],\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalRule = new Akamai.AppSecEvalRule(\"evalRule\", new Akamai.AppSecEvalRuleArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            RuleId = @var.Rule_id,\n            RuleAction = @var.Action,\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecEvalRule(ctx, \"evalRule\", \u0026akamai.AppSecEvalRuleArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.Any(_var.Security_policy_id),\n\t\t\tRuleId:             pulumi.Any(_var.Rule_id),\n\t\t\tRuleAction:         pulumi.Any(_var.Action),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "The ID of the eval rule to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "The ID of the eval rule to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleAction",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecEvalRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "The ID of the eval rule to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeo:AppSecIPGeo": {
            "description": "Use the `akamai.AppSecIPGeo` resource to update the method and which network lists to use for IP/Geo firewall blocking.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\n// USE CASE: user wants to update the IP/GEO firewall mode to \"block specific IPs/Subnets and Geos\" and update the IP list, GEO list \u0026 Exception list\nconst ipGeoBlock = new akamai.AppSecIPGeo(\"ipGeoBlock\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id1,\n    mode: _var.block,\n    geoNetworkLists: _var.geo_network_lists,\n    ipNetworkLists: _var.ip_network_lists,\n    exceptionIpNetworkLists: _var.exception_ip_network_lists,\n});\n// USE CASE: user wants to update the IP/GEO firewall mode to \"block all traffic except IPs/Subnets in block exceptions\" and update the Exception list\nconst ipGeoAllow = new akamai.AppSecIPGeo(\"ipGeoAllow\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id2,\n    mode: _var.allow,\n    exceptionIpNetworkLists: _var.exception_ip_network_lists,\n});\nexport const ipGeoModeBlock = ipGeoBlock.mode;\nexport const blockGeoNetworkLists = ipGeoBlock.geoNetworkLists;\nexport const blockIpNetworkLists = ipGeoBlock.ipNetworkLists;\nexport const blockExceptionIpNetworkLists = ipGeoBlock.exceptionIpNetworkLists;\nexport const ipGeoModeAllow = ipGeoAllow.mode;\nexport const allowExceptionIpNetworkLists = ipGeoAllow.exceptionIpNetworkLists;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\n# USE CASE: user wants to update the IP/GEO firewall mode to \"block specific IPs/Subnets and Geos\" and update the IP list, GEO list \u0026 Exception list\nip_geo_block = akamai.AppSecIPGeo(\"ipGeoBlock\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id1\"],\n    mode=var[\"block\"],\n    geo_network_lists=var[\"geo_network_lists\"],\n    ip_network_lists=var[\"ip_network_lists\"],\n    exception_ip_network_lists=var[\"exception_ip_network_lists\"])\n# USE CASE: user wants to update the IP/GEO firewall mode to \"block all traffic except IPs/Subnets in block exceptions\" and update the Exception list\nip_geo_allow = akamai.AppSecIPGeo(\"ipGeoAllow\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id2\"],\n    mode=var[\"allow\"],\n    exception_ip_network_lists=var[\"exception_ip_network_lists\"])\npulumi.export(\"ipGeoModeBlock\", ip_geo_block.mode)\npulumi.export(\"blockGeoNetworkLists\", ip_geo_block.geo_network_lists)\npulumi.export(\"blockIpNetworkLists\", ip_geo_block.ip_network_lists)\npulumi.export(\"blockExceptionIpNetworkLists\", ip_geo_block.exception_ip_network_lists)\npulumi.export(\"ipGeoModeAllow\", ip_geo_allow.mode)\npulumi.export(\"allowExceptionIpNetworkLists\", ip_geo_allow.exception_ip_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        // USE CASE: user wants to update the IP/GEO firewall mode to \"block specific IPs/Subnets and Geos\" and update the IP list, GEO list \u0026 Exception list\n        var ipGeoBlock = new Akamai.AppSecIPGeo(\"ipGeoBlock\", new Akamai.AppSecIPGeoArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id1,\n            Mode = @var.Block,\n            GeoNetworkLists = @var.Geo_network_lists,\n            IpNetworkLists = @var.Ip_network_lists,\n            ExceptionIpNetworkLists = @var.Exception_ip_network_lists,\n        });\n        // USE CASE: user wants to update the IP/GEO firewall mode to \"block all traffic except IPs/Subnets in block exceptions\" and update the Exception list\n        var ipGeoAllow = new Akamai.AppSecIPGeo(\"ipGeoAllow\", new Akamai.AppSecIPGeoArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id2,\n            Mode = @var.Allow,\n            ExceptionIpNetworkLists = @var.Exception_ip_network_lists,\n        });\n        this.IpGeoModeBlock = ipGeoBlock.Mode;\n        this.BlockGeoNetworkLists = ipGeoBlock.GeoNetworkLists;\n        this.BlockIpNetworkLists = ipGeoBlock.IpNetworkLists;\n        this.BlockExceptionIpNetworkLists = ipGeoBlock.ExceptionIpNetworkLists;\n        this.IpGeoModeAllow = ipGeoAllow.Mode;\n        this.AllowExceptionIpNetworkLists = ipGeoAllow.ExceptionIpNetworkLists;\n    }\n\n    [Output(\"ipGeoModeBlock\")]\n    public Output\u003cstring\u003e IpGeoModeBlock { get; set; }\n    [Output(\"blockGeoNetworkLists\")]\n    public Output\u003cstring\u003e BlockGeoNetworkLists { get; set; }\n    [Output(\"blockIpNetworkLists\")]\n    public Output\u003cstring\u003e BlockIpNetworkLists { get; set; }\n    [Output(\"blockExceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e BlockExceptionIpNetworkLists { get; set; }\n    [Output(\"ipGeoModeAllow\")]\n    public Output\u003cstring\u003e IpGeoModeAllow { get; set; }\n    [Output(\"allowExceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e AllowExceptionIpNetworkLists { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeoBlock, err := akamai.NewAppSecIPGeo(ctx, \"ipGeoBlock\", \u0026akamai.AppSecIPGeoArgs{\n\t\t\tConfigId:                pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:        pulumi.Any(_var.Security_policy_id1),\n\t\t\tMode:                    pulumi.Any(_var.Block),\n\t\t\tGeoNetworkLists:         pulumi.Any(_var.Geo_network_lists),\n\t\t\tIpNetworkLists:          pulumi.Any(_var.Ip_network_lists),\n\t\t\tExceptionIpNetworkLists: pulumi.Any(_var.Exception_ip_network_lists),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeoAllow, err := akamai.NewAppSecIPGeo(ctx, \"ipGeoAllow\", \u0026akamai.AppSecIPGeoArgs{\n\t\t\tConfigId:                pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:        pulumi.Any(_var.Security_policy_id2),\n\t\t\tMode:                    pulumi.Any(_var.Allow),\n\t\t\tExceptionIpNetworkLists: pulumi.Any(_var.Exception_ip_network_lists),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ipGeoModeBlock\", ipGeoBlock.Mode)\n\t\tctx.Export(\"blockGeoNetworkLists\", ipGeoBlock.GeoNetworkLists)\n\t\tctx.Export(\"blockIpNetworkLists\", ipGeoBlock.IpNetworkLists)\n\t\tctx.Export(\"blockExceptionIpNetworkLists\", ipGeoBlock.ExceptionIpNetworkLists)\n\t\tctx.Export(\"ipGeoModeAllow\", ipGeoAllow.Mode)\n\t\tctx.Export(\"allowExceptionIpNetworkLists\", ipGeoAllow.ExceptionIpNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be allowed regardless of `mode`, `geo_network_lists`, and `ip_network_lists` parameters.\n"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be blocked or allowed geographically.\n"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be blocked or allowd by IP address.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode to use for IP/Geo firewall blocking: `block` to block specific IPs, geographies or network lists, or `allow` to allow specific IPs or geographies to be let through while blocking the rest.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "exceptionIpNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be allowed regardless of `mode`, `geo_network_lists`, and `ip_network_lists` parameters.\n"
                },
                "geoNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be blocked or allowed geographically.\n"
                },
                "ipNetworkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The network lists to be blocked or allowd by IP address.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "The mode to use for IP/Geo firewall blocking: `block` to block specific IPs, geographies or network lists, or `allow` to allow specific IPs or geographies to be let through while blocking the rest.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeo resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "exceptionIpNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be allowed regardless of `mode`, `geo_network_lists`, and `ip_network_lists` parameters.\n"
                    },
                    "geoNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be blocked or allowed geographically.\n"
                    },
                    "ipNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be blocked or allowd by IP address.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode to use for IP/Geo firewall blocking: `block` to block specific IPs, geographies or network lists, or `allow` to allow specific IPs or geographies to be let through while blocking the rest.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecIPGeoProtection:AppSecIPGeoProtection": {
            "description": "Use the `akamai.AppSecIPGeoProtection` resource to enable or disable IP/GEO protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecIPGeoProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecIPGeoProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecIPGeoProtection(\"protection\", new Akamai.AppSecIPGeoProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecIPGeoProtection(ctx, \"protection\", \u0026akamai.AppSecIPGeoProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable ip geo controls: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable ip geo controls: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecIPGeoProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable ip geo controls: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTarget:AppSecMatchTarget": {
            "description": "The `akamai.AppSecMatchTarget` resource allows you to create or modify a match target associated with a given security configuration.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst matchTarget = new akamai.AppSecMatchTarget(\"matchTarget\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    matchTarget: fs.readFileSync(`${path.module}/match_targets.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nmatch_target = akamai.AppSecMatchTarget(\"matchTarget\",\n    config_id=configuration.config_id,\n    match_target=(lambda path: open(path).read())(f\"{path['module']}/match_targets.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var matchTarget = new Akamai.AppSecMatchTarget(\"matchTarget\", new Akamai.AppSecMatchTargetArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            MatchTarget = File.ReadAllText($\"{path.Module}/match_targets.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecMatchTarget(ctx, \"matchTarget\", \u0026akamai.AppSecMatchTargetArgs{\n\t\t\tConfigId:    pulumi.Int(configuration.ConfigId),\n\t\t\tMatchTarget: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/match_targets.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "matchTarget": {
                    "type": "string",
                    "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                },
                "matchTargetId": {
                    "type": "integer",
                    "description": "The ID of the match target.\n"
                }
            },
            "required": [
                "configId",
                "matchTarget",
                "matchTargetId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "matchTarget": {
                    "type": "string",
                    "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                }
            },
            "requiredInputs": [
                "configId",
                "matchTarget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTarget resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "matchTarget": {
                        "type": "string",
                        "description": "The name of a JSON file containing one or more match target definitions ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postmatchtargets)).\n"
                    },
                    "matchTargetId": {
                        "type": "integer",
                        "description": "The ID of the match target.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence": {
            "description": "The `akamai.AppSecMatchTargetSequence` resource allows you to specify the order in which match targets are applied within a given security configuration.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst matchTargetSequence = new akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    matchTargetSequence: fs.readFileSync(`${path.module}/match_targets.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nmatch_target_sequence = akamai.AppSecMatchTargetSequence(\"matchTargetSequence\",\n    config_id=configuration.config_id,\n    match_target_sequence=(lambda path: open(path).read())(f\"{path['module']}/match_targets.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var matchTargetSequence = new Akamai.AppSecMatchTargetSequence(\"matchTargetSequence\", new Akamai.AppSecMatchTargetSequenceArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            MatchTargetSequence = File.ReadAllText($\"{path.Module}/match_targets.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecMatchTargetSequence(ctx, \"matchTargetSequence\", \u0026akamai.AppSecMatchTargetSequenceArgs{\n\t\t\tConfigId:            pulumi.Int(configuration.ConfigId),\n\t\t\tMatchTargetSequence: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/match_targets.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                }
            },
            "required": [
                "configId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "matchTargetSequence": {
                    "type": "string",
                    "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                }
            },
            "requiredInputs": [
                "configId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecMatchTargetSequence resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "matchTargetSequence": {
                        "type": "string",
                        "description": "The name of a JSON file containing the sequence of all match targets defined for the specified security configuration ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecPenaltyBox:AppSecPenaltyBox": {
            "description": "Use the `akamai.AppSecPenaltyBox` resource to update the penalty box settings for a given security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst penaltyBox = new akamai.AppSecPenaltyBox(\"penaltyBox\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    penaltyBoxProtection: true,\n    penaltyBoxAction: _var.action,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\npenalty_box = akamai.AppSecPenaltyBox(\"penaltyBox\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    penalty_box_protection=True,\n    penalty_box_action=var[\"action\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var penaltyBox = new Akamai.AppSecPenaltyBox(\"penaltyBox\", new Akamai.AppSecPenaltyBoxArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            PenaltyBoxProtection = true,\n            PenaltyBoxAction = @var.Action,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecPenaltyBox(ctx, \"penaltyBox\", \u0026akamai.AppSecPenaltyBoxArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:     pulumi.Any(_var.Security_policy_id),\n\t\t\tPenaltyBoxProtection: pulumi.Bool(true),\n\t\t\tPenaltyBoxAction:     pulumi.Any(_var.Action),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "The action to take when penalty box protection is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. Ignored if `penalty_box_protection` is set to `false`.\n"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether to enable penalty box protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "penaltyBoxAction": {
                    "type": "string",
                    "description": "The action to take when penalty box protection is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. Ignored if `penalty_box_protection` is set to `false`.\n"
                },
                "penaltyBoxProtection": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether to enable penalty box protection.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "penaltyBoxAction",
                "penaltyBoxProtection",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecPenaltyBox resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "penaltyBoxAction": {
                        "type": "string",
                        "description": "The action to take when penalty box protection is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. Ignored if `penalty_box_protection` is set to `false`.\n"
                    },
                    "penaltyBoxProtection": {
                        "type": "boolean",
                        "description": "A boolean value indicating whether to enable penalty box protection.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicy:AppSecRatePolicy": {
            "description": "The `resource_akamai_appsec_rate_policy` resource allows you to create, modify or delete rate policies for a specific security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst ratePolicy = new akamai.AppSecRatePolicy(\"ratePolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    ratePolicy: fs.readFileSync(`${path.module}/rate_policy.json`),\n});\nexport const ratePolicyId = ratePolicy.ratePolicyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrate_policy = akamai.AppSecRatePolicy(\"ratePolicy\",\n    config_id=configuration.config_id,\n    rate_policy=(lambda path: open(path).read())(f\"{path['module']}/rate_policy.json\"))\npulumi.export(\"ratePolicyId\", rate_policy.rate_policy_id)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var ratePolicy = new Akamai.AppSecRatePolicy(\"ratePolicy\", new Akamai.AppSecRatePolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            RatePolicy = File.ReadAllText($\"{path.Module}/rate_policy.json\"),\n        });\n        this.RatePolicyId = ratePolicy.RatePolicyId;\n    }\n\n    [Output(\"ratePolicyId\")]\n    public Output\u003cstring\u003e RatePolicyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicy, err := akamai.NewAppSecRatePolicy(ctx, \"ratePolicy\", \u0026akamai.AppSecRatePolicyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tRatePolicy: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/rate_policy.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyId\", ratePolicy.RatePolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted rate policy definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#57c65cbd)).\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "The ID of an existing rate policy to be modified.\n"
                }
            },
            "required": [
                "configId",
                "ratePolicy",
                "ratePolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ratePolicy": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted rate policy definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#57c65cbd)).\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ratePolicy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ratePolicy": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted rate policy definition ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#57c65cbd)).\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "The ID of an existing rate policy to be modified.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRatePolicyAction:AppSecRatePolicyAction": {
            "description": "The `resource_akamai_appsec_rate_policy_action` resource allows you to create, modify or delete the actions in a rate policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst appsecRatePolicy = new akamai.AppSecRatePolicy(\"appsecRatePolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    ratePolicy: fs.readFileSync(`${path.module}/rate_policy.json`),\n});\nconst appsecRatePolicyAction = new akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    ratePolicyId: appsecRatePolicy.ratePolicyId,\n    ipv4Action: \"deny\",\n    ipv6Action: \"deny\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nappsec_rate_policy = akamai.AppSecRatePolicy(\"appsecRatePolicy\",\n    config_id=configuration.config_id,\n    rate_policy=(lambda path: open(path).read())(f\"{path['module']}/rate_policy.json\"))\nappsec_rate_policy_action = akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    rate_policy_id=appsec_rate_policy.rate_policy_id,\n    ipv4_action=\"deny\",\n    ipv6_action=\"deny\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var appsecRatePolicy = new Akamai.AppSecRatePolicy(\"appsecRatePolicy\", new Akamai.AppSecRatePolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            RatePolicy = File.ReadAllText($\"{path.Module}/rate_policy.json\"),\n        });\n        var appsecRatePolicyAction = new Akamai.AppSecRatePolicyAction(\"appsecRatePolicyAction\", new Akamai.AppSecRatePolicyActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            RatePolicyId = appsecRatePolicy.RatePolicyId,\n            Ipv4Action = \"deny\",\n            Ipv6Action = \"deny\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tappsecRatePolicy, err := akamai.NewAppSecRatePolicy(ctx, \"appsecRatePolicy\", \u0026akamai.AppSecRatePolicyArgs{\n\t\t\tConfigId:   pulumi.Int(configuration.ConfigId),\n\t\t\tRatePolicy: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/rate_policy.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRatePolicyAction(ctx, \"appsecRatePolicyAction\", \u0026akamai.AppSecRatePolicyActionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tRatePolicyId:     appsecRatePolicy.RatePolicyId,\n\t\t\tIpv4Action:       pulumi.String(\"deny\"),\n\t\t\tIpv6Action:       pulumi.String(\"deny\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": "The ipv4 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": "The ipv6 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "The ID of the rate policy to use.\n"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "required": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ipv4Action": {
                    "type": "string",
                    "description": "The ipv4 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                },
                "ipv6Action": {
                    "type": "string",
                    "description": "The ipv6 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                },
                "ratePolicyId": {
                    "type": "integer",
                    "description": "The ID of the rate policy to use.\n"
                },
                "securityPolicyId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "configId",
                "ipv4Action",
                "ipv6Action",
                "ratePolicyId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRatePolicyAction resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ipv4Action": {
                        "type": "string",
                        "description": "The ipv4 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                    },
                    "ipv6Action": {
                        "type": "string",
                        "description": "The ipv6 action to assign to this rate policy, either `alert`, `deny`, `deny_custom_{custom_deny_id}`, or `none`. If the action is none, the rate policy is inactive in the policy.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "The ID of the rate policy to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRateProtection:AppSecRateProtection": {
            "description": "Use the `akamai.AppSecRateProtection` resource to enable or disable rate protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecRateProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecRateProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecRateProtection(\"protection\", new Akamai.AppSecRateProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRateProtection(ctx, \"protection\", \u0026akamai.AppSecRateProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable rate controls: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable rate controls: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRateProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable rate controls: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfile:AppSecReputationProfile": {
            "description": "Use the `akamai.AppSecReputationProfile` resource to create or modify a reputation profile for a specific security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\n// USE CASE: user wants to create a reputation profile for a given configuration and version, using a JSON definition\nconst reputationProfile = new akamai.AppSecReputationProfile(\"reputationProfile\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    reputationProfile: fs.readFileSync(`${path.module}/reputation_profile.json`),\n});\nexport const reputationProfileId = akamai_appsec_reputation_profile.reputation_profile_id;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\n# USE CASE: user wants to create a reputation profile for a given configuration and version, using a JSON definition\nreputation_profile = akamai.AppSecReputationProfile(\"reputationProfile\",\n    config_id=configuration.config_id,\n    reputation_profile=(lambda path: open(path).read())(f\"{path['module']}/reputation_profile.json\"))\npulumi.export(\"reputationProfileId\", akamai_appsec_reputation_profile[\"reputation_profile_id\"])\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        // USE CASE: user wants to create a reputation profile for a given configuration and version, using a JSON definition\n        var reputationProfile = new Akamai.AppSecReputationProfile(\"reputationProfile\", new Akamai.AppSecReputationProfileArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            ReputationProfile = File.ReadAllText($\"{path.Module}/reputation_profile.json\"),\n        });\n        this.ReputationProfileId = akamai_appsec_reputation_profile.Reputation_profile_id;\n    }\n\n    [Output(\"reputationProfileId\")]\n    public Output\u003cstring\u003e ReputationProfileId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecReputationProfile(ctx, \"reputationProfile\", \u0026akamai.AppSecReputationProfileArgs{\n\t\t\tConfigId:          pulumi.Int(configuration.ConfigId),\n\t\t\tReputationProfile: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/reputation_profile.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileId\", akamai_appsec_reputation_profile.Reputation_profile_id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))\n"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "The ID of the newly created or modified reputation profile.\n"
                }
            },
            "required": [
                "configId",
                "reputationProfile",
                "reputationProfileId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "reputationProfile": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))\n"
                }
            },
            "requiredInputs": [
                "configId",
                "reputationProfile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfile resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "reputationProfile": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "The ID of the newly created or modified reputation profile.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAction:AppSecReputationProfileAction": {
            "description": "Use the `akamai.AppSecReputationProfileAction` resource to update what action should be taken when a reputation profile's rule is triggered.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst appsecReputationProfileAction = new akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    reputationProfileId: akamai_appsec_reputation_profile.reputation_profile.id,\n    action: \"alert\",\n});\nexport const reputationProfileId = akamai_appsec_reputation_profile.reputation_profile.reputation_profile_id;\nexport const reputationProfileAction = appsecReputationProfileAction.action;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nappsec_reputation_profile_action = akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    reputation_profile_id=akamai_appsec_reputation_profile[\"reputation_profile\"][\"id\"],\n    action=\"alert\")\npulumi.export(\"reputationProfileId\", akamai_appsec_reputation_profile[\"reputation_profile\"][\"reputation_profile_id\"])\npulumi.export(\"reputationProfileAction\", appsec_reputation_profile_action.action)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var appsecReputationProfileAction = new Akamai.AppSecReputationProfileAction(\"appsecReputationProfileAction\", new Akamai.AppSecReputationProfileActionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            ReputationProfileId = akamai_appsec_reputation_profile.Reputation_profile.Id,\n            Action = \"alert\",\n        });\n        this.ReputationProfileId = akamai_appsec_reputation_profile.Reputation_profile.Reputation_profile_id;\n        this.ReputationProfileAction = appsecReputationProfileAction.Action;\n    }\n\n    [Output(\"reputationProfileId\")]\n    public Output\u003cstring\u003e ReputationProfileId { get; set; }\n    [Output(\"reputationProfileAction\")]\n    public Output\u003cstring\u003e ReputationProfileAction { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tappsecReputationProfileAction, err := akamai.NewAppSecReputationProfileAction(ctx, \"appsecReputationProfileAction\", \u0026akamai.AppSecReputationProfileActionArgs{\n\t\t\tConfigId:            pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:    pulumi.Any(_var.Security_policy_id),\n\t\t\tReputationProfileId: pulumi.Any(akamai_appsec_reputation_profile.Reputation_profile.Id),\n\t\t\tAction:              pulumi.String(\"alert\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileId\", akamai_appsec_reputation_profile.Reputation_profile.Reputation_profile_id)\n\t\tctx.Export(\"reputationProfileAction\", appsecReputationProfileAction.Action)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action to take when the specified reputation profile’s rule is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "The ID of the reputation profile to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "The action to take when the specified reputation profile’s rule is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "reputationProfileId": {
                    "type": "integer",
                    "description": "The ID of the reputation profile to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "action",
                "configId",
                "reputationProfileId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAction resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action to take when the specified reputation profile’s rule is triggered: `alert` to record the trigger event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "The ID of the reputation profile to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProfileAnalysis:AppSecReputationProfileAnalysis": {
            "description": "The `resource_akamai_appsec_reputation_profile_analysis` resource allows you to toggle the reputation analysis settings for a given security policy. The `forward_to_http_header` parameter indicates whether to add client reputation details to requests forwarded to origin in an HTTP header. The `forward_shared_ip_to_http_header_siem` parameter indicates whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\n// USE CASE: user wants to set reputation analysis settings\nconst reputationAnalysis = new akamai.AppSecReputationProfileAnalysis(\"reputationAnalysis\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    forwardToHttpHeader: true,\n    forwardSharedIpToHttpHeaderSiem: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\n# USE CASE: user wants to set reputation analysis settings\nreputation_analysis = akamai.AppSecReputationProfileAnalysis(\"reputationAnalysis\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    forward_to_http_header=True,\n    forward_shared_ip_to_http_header_siem=True)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        // USE CASE: user wants to set reputation analysis settings\n        var reputationAnalysis = new Akamai.AppSecReputationProfileAnalysis(\"reputationAnalysis\", new Akamai.AppSecReputationProfileAnalysisArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            ForwardToHttpHeader = true,\n            ForwardSharedIpToHttpHeaderSiem = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecReputationProfileAnalysis(ctx, \"reputationAnalysis\", \u0026akamai.AppSecReputationProfileAnalysisArgs{\n\t\t\tConfigId:                        pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:                pulumi.Any(_var.Security_policy_id),\n\t\t\tForwardToHttpHeader:             pulumi.Bool(true),\n\t\t\tForwardSharedIpToHttpHeaderSiem: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": "Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.\n"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": "Whether to add client reputation details to requests forwarded to origin in an HTTP header.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security_policy_id to which the settings should be applied.\n"
                }
            },
            "required": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "forwardSharedIpToHttpHeaderSiem": {
                    "type": "boolean",
                    "description": "Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.\n"
                },
                "forwardToHttpHeader": {
                    "type": "boolean",
                    "description": "Whether to add client reputation details to requests forwarded to origin in an HTTP header.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security_policy_id to which the settings should be applied.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "forwardSharedIpToHttpHeaderSiem",
                "forwardToHttpHeader",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProfileAnalysis resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "forwardSharedIpToHttpHeaderSiem": {
                        "type": "boolean",
                        "description": "Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.\n"
                    },
                    "forwardToHttpHeader": {
                        "type": "boolean",
                        "description": "Whether to add client reputation details to requests forwarded to origin in an HTTP header.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security_policy_id to which the settings should be applied.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecReputationProtection:AppSecReputationProtection": {
            "description": "Use the `akamai.AppSecReputationProtection` resource to enable or disable reputation protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecReputationProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecReputationProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecReputationProtection(\"protection\", new Akamai.AppSecReputationProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecReputationProtection(ctx, \"protection\", \u0026akamai.AppSecReputationProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable reputation controls: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable reputation controls: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecReputationProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable reputation controls: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRule:AppSecRule": {
            "description": "Use the `akamai.AppSecRule` resource to create or modify a rule's action, conditions and exceptions. When the conditions are met, the rule’s actions are ignored and not applied to that specific traffic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst rule = new akamai.AppSecRule(\"rule\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    ruleId: _var.rule_id,\n    ruleAction: _var.action,\n    conditionException: fs.readFileSync(`${path.module}/condition_exception.json`),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrule = akamai.AppSecRule(\"rule\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    rule_id=var[\"rule_id\"],\n    rule_action=var[\"action\"],\n    condition_exception=(lambda path: open(path).read())(f\"{path['module']}/condition_exception.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var rule = new Akamai.AppSecRule(\"rule\", new Akamai.AppSecRuleArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            RuleId = @var.Rule_id,\n            RuleAction = @var.Action,\n            ConditionException = File.ReadAllText($\"{path.Module}/condition_exception.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecRule(ctx, \"rule\", \u0026akamai.AppSecRuleArgs{\n\t\t\tConfigId:           pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:   pulumi.Any(_var.Security_policy_id),\n\t\t\tRuleId:             pulumi.Any(_var.Rule_id),\n\t\t\tRuleAction:         pulumi.Any(_var.Action),\n\t\t\tConditionException: readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/condition_exception.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putconditionexception))\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. __ASE Beta__. if policy is in ASE_AUTO mode, only condition_exception can be modified, \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "The ID of the rule to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "ruleId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "conditionException": {
                    "type": "string",
                    "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putconditionexception))\n"
                },
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "ruleAction": {
                    "type": "string",
                    "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. __ASE Beta__. if policy is in ASE_AUTO mode, only condition_exception can be modified, \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more.\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "The ID of the rule to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "ruleId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRule resources.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putconditionexception))\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": "The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action. __ASE Beta__. if policy is in ASE_AUTO mode, only condition_exception can be modified, \"ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "The ID of the rule to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade": {
            "description": "TBD\nUse the `akamai.AppSecRuleUpgrade` resource to upgrade to the most recent version of the KRS rule set. Akamai periodically updates these rules to keep protections current. However, the rules you use in your security policies do not automatically upgrade to the latest version when using mode: KRS. These rules do update automatically when you have mode set to AAG. Before you upgrade, run Get upgrade details to see which rules have changed. If you want to test how these rules would operate with live traffic before committing to the upgrade, run them in evaluation mode. This applies to KRS rules only and does not allow you to make any changes to the rules themselves. The response is the same as the mode response. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst ruleUpgrade = new akamai.AppSecRuleUpgrade(\"ruleUpgrade\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n});\nexport const ruleUpgradeCurrentRuleset = ruleUpgrade.currentRuleset;\nexport const ruleUpgradeMode = ruleUpgrade.mode;\nexport const ruleUpgradeEvalStatus = ruleUpgrade.evalStatus;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrule_upgrade = akamai.AppSecRuleUpgrade(\"ruleUpgrade\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"ruleUpgradeCurrentRuleset\", rule_upgrade.current_ruleset)\npulumi.export(\"ruleUpgradeMode\", rule_upgrade.mode)\npulumi.export(\"ruleUpgradeEvalStatus\", rule_upgrade.eval_status)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var ruleUpgrade = new Akamai.AppSecRuleUpgrade(\"ruleUpgrade\", new Akamai.AppSecRuleUpgradeArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n        });\n        this.RuleUpgradeCurrentRuleset = ruleUpgrade.CurrentRuleset;\n        this.RuleUpgradeMode = ruleUpgrade.Mode;\n        this.RuleUpgradeEvalStatus = ruleUpgrade.EvalStatus;\n    }\n\n    [Output(\"ruleUpgradeCurrentRuleset\")]\n    public Output\u003cstring\u003e RuleUpgradeCurrentRuleset { get; set; }\n    [Output(\"ruleUpgradeMode\")]\n    public Output\u003cstring\u003e RuleUpgradeMode { get; set; }\n    [Output(\"ruleUpgradeEvalStatus\")]\n    public Output\u003cstring\u003e RuleUpgradeEvalStatus { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\truleUpgrade, err := akamai.NewAppSecRuleUpgrade(ctx, \"ruleUpgrade\", \u0026akamai.AppSecRuleUpgradeArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ruleUpgradeCurrentRuleset\", ruleUpgrade.CurrentRuleset)\n\t\tctx.Export(\"ruleUpgradeMode\", ruleUpgrade.Mode)\n\t\tctx.Export(\"ruleUpgradeEvalStatus\", ruleUpgrade.EvalStatus)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "A string indicating the version number and release date of the current KRS rule set.\n"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "TBD\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string indicating the current mode, either KRS,AAG,ASE_AUTO,ASE_MANUAL\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "upgradeMode": {
                    "type": "string",
                    "description": "__ASE Beta__. (Optional) ASE_AUTO or ASE_MANUAL.  ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalStatus",
                "mode",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "upgradeMode": {
                    "type": "string",
                    "description": "__ASE Beta__. (Optional) ASE_AUTO or ASE_MANUAL.  ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecRuleUpgrade resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "A string indicating the version number and release date of the current KRS rule set.\n"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "TBD\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "A string indicating the current mode, either KRS,AAG,ASE_AUTO,ASE_MANUAL\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    },
                    "upgradeMode": {
                        "type": "string",
                        "description": "__ASE Beta__. (Optional) ASE_AUTO or ASE_MANUAL.  ASE (Adaptive Security Engine) is currently in beta. Please contact your Akamai representative to learn more. Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicy:AppSecSecurityPolicy": {
            "description": "Use the `akamai.AppSecSecurityPolicy` resource to create a new security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst securityPolicyCreateAppSecSecurityPolicy = new akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    defaultSettings: _var.default_settings,\n    securityPolicyName: _var.policy_name,\n    securityPolicyPrefix: _var.policy_prefix,\n});\nexport const securityPolicyCreate = securityPolicyCreateAppSecSecurityPolicy.securityPolicyId;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nsecurity_policy_create_app_sec_security_policy = akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\",\n    config_id=configuration.config_id,\n    default_settings=var[\"default_settings\"],\n    security_policy_name=var[\"policy_name\"],\n    security_policy_prefix=var[\"policy_prefix\"])\npulumi.export(\"securityPolicyCreate\", security_policy_create_app_sec_security_policy.security_policy_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var securityPolicyCreateAppSecSecurityPolicy = new Akamai.AppSecSecurityPolicy(\"securityPolicyCreateAppSecSecurityPolicy\", new Akamai.AppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            DefaultSettings = @var.Default_settings,\n            SecurityPolicyName = @var.Policy_name,\n            SecurityPolicyPrefix = @var.Policy_prefix,\n        });\n        this.SecurityPolicyCreate = securityPolicyCreateAppSecSecurityPolicy.SecurityPolicyId;\n    }\n\n    [Output(\"securityPolicyCreate\")]\n    public Output\u003cstring\u003e SecurityPolicyCreate { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicyCreateAppSecSecurityPolicy, err := akamai.NewAppSecSecurityPolicy(ctx, \"securityPolicyCreateAppSecSecurityPolicy\", \u0026akamai.AppSecSecurityPolicyArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tDefaultSettings:      pulumi.Any(_var.Default_settings),\n\t\t\tSecurityPolicyName:   pulumi.Any(_var.Policy_name),\n\t\t\tSecurityPolicyPrefix: pulumi.Any(_var.Policy_prefix),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"securityPolicyCreate\", securityPolicyCreateAppSecSecurityPolicy.SecurityPolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to clone from.\n"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": "Whether the new policy should use the default settings. If not supplied, defaults to true.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the newly created security policy.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "The name of the new security policy.\n"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "The four-character alphanumeric string prefix for the policy ID.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "createFromSecurityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to clone from.\n"
                },
                "defaultSettings": {
                    "type": "boolean",
                    "description": "Whether the new policy should use the default settings. If not supplied, defaults to true.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "The name of the new security policy.\n"
                },
                "securityPolicyPrefix": {
                    "type": "string",
                    "description": "The four-character alphanumeric string prefix for the policy ID.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyName",
                "securityPolicyPrefix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicy resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "createFromSecurityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to clone from.\n"
                    },
                    "defaultSettings": {
                        "type": "boolean",
                        "description": "Whether the new policy should use the default settings. If not supplied, defaults to true.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the newly created security policy.\n"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "The name of the new security policy.\n"
                    },
                    "securityPolicyPrefix": {
                        "type": "string",
                        "description": "The four-character alphanumeric string prefix for the policy ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSecurityPolicyRename:AppSecSecurityPolicyRename": {
            "description": "The `akamai.AppSecSecurityPolicyRename` resource allows you to rename an existing security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst securityPolicyRename = new akamai.AppSecSecurityPolicy(\"securityPolicyRename\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    securityPolicyName: _var.name,\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to be renamed.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "The new name to be given to the security policy.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to be renamed.\n"
                },
                "securityPolicyName": {
                    "type": "string",
                    "description": "The new name to be given to the security policy.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "securityPolicyName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSecurityPolicyRename resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to be renamed.\n"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "The new name to be given to the security policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames": {
            "description": "The `akamai.AppSecSelectedHostnames` resource allows you to set the list of hostnames protected under a given security configuration.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst appsecselectedhostnames = new akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    hostnames: [\"example.com\"],\n    mode: \"APPEND\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nappsecselectedhostnames = akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\",\n    config_id=configuration.config_id,\n    hostnames=[\"example.com\"],\n    mode=\"APPEND\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var appsecselectedhostnames = new Akamai.AppSecSelectedHostnames(\"appsecselectedhostnames\", new Akamai.AppSecSelectedHostnamesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            Hostnames = \n            {\n                \"example.com\",\n            },\n            Mode = \"APPEND\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSelectedHostnames(ctx, \"appsecselectedhostnames\", \u0026akamai.AppSecSelectedHostnamesArgs{\n\t\t\tConfigId: pulumi.Int(configuration.ConfigId),\n\t\t\tHostnames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t},\n\t\t\tMode: pulumi.String(\"APPEND\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of hostnames to be applied, added or removed.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `hostnames` parameter. Must be one of the following:\n"
                }
            },
            "required": [
                "configId",
                "hostnames",
                "mode"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of hostnames to be applied, added or removed.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `hostnames` parameter. Must be one of the following:\n"
                }
            },
            "requiredInputs": [
                "configId",
                "hostnames",
                "mode"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of hostnames to be applied, added or removed.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "A string specifying the interpretation of the `hostnames` parameter. Must be one of the following:\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSiemSettings:AppSecSiemSettings": {
            "description": "Use the `akamai.AppSecSiemSettings` resource to mpdate the SIEM integration settings for a specific configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst siemDefinition = akamai.getAppSecSiemDefinitions({\n    siemDefinitionName: _var.siem_definition_name,\n});\nconst securityPolicies = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n}));\nconst siem = new akamai.AppSecSiemSettings(\"siem\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    enableSiem: true,\n    enableForAllPolicies: false,\n    enableBotmanSiem: true,\n    siemId: siemDefinition.then(siemDefinition =\u003e siemDefinition.id),\n    securityPolicyIds: securityPolicies.then(securityPolicies =\u003e securityPolicies.securityPolicyIdLists),\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nsiem_definition = akamai.get_app_sec_siem_definitions(siem_definition_name=var[\"siem_definition_name\"])\nsecurity_policies = akamai.get_app_sec_security_policy(config_id=configuration.config_id)\nsiem = akamai.AppSecSiemSettings(\"siem\",\n    config_id=configuration.config_id,\n    enable_siem=True,\n    enable_for_all_policies=False,\n    enable_botman_siem=True,\n    siem_id=siem_definition.id,\n    security_policy_ids=security_policies.security_policy_id_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var siemDefinition = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync(new Akamai.GetAppSecSiemDefinitionsArgs\n        {\n            SiemDefinitionName = @var.Siem_definition_name,\n        }));\n        var securityPolicies = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        var siem = new Akamai.AppSecSiemSettings(\"siem\", new Akamai.AppSecSiemSettingsArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            EnableSiem = true,\n            EnableForAllPolicies = false,\n            EnableBotmanSiem = true,\n            SiemId = siemDefinition.Apply(siemDefinition =\u003e siemDefinition.Id),\n            SecurityPolicyIds = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.SecurityPolicyIdLists),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := _var.Siem_definition_name\n\t\tsiemDefinition, err := akamai.GetAppSecSiemDefinitions(ctx, \u0026GetAppSecSiemDefinitionsArgs{\n\t\t\tSiemDefinitionName: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicies, err := akamai.LookupAppSecSecurityPolicy(ctx, \u0026GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSiemSettings(ctx, \"siem\", \u0026akamai.AppSecSiemSettingsArgs{\n\t\t\tConfigId:             pulumi.Int(configuration.ConfigId),\n\t\t\tEnableSiem:           pulumi.Bool(true),\n\t\t\tEnableForAllPolicies: pulumi.Bool(false),\n\t\t\tEnableBotmanSiem:     pulumi.Bool(true),\n\t\t\tSiemId:               pulumi.String(siemDefinition.Id),\n\t\t\tSecurityPolicyIds:    interface{}(securityPolicies.SecurityPolicyIdLists),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM for the Bot Manager events.\n"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM for all the security policies in the configuration.\n"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM in a security configuration version.\n"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security policy identifiers for which to enable the SIEM integration.\n"
                },
                "siemId": {
                    "type": "integer",
                    "description": "An integer that uniquely identifies the SIEM settings.\n"
                }
            },
            "required": [
                "configId",
                "enableBotmanSiem",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "enableBotmanSiem": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM for the Bot Manager events.\n"
                },
                "enableForAllPolicies": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM for all the security policies in the configuration.\n"
                },
                "enableSiem": {
                    "type": "boolean",
                    "description": "Whether you enabled SIEM in a security configuration version.\n"
                },
                "securityPolicyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of security policy identifiers for which to enable the SIEM integration.\n"
                },
                "siemId": {
                    "type": "integer",
                    "description": "An integer that uniquely identifies the SIEM settings.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enableBotmanSiem",
                "enableForAllPolicies",
                "enableSiem",
                "siemId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSiemSettings resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "enableBotmanSiem": {
                        "type": "boolean",
                        "description": "Whether you enabled SIEM for the Bot Manager events.\n"
                    },
                    "enableForAllPolicies": {
                        "type": "boolean",
                        "description": "Whether you enabled SIEM for all the security policies in the configuration.\n"
                    },
                    "enableSiem": {
                        "type": "boolean",
                        "description": "Whether you enabled SIEM in a security configuration version.\n"
                    },
                    "securityPolicyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of security policy identifiers for which to enable the SIEM integration.\n"
                    },
                    "siemId": {
                        "type": "integer",
                        "description": "An integer that uniquely identifies the SIEM settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPost:AppSecSlowPost": {
            "description": "Use the `akamai.AppSecSlowPost` data source to update the slow post protection settings for a given security configuration and policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst slowPost = new akamai.AppSecSlowPost(\"slowPost\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    slowRateAction: \"alert\",\n    slowRateThresholdRate: 10,\n    slowRateThresholdPeriod: 30,\n    durationThresholdTimeout: 20,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nslow_post = akamai.AppSecSlowPost(\"slowPost\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    slow_rate_action=\"alert\",\n    slow_rate_threshold_rate=10,\n    slow_rate_threshold_period=30,\n    duration_threshold_timeout=20)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var slowPost = new Akamai.AppSecSlowPost(\"slowPost\", new Akamai.AppSecSlowPostArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            SlowRateAction = \"alert\",\n            SlowRateThresholdRate = 10,\n            SlowRateThresholdPeriod = 30,\n            DurationThresholdTimeout = 20,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSlowPost(ctx, \"slowPost\", \u0026akamai.AppSecSlowPostArgs{\n\t\t\tConfigId:                 pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId:         pulumi.Any(_var.Security_policy_id),\n\t\t\tSlowRateAction:           pulumi.String(\"alert\"),\n\t\t\tSlowRateThresholdRate:    pulumi.Int(10),\n\t\t\tSlowRateThresholdPeriod:  pulumi.Int(30),\n\t\t\tDurationThresholdTimeout: pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": "The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": "The action that the rule should trigger (either `alert` or `abort`).\n"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": "The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.\n"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": "The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "durationThresholdTimeout": {
                    "type": "integer",
                    "description": "The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "slowRateAction": {
                    "type": "string",
                    "description": "The action that the rule should trigger (either `alert` or `abort`).\n"
                },
                "slowRateThresholdPeriod": {
                    "type": "integer",
                    "description": "The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.\n"
                },
                "slowRateThresholdRate": {
                    "type": "integer",
                    "description": "The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "slowRateAction"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPost resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "durationThresholdTimeout": {
                        "type": "integer",
                        "description": "The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    },
                    "slowRateAction": {
                        "type": "string",
                        "description": "The action that the rule should trigger (either `alert` or `abort`).\n"
                    },
                    "slowRateThresholdPeriod": {
                        "type": "integer",
                        "description": "The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.\n"
                    },
                    "slowRateThresholdRate": {
                        "type": "integer",
                        "description": "The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecSlowPostProtection:AppSecSlowPostProtection": {
            "description": "Use the `akamai.AppSecSlowPostProtection` resource to enable or disable slowpost protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecSlowPostProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecSlowPostProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecSlowPostProtection(\"protection\", new Akamai.AppSecSlowPostProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecSlowPostProtection(ctx, \"protection\", \u0026akamai.AppSecSlowPostProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable slowpost controls: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable slowpost controls: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecSlowPostProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable slowpost controls: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecThreatIntel:AppSecThreatIntel": {
            "description": "Use `akamai.AppSecThreatIntel` resource to update threat intelligence setting for a policy. Only applies to ASE Manual rulesets. Allowed values are on and off\n__BETA__ This is Adaptive Security Engine(ASE) related data resource. Please contact your akamai representative if you want to learn more\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst threatIntel = new akamai.AppSecThreatIntel(\"threatIntel\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    threatIntel: _var.threat_intel,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nthreat_intel = akamai.AppSecThreatIntel(\"threatIntel\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    threat_intel=var[\"threat_intel\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var threatIntel = new Akamai.AppSecThreatIntel(\"threatIntel\", new Akamai.AppSecThreatIntelArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            ThreatIntel = @var.Threat_intel,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecThreatIntel(ctx, \"threatIntel\", \u0026akamai.AppSecThreatIntelArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tThreatIntel:      pulumi.Any(_var.Threat_intel),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "threatIntel": {
                    "type": "string",
                    "description": "threat_intel - \"on\" or \"off\"\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                },
                "threatIntel": {
                    "type": "string",
                    "description": "threat_intel - \"on\" or \"off\"\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId",
                "threatIntel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecThreatIntel resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    },
                    "threatIntel": {
                        "type": "string",
                        "description": "threat_intel - \"on\" or \"off\"\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecVersionNodes:AppSecVersionNodes": {
            "description": "Use the `akamai.AppSecVersionNodes` resource to update the version notes for a configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\n// USE CASE: user wants to update the version notes of the latest version\nconst versionNotesAppSecVersionNodes = new akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    versionNotes: _var.version_notes,\n});\nexport const versionNotes = versionNotesAppSecVersionNodes.outputText;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\n# USE CASE: user wants to update the version notes of the latest version\nversion_notes_app_sec_version_nodes = akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\",\n    config_id=configuration.config_id,\n    version_notes=var[\"version_notes\"])\npulumi.export(\"versionNotes\", version_notes_app_sec_version_nodes.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        // USE CASE: user wants to update the version notes of the latest version\n        var versionNotesAppSecVersionNodes = new Akamai.AppSecVersionNodes(\"versionNotesAppSecVersionNodes\", new Akamai.AppSecVersionNodesArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            VersionNotes = @var.Version_notes,\n        });\n        this.VersionNotes = versionNotesAppSecVersionNodes.OutputText;\n    }\n\n    [Output(\"versionNotes\")]\n    public Output\u003cstring\u003e VersionNotes { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversionNotesAppSecVersionNodes, err := akamai.NewAppSecVersionNodes(ctx, \"versionNotesAppSecVersionNodes\", \u0026akamai.AppSecVersionNodesArgs{\n\t\t\tConfigId:     pulumi.Int(configuration.ConfigId),\n\t\t\tVersionNotes: pulumi.Any(_var.Version_notes),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionNotes\", versionNotesAppSecVersionNodes.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the updated version notes.\n"
                },
                "versionNotes": {
                    "type": "string",
                    "description": "A string containing the version notes to be used.\n"
                }
            },
            "required": [
                "configId",
                "outputText",
                "versionNotes"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The configuration ID to use.\n"
                },
                "versionNotes": {
                    "type": "string",
                    "description": "A string containing the version notes to be used.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "versionNotes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecVersionNodes resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the updated version notes.\n"
                    },
                    "versionNotes": {
                        "type": "string",
                        "description": "A string containing the version notes to be used.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafMode:AppSecWafMode": {
            "description": "Use the `akamai.AppSecWafMode` resource to specify how your rule sets are updated. Use KRS mode to update the rule sets manually, or AAG to have them update automatically.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst wafMode = new akamai.AppSecWafMode(\"wafMode\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.policy_id,\n    mode: _var.mode,\n});\nexport const wafModeMode = wafMode.mode;\nexport const wafModeCurrentRuleset = wafMode.currentRuleset;\nexport const wafModeEvalStatus = wafMode.evalStatus;\nexport const wafModeEvalRuleset = wafMode.evalRuleset;\nexport const wafModeEvalExpirationDate = wafMode.evalExpirationDate;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nwaf_mode = akamai.AppSecWafMode(\"wafMode\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"policy_id\"],\n    mode=var[\"mode\"])\npulumi.export(\"wafModeMode\", waf_mode.mode)\npulumi.export(\"wafModeCurrentRuleset\", waf_mode.current_ruleset)\npulumi.export(\"wafModeEvalStatus\", waf_mode.eval_status)\npulumi.export(\"wafModeEvalRuleset\", waf_mode.eval_ruleset)\npulumi.export(\"wafModeEvalExpirationDate\", waf_mode.eval_expiration_date)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var wafMode = new Akamai.AppSecWafMode(\"wafMode\", new Akamai.AppSecWafModeArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Policy_id,\n            Mode = @var.Mode,\n        });\n        this.WafModeMode = wafMode.Mode;\n        this.WafModeCurrentRuleset = wafMode.CurrentRuleset;\n        this.WafModeEvalStatus = wafMode.EvalStatus;\n        this.WafModeEvalRuleset = wafMode.EvalRuleset;\n        this.WafModeEvalExpirationDate = wafMode.EvalExpirationDate;\n    }\n\n    [Output(\"wafModeMode\")]\n    public Output\u003cstring\u003e WafModeMode { get; set; }\n    [Output(\"wafModeCurrentRuleset\")]\n    public Output\u003cstring\u003e WafModeCurrentRuleset { get; set; }\n    [Output(\"wafModeEvalStatus\")]\n    public Output\u003cstring\u003e WafModeEvalStatus { get; set; }\n    [Output(\"wafModeEvalRuleset\")]\n    public Output\u003cstring\u003e WafModeEvalRuleset { get; set; }\n    [Output(\"wafModeEvalExpirationDate\")]\n    public Output\u003cstring\u003e WafModeEvalExpirationDate { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twafMode, err := akamai.NewAppSecWafMode(ctx, \"wafMode\", \u0026akamai.AppSecWafModeArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Policy_id),\n\t\t\tMode:             pulumi.Any(_var.Mode),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"wafModeMode\", wafMode.Mode)\n\t\tctx.Export(\"wafModeCurrentRuleset\", wafMode.CurrentRuleset)\n\t\tctx.Export(\"wafModeEvalStatus\", wafMode.EvalStatus)\n\t\tctx.Export(\"wafModeEvalRuleset\", wafMode.EvalRuleset)\n\t\tctx.Export(\"wafModeEvalExpirationDate\", wafMode.EvalExpirationDate)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "currentRuleset": {
                    "type": "string",
                    "description": "The current rule set.\n"
                },
                "evalExpirationDate": {
                    "type": "string",
                    "description": "The date on which the evaluation period ends.\n"
                },
                "evalRuleset": {
                    "type": "string",
                    "description": "The rule set being evaluated if any.\n"
                },
                "evalStatus": {
                    "type": "string",
                    "description": "Either `enabled` if an evaluation is currently in progress, or `disabled` otherwise.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "\"KRS\" to update the rule sets manually, or \"AAG\" to have them update automatically. For Adaptive Security Engine (ASE) __BETA__, use `ASE_AUTO` for automatic updates or `ASE_MANUAL` to manually get current rules. Please contact your Akamai representative to learn more about ASE. Policy Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current rule set, WAF mode and evaluation status (`enabled` if a rule set is currently being evaluated, `disabled` otherwise).\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "currentRuleset",
                "evalExpirationDate",
                "evalRuleset",
                "evalStatus",
                "mode",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "\"KRS\" to update the rule sets manually, or \"AAG\" to have them update automatically. For Adaptive Security Engine (ASE) __BETA__, use `ASE_AUTO` for automatic updates or `ASE_MANUAL` to manually get current rules. Please contact your Akamai representative to learn more about ASE. Policy Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "mode",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafMode resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "The current rule set.\n"
                    },
                    "evalExpirationDate": {
                        "type": "string",
                        "description": "The date on which the evaluation period ends.\n"
                    },
                    "evalRuleset": {
                        "type": "string",
                        "description": "The rule set being evaluated if any.\n"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Either `enabled` if an evaluation is currently in progress, or `disabled` otherwise.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "\"KRS\" to update the rule sets manually, or \"AAG\" to have them update automatically. For Adaptive Security Engine (ASE) __BETA__, use `ASE_AUTO` for automatic updates or `ASE_MANUAL` to manually get current rules. Please contact your Akamai representative to learn more about ASE. Policy Rule Actions and Threat Intelligence setting are read only in ASE_AUTO mode\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current rule set, WAF mode and evaluation status (`enabled` if a rule set is currently being evaluated, `disabled` otherwise).\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWafProtection:AppSecWafProtection": {
            "description": "Use the `akamai.AppSecWafProtection` resource to enable or disable WAF protection for a given configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protection = new akamai.AppSecWafProtection(\"protection\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    enabled: _var.enabled,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotection = akamai.AppSecWafProtection(\"protection\",\n    config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    enabled=var[\"enabled\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protection = new Akamai.AppSecWafProtection(\"protection\", new Akamai.AppSecWafProtectionArgs\n        {\n            ConfigId = configuration.Apply(configuration =\u003e configuration.ConfigId),\n            SecurityPolicyId = @var.Security_policy_id,\n            Enabled = @var.Enabled,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewAppSecWafProtection(ctx, \"protection\", \u0026akamai.AppSecWafProtectionArgs{\n\t\t\tConfigId:         pulumi.Int(configuration.ConfigId),\n\t\t\tSecurityPolicyId: pulumi.Any(_var.Security_policy_id),\n\t\t\tEnabled:          pulumi.Any(_var.Enabled),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable WAF controls: either `true` or `false`.\n"
                },
                "outputText": {
                    "type": "string",
                    "description": "A tabular display showing the current protection settings.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "enabled",
                "outputText",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to enable WAF controls: either `true` or `false`.\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "enabled",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWafProtection resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether to enable WAF controls: either `true` or `false`.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the current protection settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/appSecWapSelectedHostnames:AppSecWapSelectedHostnames": {
            "description": "The `akamai.AppSecWapSelectedHostnames` resource allows you to set the lists of hostnames to be protected and to be evaluated\nunder a given security configuration and policy. This resource is available only for WAP accounts. Either of the lists of hostnames\nmay be omitted or specified as an empty list, but at least one of the two lists must be present and non-empty. (WAP selected hostnames\nis currently in beta. Please contact your Akamai representative for more information about this feature.)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst appsecwapSelectedhostnames = new akamai.AppSecWapSelectedHostnames(\"appsecwapSelectedhostnames\", {\n    configId: configuration.then(configuration =\u003e configuration.configId),\n    securityPolicyId: _var.security_policy_id,\n    protectedHostnames: [\"example.com\"],\n    evaluatedHostnames: [\"example2.com\"],\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "required": [
                "configId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "configId": {
                    "type": "integer",
                    "description": "The ID of the security configuration to use.\n"
                },
                "evaluatedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protectedHosts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of the security policy to use.\n"
                }
            },
            "requiredInputs": [
                "configId",
                "securityPolicyId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AppSecWapSelectedHostnames resources.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "evaluatedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "protectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpCode:CpCode": {
            "description": "The `akamai.CpCode` resource lets you create or reuse content provider (CP) codes.  CP codes track web traffic handled by Akamai servers. Akamai gives you a CP code when you purchase a product. You need this code when you activate associated properties.\n\nYou can create additional CP codes to support more detailed billing and reporting functions.\n\nBy default, the Akamai Provider uses your existing CP code instead of creating a new one.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst cpCode = new akamai.CpCode(\"cpCode\", {\n    contractId: akamai_contract.contract.id,\n    groupId: akamai_group.group.id,\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ncp_code = akamai.CpCode(\"cpCode\",\n    contract_id=akamai_contract[\"contract\"][\"id\"],\n    group_id=akamai_group[\"group\"][\"id\"],\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var cpCode = new Akamai.CpCode(\"cpCode\", new Akamai.CpCodeArgs\n        {\n            ContractId = akamai_contract.Contract.Id,\n            GroupId = akamai_group.Group.Id,\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewCpCode(ctx, \"cpCode\", \u0026akamai.CpCodeArgs{\n\t\t\tContractId: pulumi.Any(akamai_contract.Contract.Id),\n\t\t\tGroupId:    pulumi.Any(akamai_group.Group.Id),\n\t\t\tProductId:  pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nHere's a real-life example that includes other data sources as dependencies:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst groupName = \"example group name\";\nconst cpcodeName = \"My CP Code\";\nconst exampleContract = akamai.getContract({\n    groupName: groupName,\n});\nconst exampleGroup = exampleContract.then(exampleContract =\u003e akamai.getGroup({\n    name: groupName,\n    contractId: exampleContract.id,\n}));\nconst exampleCp = new akamai.CpCode(\"exampleCp\", {\n    groupId: exampleGroup.then(exampleGroup =\u003e exampleGroup.id),\n    contractId: exampleContract.then(exampleContract =\u003e exampleContract.id),\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ngroup_name = \"example group name\"\ncpcode_name = \"My CP Code\"\nexample_contract = akamai.get_contract(group_name=group_name)\nexample_group = akamai.get_group(name=group_name,\n    contract_id=example_contract.id)\nexample_cp = akamai.CpCode(\"exampleCp\",\n    group_id=example_group.id,\n    contract_id=example_contract.id,\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groupName = \"example group name\";\n        var cpcodeName = \"My CP Code\";\n        var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs\n        {\n            GroupName = groupName,\n        }));\n        var exampleGroup = exampleContract.Apply(exampleContract =\u003e Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs\n        {\n            Name = groupName,\n            ContractId = exampleContract.Id,\n        })));\n        var exampleCp = new Akamai.CpCode(\"exampleCp\", new Akamai.CpCodeArgs\n        {\n            GroupId = exampleGroup.Apply(exampleGroup =\u003e exampleGroup.Id),\n            ContractId = exampleContract.Apply(exampleContract =\u003e exampleContract.Id),\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgroupName := \"example group name\"\n\t\t_ := \"My CP Code\"\n\t\topt0 := groupName\n\t\texampleContract, err := akamai.GetContract(ctx, \u0026GetContractArgs{\n\t\t\tGroupName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := groupName\n\t\topt2 := exampleContract.Id\n\t\texampleGroup, err := akamai.GetGroup(ctx, \u0026GetGroupArgs{\n\t\t\tName:       \u0026opt1,\n\t\t\tContractId: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewCpCode(ctx, \"exampleCp\", \u0026akamai.CpCodeArgs{\n\t\t\tGroupId:    pulumi.String(exampleGroup.Id),\n\t\t\tContractId: pulumi.String(exampleContract.Id),\n\t\t\tProductId:  pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD\n* `name` - (Required) A descriptive label for the CP code. If you're creating a new CP code, the name can’t include commas, underscores, quotes, or any of these special characters: ^ # %.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required) A product's unique ID, including the `prd_` prefix.\n=======\n* `name` - (Required) A descriptive label for the CP code. If you're creating a new CP code, the name can’t include commas, underscores, quotes, or any of these special characters: ^ # %.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required) A product's unique ID, including the `prd_` prefix.\n\n### Deprecated arguments\n\n\u003e\u003e\u003e\u003e\u003e\u003e\u003e v1.6.1\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Replaced by `product_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\n* `id` - The ID of the CP code.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_cp_code\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import your Akamai CP codes using a comma-delimited string of the CP code, contract, and group IDs. You have to enter the IDs in this order`cpcode_id,contract_id,group_id` For example\n\n```sh\n $ pulumi import akamai:index/cpCode:CpCode example cpc_123,ctr_1-AB123,grp_123\n```\n\n ",
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product",
                "productId"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/cpCode:CpCode"
                }
            ]
        },
        "akamai:index/cpsDvEnrollment:CpsDvEnrollment": {
            "description": "Use the `akamai.CpsDvEnrollment` resource to create an enrollment with all the information about your certificate life cycle, from the time you request it, through removal or automatic renewal. You can treat an enrollment as a core container for all the operations you perform within CPS.\n\nYou can use this resource with `akamai.DnsRecord` or other third-party DNS provider to create DNS records, and `akamai.CpsDvValidation` to complete the certificate validation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.CpsDvEnrollment(\"example\", {\n    contractId: \"ctr_1-AB123\",\n    acknowledgePreVerificationWarnings: true,\n    commonName: \"cps-test.example.net\",\n    sans: [\n        \"san1.cps-test.example.net\",\n        \"san2.cps-test.example.net\",\n    ],\n    secureNetwork: \"enhanced-tls\",\n    sniOnly: true,\n    adminContact: {\n        firstName: \"x1\",\n        lastName: \"x2\",\n        phone: \"123123123\",\n        email: \"x1x2@example.net\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        organization: \"Akamai\",\n        postalCode: \"02142\",\n        region: \"MA\",\n        title: \"Administrator\",\n    },\n    techContact: {\n        firstName: \"x3\",\n        lastName: \"x4\",\n        phone: \"123123123\",\n        email: \"x3x4@akamai.com\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        organization: \"Akamai\",\n        postalCode: \"02142\",\n        region: \"MA\",\n        title: \"Administrator\",\n    },\n    certificateChainType: \"default\",\n    csr: {\n        countryCode: \"US\",\n        city: \"cambridge\",\n        organization: \"Akamai\",\n        organizationalUnit: \"Dev\",\n        state: \"MA\",\n    },\n    enableMultiStackedCertificates: false,\n    networkConfiguration: {\n        disallowedTlsVersions: [\n            \"TLSv1\",\n            \"TLSv1_1\",\n        ],\n        cloneDnsNames: false,\n        geography: \"core\",\n        ocspStapling: \"on\",\n        preferredCiphers: \"ak-akamai-2020q1\",\n        mustHaveCiphers: \"ak-akamai-2020q1\",\n        quicEnabled: false,\n    },\n    signatureAlgorithm: \"SHA-256\",\n    organization: {\n        name: \"Akamai\",\n        phone: \"123123123\",\n        addressLineOne: \"150 Broadway\",\n        city: \"Cambridge\",\n        countryCode: \"US\",\n        postalCode: \"02142\",\n        region: \"MA\",\n    },\n});\nexport const dnsChallenges = example.dnsChallenges;\nexport const httpChallenges = example.httpChallenges;\nexport const enrollmentId = example.id;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.CpsDvEnrollment(\"example\",\n    contract_id=\"ctr_1-AB123\",\n    acknowledge_pre_verification_warnings=True,\n    common_name=\"cps-test.example.net\",\n    sans=[\n        \"san1.cps-test.example.net\",\n        \"san2.cps-test.example.net\",\n    ],\n    secure_network=\"enhanced-tls\",\n    sni_only=True,\n    admin_contact=akamai.CpsDvEnrollmentAdminContactArgs(\n        first_name=\"x1\",\n        last_name=\"x2\",\n        phone=\"123123123\",\n        email=\"x1x2@example.net\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        organization=\"Akamai\",\n        postal_code=\"02142\",\n        region=\"MA\",\n        title=\"Administrator\",\n    ),\n    tech_contact=akamai.CpsDvEnrollmentTechContactArgs(\n        first_name=\"x3\",\n        last_name=\"x4\",\n        phone=\"123123123\",\n        email=\"x3x4@akamai.com\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        organization=\"Akamai\",\n        postal_code=\"02142\",\n        region=\"MA\",\n        title=\"Administrator\",\n    ),\n    certificate_chain_type=\"default\",\n    csr=akamai.CpsDvEnrollmentCsrArgs(\n        country_code=\"US\",\n        city=\"cambridge\",\n        organization=\"Akamai\",\n        organizational_unit=\"Dev\",\n        state=\"MA\",\n    ),\n    enable_multi_stacked_certificates=False,\n    network_configuration=akamai.CpsDvEnrollmentNetworkConfigurationArgs(\n        disallowed_tls_versions=[\n            \"TLSv1\",\n            \"TLSv1_1\",\n        ],\n        clone_dns_names=False,\n        geography=\"core\",\n        ocsp_stapling=\"on\",\n        preferred_ciphers=\"ak-akamai-2020q1\",\n        must_have_ciphers=\"ak-akamai-2020q1\",\n        quic_enabled=False,\n    ),\n    signature_algorithm=\"SHA-256\",\n    organization=akamai.CpsDvEnrollmentOrganizationArgs(\n        name=\"Akamai\",\n        phone=\"123123123\",\n        address_line_one=\"150 Broadway\",\n        city=\"Cambridge\",\n        country_code=\"US\",\n        postal_code=\"02142\",\n        region=\"MA\",\n    ))\npulumi.export(\"dnsChallenges\", example.dns_challenges)\npulumi.export(\"httpChallenges\", example.http_challenges)\npulumi.export(\"enrollmentId\", example.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.CpsDvEnrollment(\"example\", new Akamai.CpsDvEnrollmentArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            AcknowledgePreVerificationWarnings = true,\n            CommonName = \"cps-test.example.net\",\n            Sans = \n            {\n                \"san1.cps-test.example.net\",\n                \"san2.cps-test.example.net\",\n            },\n            SecureNetwork = \"enhanced-tls\",\n            SniOnly = true,\n            AdminContact = new Akamai.Inputs.CpsDvEnrollmentAdminContactArgs\n            {\n                FirstName = \"x1\",\n                LastName = \"x2\",\n                Phone = \"123123123\",\n                Email = \"x1x2@example.net\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                Organization = \"Akamai\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n                Title = \"Administrator\",\n            },\n            TechContact = new Akamai.Inputs.CpsDvEnrollmentTechContactArgs\n            {\n                FirstName = \"x3\",\n                LastName = \"x4\",\n                Phone = \"123123123\",\n                Email = \"x3x4@akamai.com\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                Organization = \"Akamai\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n                Title = \"Administrator\",\n            },\n            CertificateChainType = \"default\",\n            Csr = new Akamai.Inputs.CpsDvEnrollmentCsrArgs\n            {\n                CountryCode = \"US\",\n                City = \"cambridge\",\n                Organization = \"Akamai\",\n                OrganizationalUnit = \"Dev\",\n                State = \"MA\",\n            },\n            EnableMultiStackedCertificates = false,\n            NetworkConfiguration = new Akamai.Inputs.CpsDvEnrollmentNetworkConfigurationArgs\n            {\n                DisallowedTlsVersions = \n                {\n                    \"TLSv1\",\n                    \"TLSv1_1\",\n                },\n                CloneDnsNames = false,\n                Geography = \"core\",\n                OcspStapling = \"on\",\n                PreferredCiphers = \"ak-akamai-2020q1\",\n                MustHaveCiphers = \"ak-akamai-2020q1\",\n                QuicEnabled = false,\n            },\n            SignatureAlgorithm = \"SHA-256\",\n            Organization = new Akamai.Inputs.CpsDvEnrollmentOrganizationArgs\n            {\n                Name = \"Akamai\",\n                Phone = \"123123123\",\n                AddressLineOne = \"150 Broadway\",\n                City = \"Cambridge\",\n                CountryCode = \"US\",\n                PostalCode = \"02142\",\n                Region = \"MA\",\n            },\n        });\n        this.DnsChallenges = example.DnsChallenges;\n        this.HttpChallenges = example.HttpChallenges;\n        this.EnrollmentId = example.Id;\n    }\n\n    [Output(\"dnsChallenges\")]\n    public Output\u003cstring\u003e DnsChallenges { get; set; }\n    [Output(\"httpChallenges\")]\n    public Output\u003cstring\u003e HttpChallenges { get; set; }\n    [Output(\"enrollmentId\")]\n    public Output\u003cstring\u003e EnrollmentId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\texample, err := akamai.NewCpsDvEnrollment(ctx, \"example\", \u0026akamai.CpsDvEnrollmentArgs{\n\t\t\tContractId:                         pulumi.String(\"ctr_1-AB123\"),\n\t\t\tAcknowledgePreVerificationWarnings: pulumi.Bool(true),\n\t\t\tCommonName:                         pulumi.String(\"cps-test.example.net\"),\n\t\t\tSans: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"san1.cps-test.example.net\"),\n\t\t\t\tpulumi.String(\"san2.cps-test.example.net\"),\n\t\t\t},\n\t\t\tSecureNetwork: pulumi.String(\"enhanced-tls\"),\n\t\t\tSniOnly:       pulumi.Bool(true),\n\t\t\tAdminContact: \u0026CpsDvEnrollmentAdminContactArgs{\n\t\t\t\tFirstName:      pulumi.String(\"x1\"),\n\t\t\t\tLastName:       pulumi.String(\"x2\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tEmail:          pulumi.String(\"x1x2@example.net\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tOrganization:   pulumi.String(\"Akamai\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t\tTitle:          pulumi.String(\"Administrator\"),\n\t\t\t},\n\t\t\tTechContact: \u0026CpsDvEnrollmentTechContactArgs{\n\t\t\t\tFirstName:      pulumi.String(\"x3\"),\n\t\t\t\tLastName:       pulumi.String(\"x4\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tEmail:          pulumi.String(\"x3x4@akamai.com\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tOrganization:   pulumi.String(\"Akamai\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t\tTitle:          pulumi.String(\"Administrator\"),\n\t\t\t},\n\t\t\tCertificateChainType: pulumi.String(\"default\"),\n\t\t\tCsr: \u0026CpsDvEnrollmentCsrArgs{\n\t\t\t\tCountryCode:        pulumi.String(\"US\"),\n\t\t\t\tCity:               pulumi.String(\"cambridge\"),\n\t\t\t\tOrganization:       pulumi.String(\"Akamai\"),\n\t\t\t\tOrganizationalUnit: pulumi.String(\"Dev\"),\n\t\t\t\tState:              pulumi.String(\"MA\"),\n\t\t\t},\n\t\t\tEnableMultiStackedCertificates: pulumi.Bool(false),\n\t\t\tNetworkConfiguration: \u0026CpsDvEnrollmentNetworkConfigurationArgs{\n\t\t\t\tDisallowedTlsVersions: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"TLSv1\"),\n\t\t\t\t\tpulumi.String(\"TLSv1_1\"),\n\t\t\t\t},\n\t\t\t\tCloneDnsNames:    pulumi.Bool(false),\n\t\t\t\tGeography:        pulumi.String(\"core\"),\n\t\t\t\tOcspStapling:     pulumi.String(\"on\"),\n\t\t\t\tPreferredCiphers: pulumi.String(\"ak-akamai-2020q1\"),\n\t\t\t\tMustHaveCiphers:  pulumi.String(\"ak-akamai-2020q1\"),\n\t\t\t\tQuicEnabled:      pulumi.Bool(false),\n\t\t\t},\n\t\t\tSignatureAlgorithm: pulumi.String(\"SHA-256\"),\n\t\t\tOrganization: \u0026CpsDvEnrollmentOrganizationArgs{\n\t\t\t\tName:           pulumi.String(\"Akamai\"),\n\t\t\t\tPhone:          pulumi.String(\"123123123\"),\n\t\t\t\tAddressLineOne: pulumi.String(\"150 Broadway\"),\n\t\t\t\tCity:           pulumi.String(\"Cambridge\"),\n\t\t\t\tCountryCode:    pulumi.String(\"US\"),\n\t\t\t\tPostalCode:     pulumi.String(\"02142\"),\n\t\t\t\tRegion:         pulumi.String(\"MA\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"dnsChallenges\", example.DnsChallenges)\n\t\tctx.Export(\"httpChallenges\", example.HttpChallenges)\n\t\tctx.Export(\"enrollmentId\", example.ID())\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `contract_id` - (Required) A contract's ID, optionally with the `ctr_` prefix.\n* `common_name` - (Required) The fully qualified domain name (FQDN) for which you plan to use your certificate. The domain name you specify here must be owned or have legal rights to use the domain by the company you specify as `organization`. The company that owns the domain name must be a legally incorporated entity and be active and in good standing.\n* `sans` - (Optional) Additional common names to create a Subject Alternative Names (SAN) list.\n* `secure_network` - (Required) The type of deployment network you want to use. `standard-tls` deploys your certificate to Akamai’s standard secure network, but it isn't PCI compliant. `enhanced-tls` deploys your certificate to Akamai’s more secure network with PCI compliance capability.\n* `sni_only` - (Required) Whether you want to enable SNI-only extension for the enrollment. Server Name Indication (SNI) is an extension of the Transport Layer Security (TLS) networking protocol. It allows a server to present multiple certificates on the same IP address. All modern web browsers support the SNI extension. If you have the same SAN on two or more certificates with the SNI-only option set, Akamai may serve traffic using any certificate which matches the requested SNI hostname. You should avoid multiple certificates with overlapping SAN names when using SNI-only. You can't change this setting once an enrollment is created.\n* `acknowledge_pre_verification_warnings` - (Optional) Whether you want to automatically acknowledge the validation warnings of the current job state and proceed with the execution of a change.\n* `admin_contact` - (Required) Contact information for the certificate administrator at your company.\n\n    Requires these additional arguments:\n\n      * `first_name` - (Required) The first name of the certificate administrator at your company.\n      * `last_name` - (Required) The last name of the certificate administrator at your company.\n      * `title` - (Optional) The title of the certificate administrator at your company.\n      * `organization` - (Required) The name of your organization.\n      * `email` - (Required) The email address of the administrator who you want to use as a contact at your company.\n      * `phone` - (Required) The phone number of your organization.\n      * `address_line_one` - (Required) The address of your organization.\n      * `address_line_two` - (Optional) The address of your organization.\n      * `city` - (Required) The city where your organization resides.\n      * `region` - (Required) The region of your organization, typically a state or province.\n      * `postal_code` - (Required) The postal code of your organization.\n      * `country_code` - (Required) The code for the counrty where your organization resides.\n* `certificate_chain_type` - (Optional) Certificate trust chain type.\n* `csr` - (Required) \tWhen you create an enrollment, you also generate a certificate signing request (CSR) using CPS. CPS signs the CSR with the private key. The CSR contains all the information the CA needs to issue your certificate.\n\n    Requires these additional arguments:\n\n      * `country_code` - (Required) The country code for the country where your organization is located.\n      * `city` - (Required) The city where your organization resides.\n      * `organization` - (Required The name of your company or organization. Enter the name as it appears in all legal documents and as it appears in the legal entity filing.\n      * `organizational_unit` - (Required) Your organizational unit.\n      * `state` - (Required) \tYour state or province.\n* `enable_multi_stacked_certificates` - (Optional) Whether to enable an ECDSA certificate in addition to an RSA certificate. CPS automatically performs all certificate operations on both certificates, and uses the best certificate for each client connection to your secure properties. If you are pinning the certificates, you need to pin both the RSA and the ECDSA certificate.\n* `network_configuration` - (Required) The network information and TLS Metadata you want CPS to use to push the completed certificate to the network.\n\n    Requires these additional arguments:\n\n      * `client_mutual_authentication` - (Optional) The configuration for client mutual authentication. Specifies the trust chain that is used to verify client certificates and some configuration options.\n\n        Requires these additional arguments:\n\n         * `send_ca_list_to_client` - (Optional) Whether you want to enable the server to send the certificate authority (CA) list to the client.\n         * `ocsp_enabled` - (Optional) Whether you want to enable the Online Certificate Status Protocol (OCSP) stapling for client certificates.\n         * `set_id` - (Optional) The identifier of the set of trust chains, created in the [Trust Chain Manager](https://developer.akamai.com/api/web_performance/trust_chain_manager/v1.html).\n      * `disallowed_tls_versions` - (Optional) The TLS protocol version to disallow. CPS uses the TLS protocols that Akamai currently supports as a best practice.\n      * `clone_dns_names` - (Optional) Whether CPS should direct traffic using all the SANs you listed in the SANs parameter when you created your enrollment.\n      * `geography` - (Required) Lists where you can deploy the certificate. Either `core` to specify worldwide deployment (including China and Russia), `china+core` to specify worldwide deployment and China, or `russia+core` to specify worldwide deployment and Russia. You can only use the setting to include China and Russia if your Akamai contract specifies your ability to do so and you have approval from the Chinese and Russian government.\n      * `must_have_ciphers` - (Optional) The ciphers to include for the enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set. For more information on cipher profiles, see [Akamai community](https://community.akamai.com/customers/s/article/SSL-TLS-Cipher-Profiles-for-Akamai-Secure-CDNrxdxm).\n      * `ocsp_stapling` - (Optional) Whether to use OCSP stapling for the enrollment, either `on`, `off` or `not-set`. OCSP Stapling improves performance by including a valid OCSP response in every TLS handshake. This option allows the visitors on your site to query the Online Certificate Status Protocol (OCSP) server at regular intervals to obtain a signed time-stamped OCSP response. This response must be signed by the CA, not the server, therefore ensuring security. Disable OSCP Stapling if you want visitors to your site to contact the CA directly for an OSCP response. OCSP allows you to obtain the revocation status of a certificate.\n      * `preferred_ciphers` - (Optional) Ciphers that you preferably want to include for the enrollment while deploying it on the network. Defaults to `ak-akamai-default` when it is not set. For more information on cipher profiles, see [Akamai community](https://community.akamai.com/customers/s/article/SSL-TLS-Cipher-Profiles-for-Akamai-Secure-CDNrxdxm).\n      * `quic_enabled` - (Optional) Whether to use the QUIC transport layer network protocol.\n* `signature_algorithm` - (Required) The Secure Hash Algorithm (SHA) function, either `SHA-1` or `SHA-256`.\n* `tech_contact` - (Required) The technical contact within Akamai. This is the person you work closest with at Akamai and who can verify the certificate request. The CA calls this contact if there are any issues with the certificate and they can't reach the `admin_contact`.\n\n    Requires these additional arguments:\n\n      * `first_name` - (Required) The first name of the technical contact at Akamai.\n      * `last_name` - (Required) The last name of the technical contact at Akamai.\n      * `title` - (Optional) The title of the technical contact at Akamai.\n      * `organization` - (Required) The name of the organization in Akamai where your technical contact works.\n      * `email` - (Required) The email address of the technical contact at Akamai, accessible at the `akamai.com` domain.\n      * `phone` - (Required) The phone number of the technical contact at Akamai.\n      * `address_line_one` - (Required) The address for the technical contact at Akamai.\n      * `address_line_two` - (Optional) The address for the technical contact at Akamai.\n      * `city` - (Required) The address for the technical contact at Akamai.\n      * `region` - (Required) The region for the technical contact at Akamai.\n      * `postal_code` - (Required) The postal code for the technical contact at Akamai.\n      * `country_code` - (Required) The country code for the technical contact at Akamai.\n* `organization` - (Required) Your organization information.\n\n    Requires these additional arguments:\n\n      * `name` - (Required) The name of your organization.\n      * `phone` - (Required) The phone number of the administrator who you want to use as a contact at your company.\n      * `address_line_one` - (Required) The address of your organization.\n      * `address_line_two` - (Optional) The address of your organization.\n      * `city` - (Required) The city where your organization resides.\n      * `region` - (Required) The region of your organization, typically a state or province.\n      * `postal_code` - (Required) The postal code of your organization.\n      * `country_code` - (Required) The code for the country where your organization resides.\n\n## Attributes reference\n\nThe resource returns these attributes:\n\n* `registration_authority` - (Required) This value populates automatically with the `lets-encrypt` certificate type and is preserved in the `state` file.\n* `certificate_type` - (Required) This value populates automatically with the `san` certificate type and is preserved in the `state` file.\n* `validation_type` - (Required) This value populates automatically with the `dv` validation type and is preserved in the `state` file.\n* `id` - The unique identifier for this enrollment.\n* `dns_challenges` - The validation challenge for the domains listed in the certificate. To successfully perform the validation, only one challenge for each domain must be complete, either `dns_challenges` or `http_challenges`.\n\n    Returns these additional attributes:\n\n      * `domain` - The domain to validate.\n      * `full_path` - The URL where Akamai publishes `response_body` for Let’s Encrypt to validate.\n      * `response_body` - The data Let’s Encrypt expects to find served at `full_path` URL.\n* `http_challenges` - The validation challenge for the domains listed in the certificate. To successfully perform the validation, only one challenge for each domain must be complete, either `dns_challenges` or `http_challenges`.\n\n    Returns these additional attributes:\n\n      * `domain` - The domain to validate.\n      * `full_path` - The URL where Akamai publishes `response_body` for Let’s Encrypt to validate.\n      * `response_body` - The data Let’s Encrypt expects to find served at `full_path` URL.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_cps_dv_enrollment\" \"example\" { # (resource arguments) } You can import your Akamai DV enrollment using a comma-delimited string of the enrollment ID and\n\n contract ID, optionally with the `ctr_` prefix. You have to enter the IDs in this order`enrollment_id,contract_id` For example\n\n```sh\n $ pulumi import akamai:index/cpsDvEnrollment:CpsDvEnrollment example 12345,1-AB123\n```\n\n ",
            "properties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                },
                "certificateChainType": {
                    "type": "string"
                },
                "certificateType": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                },
                "dnsChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                    }
                },
                "enableMultiStackedCertificates": {
                    "type": "boolean"
                },
                "httpChallenges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                    }
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                },
                "registrationAuthority": {
                    "type": "string"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secureNetwork": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                },
                "validationType": {
                    "type": "string"
                }
            },
            "required": [
                "adminContact",
                "certificateType",
                "commonName",
                "contractId",
                "csr",
                "dnsChallenges",
                "httpChallenges",
                "networkConfiguration",
                "organization",
                "registrationAuthority",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact",
                "validationType"
            ],
            "inputProperties": {
                "acknowledgePreVerificationWarnings": {
                    "type": "boolean"
                },
                "adminContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                },
                "certificateChainType": {
                    "type": "string"
                },
                "commonName": {
                    "type": "string"
                },
                "contractId": {
                    "type": "string"
                },
                "csr": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                },
                "enableMultiStackedCertificates": {
                    "type": "boolean"
                },
                "networkConfiguration": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                },
                "organization": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "secureNetwork": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "sniOnly": {
                    "type": "boolean"
                },
                "techContact": {
                    "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                }
            },
            "requiredInputs": [
                "adminContact",
                "commonName",
                "contractId",
                "csr",
                "networkConfiguration",
                "organization",
                "secureNetwork",
                "signatureAlgorithm",
                "sniOnly",
                "techContact"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvEnrollment resources.\n",
                "properties": {
                    "acknowledgePreVerificationWarnings": {
                        "type": "boolean"
                    },
                    "adminContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentAdminContact:CpsDvEnrollmentAdminContact"
                    },
                    "certificateChainType": {
                        "type": "string"
                    },
                    "certificateType": {
                        "type": "string"
                    },
                    "commonName": {
                        "type": "string"
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "csr": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentCsr:CpsDvEnrollmentCsr"
                    },
                    "dnsChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentDnsChallenge:CpsDvEnrollmentDnsChallenge"
                        }
                    },
                    "enableMultiStackedCertificates": {
                        "type": "boolean"
                    },
                    "httpChallenges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/CpsDvEnrollmentHttpChallenge:CpsDvEnrollmentHttpChallenge"
                        }
                    },
                    "networkConfiguration": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentNetworkConfiguration:CpsDvEnrollmentNetworkConfiguration"
                    },
                    "organization": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentOrganization:CpsDvEnrollmentOrganization"
                    },
                    "registrationAuthority": {
                        "type": "string"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "secureNetwork": {
                        "type": "string"
                    },
                    "signatureAlgorithm": {
                        "type": "string"
                    },
                    "sniOnly": {
                        "type": "boolean"
                    },
                    "techContact": {
                        "$ref": "#/types/akamai:index/CpsDvEnrollmentTechContact:CpsDvEnrollmentTechContact"
                    },
                    "validationType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/cpsDvValidation:CpsDvValidation": {
            "description": "Once you complete the Let’s Encrypt challenges, optionally use the `akamai.CpsDvValidation` resource to send the acknowledgement to CPS and inform it that tokens are ready for validation. You can also wait for CPS to check for the tokens, which it does on a regular schedule. Next, CPS automatically deploys the certificate on Staging, and eventually on the Production network.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.CpsDvValidation(\"example\", {\n    enrollmentId: akamai_cps_dv_enrollment.example.id,\n    sans: akamai_cps_dv_enrollment.example.sans,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.CpsDvValidation(\"example\",\n    enrollment_id=akamai_cps_dv_enrollment[\"example\"][\"id\"],\n    sans=akamai_cps_dv_enrollment[\"example\"][\"sans\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.CpsDvValidation(\"example\", new Akamai.CpsDvValidationArgs\n        {\n            EnrollmentId = akamai_cps_dv_enrollment.Example.Id,\n            Sans = akamai_cps_dv_enrollment.Example.Sans,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewCpsDvValidation(ctx, \"example\", \u0026akamai.CpsDvValidationArgs{\n\t\t\tEnrollmentId: pulumi.Any(akamai_cps_dv_enrollment.Example.Id),\n\t\t\tSans:         pulumi.Any(akamai_cps_dv_enrollment.Example.Sans),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `enrollment_id` (Required) - Unique identifier for the DV certificate enrollment.\n* `sans` - (Optional) The Subject Alternative Names (SAN) list for tracking changes on related enrollments. Whenever any SAN changes, the Akamai provider recreates this resource and sends another acknowledgement request to CPS.\n\n## Attributes reference\n\n* `status` - The status of certificate validation.\n",
            "properties": {
                "enrollmentId": {
                    "type": "integer"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "enrollmentId",
                "status"
            ],
            "inputProperties": {
                "enrollmentId": {
                    "type": "integer"
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "enrollmentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpsDvValidation resources.\n",
                "properties": {
                    "enrollmentId": {
                        "type": "integer"
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/dnsRecord:DnsRecord": {
            "description": "Use the `akamai.DnsRecord` resource to configure a DNS record that can integrate with your existing DNS infrastructure.\n\n{{% examples %}}\n## Example Usage\n\nHere are examples of an A record and a CNAME record.\n{{% example %}}\n### An A record example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst origin = new akamai.DnsRecord(\"origin\", {\n    active: true,\n    recordtype: \"A\",\n    targets: [\"192.0.2.42\"],\n    ttl: 30,\n    zone: \"origin.org\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\norigin = akamai.DnsRecord(\"origin\",\n    active=True,\n    recordtype=\"A\",\n    targets=[\"192.0.2.42\"],\n    ttl=30,\n    zone=\"origin.org\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var origin = new Akamai.DnsRecord(\"origin\", new Akamai.DnsRecordArgs\n        {\n            Active = true,\n            Recordtype = \"A\",\n            Targets = \n            {\n                \"192.0.2.42\",\n            },\n            Ttl = 30,\n            Zone = \"origin.org\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewDnsRecord(ctx, \"origin\", \u0026akamai.DnsRecordArgs{\n\t\t\tActive:     pulumi.Bool(true),\n\t\t\tRecordtype: pulumi.String(\"A\"),\n\t\t\tTargets: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"192.0.2.42\"),\n\t\t\t},\n\t\t\tTtl:  pulumi.Int(30),\n\t\t\tZone: pulumi.String(\"origin.org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### CNAME Record Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst www = new akamai.DnsRecord(\"www\", {\n    active: true,\n    recordtype: \"CNAME\",\n    targets: \"origin.example.org.edgesuite.net\",\n    ttl: 600,\n    zone: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nwww = akamai.DnsRecord(\"www\",\n    active=True,\n    recordtype=\"CNAME\",\n    targets=\"origin.example.org.edgesuite.net\",\n    ttl=600,\n    zone=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var www = new Akamai.DnsRecord(\"www\", new Akamai.DnsRecordArgs\n        {\n            Active = true,\n            Recordtype = \"CNAME\",\n            Targets = \"origin.example.org.edgesuite.net\",\n            Ttl = 600,\n            Zone = \"example.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewDnsRecord(ctx, \"www\", \u0026akamai.DnsRecordArgs{\n\t\t\tActive:     pulumi.Bool(true),\n\t\t\tRecordtype: pulumi.String(\"CNAME\"),\n\t\t\tTargets:    pulumi.StringArray(\"origin.example.org.edgesuite.net\"),\n\t\t\tTtl:        pulumi.Int(600),\n\t\t\tZone:       pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference [argument-reference]\n\nThis resource supports these arguments for all record types:\n\n* `name` - (Required) The DNS record name. This is the node this DNS record is associated with. Also known as an owner name. \n* `zone` - (Required) The domain zone, including any nested subdomains.  \n* `recordType` - (Required) The DNS record type.  \n* `ttl` - (Required) The time to live (TTL) is a 32-bit signed integer for the time the resource record is cached. \u003cbr /\u003e A value of `0` means that the resource record is not cached. It's only used for the transaction in progress and may be useful for extremely volatile data.  \n\n## Additional arguments by record type\n\nThis section lists additional required and optional arguments for specific record types.\n\n\n### A record\n\nAn A record requires this argument:\n\n* `target` - One or more IPv4 addresses, for example, 192.0.2.0.\n\n### AAAA record\n\nAn AAAA record requires this argument:\n\n* `target` - One or more IPv6 addresses, for example, 2001:0db8::ff00:0042:8329.\n\n### AFSDB record\n\nAn AFSDB record requires these arguments:\n\n* `target` - The domain name of the host having a server for the cell named by the owner name of the resource record.\n* `subtype` - An integer between `0` and `65535` that indicates the type of service provided by the host.\n\n### AKAMAICDN record\n\nAn AKAMAICDN record requires this argument:\n\n* `target` - A DNS name representing the selected edge hostname and domain.\n\n### AKAMAITLC record\n\nNo additional arguments are needed for AKAMAITLC records. This resource returns these computed attributes for this record type:\n\n* `dns_name` - A valid DNS name.\n* `answer_type` - The answer type.\n\n### CAA record\n\nA certificate authority authorization (CAA) record requires this argument:\n\n* `target` - One or more certificate authority authorizations. Each authorization contains three attributes: flags, property tag, and property value.\n\nExample:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n### CERT record\n\nA CERT record requires these arguments:\n\n* `type_value` - A numeric certificate type value.\n* `type_mnemonic` - A mnemonic certificate type value.\n* `keytag` - A value computed for the key embedded in the certificate.\n* `algorithm` - The cryptographic algorithm used to create the signature.\n* `certificate` - Certificate data.\n\n\u003e **Note:** When entering the certificate type, you can enter `type_value`, `type_mnemonic`, or  both arguments. If you use both, `type_mnemonic` takes precedence.\n\n### CNAME record\n\nA CNAME record requires this argument:\n\n* `target `- A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.\n\n### DNSKEY record\n\nA DNSKEY record requires these arguments:\n\n* `flags`\n* `protocol` - Set to `3`. If the value isn't `3`, the DNSKEY resource record is treated as invalid during signature verification.\n* `algorithm` - The public key’s cryptographic algorithm. This algorithm determines the format of the public key field.\n* `key` - A Base64 encoded value representing the public key. The format used depends on the `algorithm`.\n\n### DS record\n\nA DS record requires these arguments:\n\n* `keytag` - The key tag of the DNSKEY record that the DS record refers to, in network byte order.\n* `algorithm` - The algorithm number of the DNSKEY resource record referred to by the DS record.\n* `digest_type` - Identifies the algorithm used to construct the digest.\n* `digest` - A base 16 encoded DS record includes a digest of the DNSKEY record it refers to. The digest is conifgured the canonical form of the DNSKEY record's fully qualified owner name with the DNSKEY RDATA, and then applying the digest algorithm.\n\n### HINFO record\n\nA HINFO record requires these arguments:\n\n* `hardware` - The type of hardware the host uses. A machine name or CPU type may be up to 40 characters long and include uppercase letters, digits, hyphens, and slashes. The entry needs to start and to end with an uppercase letter.\n* `software` - The type of software the host uses. A system name may be up to 40 characters long and include uppercase letters, digits, hyphens, and slashes. The entry needs to start with an uppercase letter and end with an uppercase letter or a digit.\n\n### HTTPS Record\n\nThe following fields are required:\n\n* `svc_priority` - Service priority associated with endpoint. Value mist be between 0 and 65535. A piority of 0 enables alias mode. \n* `svc_params` - Space separated list of endpoint parameters. Not allowed if service priority is 0.\n* `target_name` - Domain name of the service endpoint.\n\n### LOC record\n\nA LOC record requires this argument:\n\n* `target` - A geographical location associated with a domain name.\n\n### MX record\n\nAn MX record supports these arguments:\n\n* `target` - (Required) One or more domain names that specify a host willing to act as a mail exchange for the owner name.\n* `priority` - (Optional) The preference value given to this MX record in relation to all other MX records. When a mailer needs to send mail to a certain DNS domain, it first contacts a DNS server for that domain and retrieves all the MX records. It then contacts the mailer with the lowest preference value. This value is ignored if an embedded priority exists in the target.\n* `priority_increment` - (Optional) An auto priority increment when multiple targets are provided with no embedded priority.\n\nSee Working with MX records in the DNS Getting Started Guide for more information.\n\n### NAPTR record\n\nAn NAPTR record requires these arguments:\n\n* `order` - A 16-bit unsigned integer specifying the order in which the NAPTR records need to be processed to ensure the correct ordering of rules. Low numbers are processed before high numbers. Once a NAPTR is found whose rule matches the target, the client shouldn't consider any NAPTRs with a higher value for order (except as noted below for the flagsnapter field).\n* `preference` - A 16-bit unsigned integer that specifies the order in which NAPTR records with equal order values are processed. Low numbers are processed before high numbers.\n* `flagsnaptr` - A character string containing flags that control how fields in the record are rewritten and interpreted. Flags are single alphanumeric characters. \n* `service` - Specifies the services available down this rewrite path.\n* `regexp` - A regular expression string containing a substitution expression. This substitution expression is applied to the original client string in order to construct the next domain name to lookup.\n* `replacement` - Depending on the value of the `flags` attribute, the next NAME to query for NAPTR, SRV, or address records. Enter a fully qualified domain name as the value.\n\n### NS record\n\nAn NS record requires these arguments:\n\n* `target` - One or more domain names that specify authoritative hosts for the specified class and domain.\n\n### NSEC3 record\n\nAn NSEC3 record requires these arguments:\n\n* `algorithm` - The cryptographic hash algorithm used to construct the hash-value.\n* `flags` - Eight one-bit flags you can use to indicate different processing. All undefined flags must be zero.\n* `iterations` - The number of additional times the hash function has been performed.\n* `salt` - The base 16 encoded salt value, which is appended to the original owner name before hashing. Used to defend against pre-calculated dictionary attacks.\n* `next_hashed_owner_name` - Base 32 encoded. The next hashed owner name in hash order. This value is in binary format. Given the ordered set of all hashed owner names, the Next Hashed Owner Name field contains the hash of an owner name that immediately follows the owner name of the given NSEC3 RR.\n* `type_bitmaps` - The resource record set types that exist at the original owner name of the NSEC3 RR.\n\n### NSEC3PARAM record\n\nAn NSEC3PARAM record requires these arguments:\n\n* `algorithm` - The cryptographic hash algorithm used to construct the hash-value.\n* `flags` - Eight one-bit flags that can be used to indicate different processing. All undefined flags must be zero.\n* `iterations` - The number of additional times the hash function has been performed.\n* `salt` - The base 16 encoded salt value, which is appended to the original owner name before hashing in order to defend against pre-calculated dictionary attacks.\n\n### PTR record\n\nA PTR record requires this argument:\n\n* `target` - A domain name that points to some location in the domain name space.\n\n### RP record\n\nAn RP record requires these arguments:\n\n* `mailbox` - A domain name that specifies the mailbox for the responsible person.\n* `txt` - A domain name for which TXT resource records exist.\n\n### RRSIG record\n\nAn RRSIG record requires these arguments:\n\n* `type_covered` - The resource record set type covered by this signature.\n* `algorithm` - Identifies the cryptographic algorithm used to create the signature.\n* `original_ttl` - The TTL of the covered record set as it appears in the authoritative zone.\n* `expiration` - The end point of this signature’s validity. The signature can`t be used for authentication past this point in time.\n* `inception` - The start point of this signature’s validity. The signature can`t be used for authentication prior to this point in time.\n* `keytag` - The Key Tag field contains the key tag value of the DNSKEY RR that validates this signature, in network byte order.\n* `signer` - The owner of the DNSKEY resource record who validates this signature.\n* `signature` - The base 64 encoded cryptographic signature that covers the RRSIG RDATA and covered record set. Format depends on the TSIG algorithm in use.\n* `labels` - The Labels field specifies the number of labels in the original RRSIG RR owner name. The significance of this field is that a validator uses it to determine whether the answer was synthesized from a wildcard. If so, it can be used to determine what owner name was used in generating the signature.\n\n### SPF record\n\nAn SPF record requires this argument:\n\n* `target` - Indicates which hosts are, and are not, authorized to use a domain name for the “HELO” and “MAIL FROM” identities.\n\n### SRV record\n\nAn SRV record requires these arguments:\n\n* `target` - The domain name of the target host.\n* `priority` - A 16-bit integer that specifies the preference given to this resource record among others at the same owner. Lower values are preferred.\n* `weight` - A server selection mechanism that specifies a relative weight for entries with the same priority. Larger weights are given a proportionately higher probability of being selected. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order. Domain administrators should use Weight 0 when there isn’t any server selection to do, to make the RR easier to read for humans. In the presence of records containing weights greater than 0, records with weight 0 should have a very small chance of being selected.\n* `port` - The port on this target of this service. The range of this number is 0–65535, a 16-bit unsigned integer in network byte order.\n\n### SSHFP record\n\nAn SSHFP record requires these arguments:\n\n* `algorithm` - Describes the algorithm of the public key. The following values are assigned: `0` is reserved, `1` is for RSA, `2` is for DSS, and `3` is for ECDSA.\n* `fingerprint_type` - Describes the message-digest algorithm used to calculate the fingerprint of the public key. The following values are assigned: 0 = reserved, 1 = SHA-1, 2 = SHA-256.\n* `fingerprint` - The base 16 encoded fingerprint as calculated over the public key blob. The message-digest algorithm is presumed to produce an opaque octet string output, which is placed as-is in the RDATA fingerprint field.\n\n### SOA record\n\nAn SOA record requires these arguments:\n\n* `name_server` - The domain name of the name server that was the original or primary source of data for this zone.\n* `email_address` - A domain name that specifies the mailbox of this person responsible for this zone.\n* `serial` - The unsigned version number between 0 and 214748364 of the original copy of the zone.\n* `refresh` - A time interval between 0 and 214748364 before the zone should be refreshed.\n* `retry` - A time interval between 0 and 214748364 that should elapse before a failed refresh should be retried.\n* `expiry` - A time value between 0 and 214748364 that specifies the upper limit on the time interval that can elapse before the zone is no longer authoritative.\n* `nxdomain_ttl` - The unsigned minimum TTL between 0 and 214748364 that should be exported with any resource record from this zone.\n\n### SVCB record\n\nAn SVCB record requires these arguments:\n\n* `svc_priority` - Service priority associated with endpoint. Value mist be between 0 and 65535. A piority of 0 enables alias mode.\n* `svc_params` - Space separated list of endpoint parameters. Not allowed if service priority is 0.\n* `target_name` - Domain name of the service endpoint.\n\n### TLSA record\n\nA TLSA record requires these arguments:\n\n* `usage` - Specifies the association used to match the certificate presented in the TLS handshake.\n* `selector` - Specifies the part of the TLS certificate presented by the server that is matched against the association data. \n* `match_type` - Specifies how the certificate association is presented.\n* `certificate` - Specifies the certificate association data to be matched.\n\n### TXT record\n\nA TXT record requires this argument:\n\n* `target` - One or more character strings. TXT resource records hold descriptive text. The semantics of the text depends on the domain where it is found.\n",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "answerType": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "dnsName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordSha": {
                    "type": "string"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "serial": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "answerType",
                "dnsName",
                "name",
                "recordSha",
                "recordtype",
                "serial",
                "ttl",
                "zone"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean"
                },
                "algorithm": {
                    "type": "integer"
                },
                "certificate": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "digestType": {
                    "type": "integer"
                },
                "emailAddress": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "expiry": {
                    "type": "integer"
                },
                "fingerprint": {
                    "type": "string"
                },
                "fingerprintType": {
                    "type": "integer"
                },
                "flags": {
                    "type": "integer"
                },
                "flagsnaptr": {
                    "type": "string"
                },
                "hardware": {
                    "type": "string"
                },
                "inception": {
                    "type": "string"
                },
                "iterations": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "keytag": {
                    "type": "integer"
                },
                "labels": {
                    "type": "integer"
                },
                "mailbox": {
                    "type": "string"
                },
                "matchType": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nameServer": {
                    "type": "string"
                },
                "nextHashedOwnerName": {
                    "type": "string"
                },
                "nxdomainTtl": {
                    "type": "integer"
                },
                "order": {
                    "type": "integer"
                },
                "originalTtl": {
                    "type": "integer"
                },
                "port": {
                    "type": "integer"
                },
                "preference": {
                    "type": "integer"
                },
                "priority": {
                    "type": "integer"
                },
                "priorityIncrement": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "integer"
                },
                "recordtype": {
                    "type": "string"
                },
                "refresh": {
                    "type": "integer"
                },
                "regexp": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "retry": {
                    "type": "integer"
                },
                "salt": {
                    "type": "string"
                },
                "selector": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                },
                "signer": {
                    "type": "string"
                },
                "software": {
                    "type": "string"
                },
                "subtype": {
                    "type": "integer"
                },
                "svcParams": {
                    "type": "string"
                },
                "svcPriority": {
                    "type": "integer"
                },
                "targetName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ttl": {
                    "type": "integer"
                },
                "txt": {
                    "type": "string"
                },
                "typeBitmaps": {
                    "type": "string"
                },
                "typeCovered": {
                    "type": "string"
                },
                "typeMnemonic": {
                    "type": "string"
                },
                "typeValue": {
                    "type": "integer"
                },
                "usage": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "recordtype",
                "ttl",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "algorithm": {
                        "type": "integer"
                    },
                    "answerType": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    },
                    "digest": {
                        "type": "string"
                    },
                    "digestType": {
                        "type": "integer"
                    },
                    "dnsName": {
                        "type": "string"
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "integer"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "fingerprintType": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "flagsnaptr": {
                        "type": "string"
                    },
                    "hardware": {
                        "type": "string"
                    },
                    "inception": {
                        "type": "string"
                    },
                    "iterations": {
                        "type": "integer"
                    },
                    "key": {
                        "type": "string"
                    },
                    "keytag": {
                        "type": "integer"
                    },
                    "labels": {
                        "type": "integer"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "matchType": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServer": {
                        "type": "string"
                    },
                    "nextHashedOwnerName": {
                        "type": "string"
                    },
                    "nxdomainTtl": {
                        "type": "integer"
                    },
                    "order": {
                        "type": "integer"
                    },
                    "originalTtl": {
                        "type": "integer"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "preference": {
                        "type": "integer"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "priorityIncrement": {
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "integer"
                    },
                    "recordSha": {
                        "type": "string"
                    },
                    "recordtype": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "integer"
                    },
                    "regexp": {
                        "type": "string"
                    },
                    "replacement": {
                        "type": "string"
                    },
                    "retry": {
                        "type": "integer"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "selector": {
                        "type": "integer"
                    },
                    "serial": {
                        "type": "integer"
                    },
                    "service": {
                        "type": "string"
                    },
                    "signature": {
                        "type": "string"
                    },
                    "signer": {
                        "type": "string"
                    },
                    "software": {
                        "type": "string"
                    },
                    "subtype": {
                        "type": "integer"
                    },
                    "svcParams": {
                        "type": "string"
                    },
                    "svcPriority": {
                        "type": "integer"
                    },
                    "targetName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "txt": {
                        "type": "string"
                    },
                    "typeBitmaps": {
                        "type": "string"
                    },
                    "typeCovered": {
                        "type": "string"
                    },
                    "typeMnemonic": {
                        "type": "string"
                    },
                    "typeValue": {
                        "type": "integer"
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsRecord:DnsRecord"
                }
            ]
        },
        "akamai:index/dnsZone:DnsZone": {
            "properties": {
                "activationState": {
                    "type": "string"
                },
                "aliasCount": {
                    "type": "integer"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "versionId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "activationState",
                "aliasCount",
                "contract",
                "type",
                "versionId",
                "zone"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "endCustomerId": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "masters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "signAndServe": {
                    "type": "boolean"
                },
                "signAndServeAlgorithm": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "tsigKey": {
                    "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "contract",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsZone resources.\n",
                "properties": {
                    "activationState": {
                        "type": "string"
                    },
                    "aliasCount": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "endCustomerId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "masters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "signAndServe": {
                        "type": "boolean"
                    },
                    "signAndServeAlgorithm": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "tsigKey": {
                        "$ref": "#/types/akamai:index/DnsZoneTsigKey:DnsZoneTsigKey"
                    },
                    "type": {
                        "type": "string"
                    },
                    "versionId": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:edgedns/dnsZone:DnsZone"
                }
            ]
        },
        "akamai:index/edgeHostName:EdgeHostName": {
            "description": "The `akamai.EdgeHostName` resource lets you configure a secure edge hostname. Your\nedge hostname determines how requests for your site, app, or content are mapped to\nAkamai edge servers.\n\nAn edge hostname is the CNAME target you use when directing your end user traffic to\nAkamai. Each hostname assigned to a property has a corresponding edge hostname.\n\nAkamai supports three types of edge hostnames, depending on the level of security\nyou need for your traffic: Standard TLS, Enhanced TLS, and Shared Certificate. When\nentering the `edge_hostname` attribute, you need to include a specific domain suffix\nfor your edge hostname type:\n\n| Edge hostname type | Domain suffix |\n|------|-------|\n| Enhanced TLS | edgekey.net |\n| Standard TLS | edgesuite.net |\n| Shared Cert | akamaized.net |\n\nFor example, if you use Standard TLS and have `www.example.com` as a hostname, your edge hostname would be `www.example.com.edgesuite.net`. If you wanted to use Enhanced TLS with the same hostname, your edge hostname would be `www.example.com.edgekey.net`. See the [Property Manager API (PAPI)](https://developer.akamai.com/api/core_features/property_manager/v1.html#createedgehostnames) for more information.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst provider_demo = new akamai.EdgeHostName(\"provider-demo\", {\n    contractId: \"ctr_1-AB123\",\n    edgeHostname: \"www.example.org.edgesuite.net\",\n    groupId: \"grp_123\",\n    productId: \"prd_Object_Delivery\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nprovider_demo = akamai.EdgeHostName(\"provider-demo\",\n    contract_id=\"ctr_1-AB123\",\n    edge_hostname=\"www.example.org.edgesuite.net\",\n    group_id=\"grp_123\",\n    product_id=\"prd_Object_Delivery\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var provider_demo = new Akamai.EdgeHostName(\"provider-demo\", new Akamai.EdgeHostNameArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            EdgeHostname = \"www.example.org.edgesuite.net\",\n            GroupId = \"grp_123\",\n            ProductId = \"prd_Object_Delivery\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewEdgeHostName(ctx, \"provider_demo\", \u0026akamai.EdgeHostNameArgs{\n\t\t\tContractId:   pulumi.String(\"ctr_1-AB123\"),\n\t\t\tEdgeHostname: pulumi.String(\"www.example.org.edgesuite.net\"),\n\t\t\tGroupId:      pulumi.String(\"grp_123\"),\n\t\t\tProductId:    pulumi.String(\"prd_Object_Delivery\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `name` - (Required) The name of the edge hostname.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required) A product's unique ID, including the `prd_` prefix.\n* `edge_hostname` - (Required) One or more edge hostnames. The number of edge hostnames must be less than or equal to the number of public hostnames.\n* `certificate` - (Optional) Required only when creating an Enhanced TLS edge hostname. This argument sets the certificate enrollment ID. Edge hostnames for Enhanced TLS end in `edgekey.net`. You can retrieve this ID from the [Certificate Provisioning Service CLI](https://github.com/akamai/cli-cps) .\n* `ip_behavior` - (Required) Which version of the IP protocol to use: `IPV4` for version 4 only, `IPV6_PERFORMANCE` for version 6 only, or `IPV6_COMPLIANCE` for both 4 and 6. The default value is `IPV4`.\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Replaced by `product_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis resource returns this attribute:\n\n* `ip_behavior` - Returns the IP protocol the hostname will use, either `IPV4` for version 4, IPV6_PERFORMANCE` for version 6, or `IPV6_COMPLIANCE` for both.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_edge_hostname\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import Akamai edge hostnames using a comma-delimited string of edge hostname, contract ID, and group ID. You have to enter the values in this order:\n\n`edge_hostname, contract_id, group_id` For example\n\n```sh\n $ pulumi import akamai:index/edgeHostName:EdgeHostName example ehn_123,ctr_1-AB123,grp_123\n```\n\n ",
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/edgeHostName:EdgeHostName"
                }
            ]
        },
        "akamai:index/gtmAsmap:GtmAsmap": {
            "description": "Use the `akamai.GtmAsmap` resource to create, configure, and import a GTM Autonomous System (AS) map. AS mapping lets you configure a GTM property that returns a CNAME based on the AS number associated with the requester's IP address. \n\nYou can reuse maps for multiple properties or create new ones. AS maps split the Internet into multiple AS block zones. Properties that use AS maps can specify handout integers for each zone. AS mapping lets you configure a property that directs users to a specific environment or to the origin. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoAsmap = new akamai.GtmAsmap(\"demo_asmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other AS numbers\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_asmap = akamai.GtmAsmap(\"demoAsmap\",\n    default_datacenter=akamai.GtmAsmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other AS numbers\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoAsmap = new Akamai.GtmAsmap(\"demoAsmap\", new Akamai.GtmAsmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmAsmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other AS numbers\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmAsmap(ctx, \"demoAsmap\", \u0026akamai.GtmAsmapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmAsmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other AS numbers\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) The GTM Domain name for the AS map.\n* `name` - (Required) A descriptive label for the AS map. Properties set up for  AS mapping can use this as reference.\n* `default_datacenter` - (Required) A placeholder for all other AS zones not found in these AS zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Required) A descriptive label for all other AS zones, up to 128 characters.\n* `wait_on_complete` - (Optional) A boolean that, if `true`, waits for transaction to complete.\n* `assignment` - (Optional) Contains information about the AS zone groupings of AS IDs. You can have multiple entries with this argument. If used, requires these arguments:\n  * `datacenter_id` - A unique identifier for an existing data center in the domain.\n  * `nickname` - A descriptive label for the group.\n  * `as_numbers` - Specifies an array of AS numbers.\n\n## Schema reference\n\nYou can download the GTM AS Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#asmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmAsmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmAsmapAssignment:GtmAsmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmAsmapDefaultDatacenter:GtmAsmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmASmap:GtmASmap"
                }
            ]
        },
        "akamai:index/gtmCidrmap:GtmCidrmap": {
            "description": "Use the `akamai.GtmCidrmap` resource to create, configure, and import a GTM Classless Inter-Domain Routing (CIDR) map. CIDR mapping uses the IP addresses of the requesting name server to provide IP-specific CNAME entries. CNAMEs let you direct internal users to a specific environment or direct them to the origin. This lets you provide different responses to an internal corporate DNS infrastructure, such as internal test environments and another answer for all other name servers (`default_datacenter`).\n\n CIDR maps split the Internet into multiple CIDR block zones. Properties that use a map can specify a handout CNAME for each zone on the property’s editing page. To configure a property for CIDR mapping, your domain needs at least one CIDR map defined. \n \n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoCidrmap = new akamai.GtmCidrmap(\"demo_cidrmap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Other CIDR Blocks\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_cidrmap = akamai.GtmCidrmap(\"demoCidrmap\",\n    default_datacenter=akamai.GtmCidrmapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Other CIDR Blocks\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoCidrmap = new Akamai.GtmCidrmap(\"demoCidrmap\", new Akamai.GtmCidrmapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmCidrmapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Other CIDR Blocks\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmCidrmap(ctx, \"demoCidrmap\", \u0026akamai.GtmCidrmapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmCidrmapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Other CIDR Blocks\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) GTM Domain name for the AS Map.\n* `name` - (Required) A descriptive label for the CIDR map, up to 255 characters.\n* `default_datacenter` - (Required) A placeholder for all other CIDR zones not found in these CIDR zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) For each property, an identifier for all other CIDR zones.\n  * `nickname` - (Required) A descriptive label for the all other CIDR blocks.\n* `wait_on_complete` - (Optional) A boolean that, if set to `true`, waits for transaction to complete.\n* `assignment` - (Optional) Contains information about the CIDR zone groupings of CIDR blocks. You can have multiple entries with this argument. If used, requires these additional arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Optional) A descriptive label for the CIDR zone group, up to 256 characters.\n  * `blocks` - (Optional, list) Specifies an array of CIDR blocks.\n\n## Schema reference\n\nYou can download the GTM CIDR Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#cidrmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap"
                }
            ]
        },
        "akamai:index/gtmDatacenter:GtmDatacenter": {
            "description": "Use the `akamai.GtmDatacenter` resource to create, configure, and import a GTM data center. A GTM data center represents a customer data center and is also known as a traffic target, a location containing many servers GTM can direct traffic to.\n\nGTM uses data centers to scale load balancing. For example, you might have data centers in both New York and Amsterdam and want to balance load between them. You can configure GTM to send US users to the New York data center and European users to the data center in Amsterdam.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_datacenter_id`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoDatacenter = new akamai.GtmDatacenter(\"demo_datacenter\", {\n    domain: \"demo_domain.akadns.net\",\n    nickname: \"demo_datacenter\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_datacenter = akamai.GtmDatacenter(\"demoDatacenter\",\n    domain=\"demo_domain.akadns.net\",\n    nickname=\"demo_datacenter\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoDatacenter = new Akamai.GtmDatacenter(\"demoDatacenter\", new Akamai.GtmDatacenterArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            Nickname = \"demo_datacenter\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDatacenter(ctx, \"demoDatacenter\", \u0026akamai.GtmDatacenterArgs{\n\t\t\tDomain:   pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tNickname: pulumi.String(\"demo_datacenter\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) The GTM domain name for the data center.\n* `wait_on_complete` - (Optional) A boolean, that if set to `true`, waits for transaction to complete.\n* `nickname` - (Optional) A descriptive label for the data center.\n* `default_load_object` - (Optional) Specifies the load reporting interface between you and the GTM system. If used, requires these additional arguments:\n  * `load_object` - A load object is a file that provides real-time information about the current load, maximum allowable load, and target load on each resource.\n  * `load_object_port` - Specifies the TCP port to connect to when requesting the load object.\n  * `load_servers` - Specifies a list of servers to request the load object from.\n* `city` - (Optional) The name of the city where the data center is located.\n* `clone_of` - (Optional) Identifies the data center’s `datacenter_id` of which this data center is a clone.\n* `cloud_server_targeting` - (Optional) A boolean indicating whether to balance load between two or more servers in a cloud environment.\n* `cloud_server_host_header_override` - (Optional) A boolean that, if set to `true`, Akamai's liveness test agents use the Host header configured in the liveness test.\n* `continent` - (Optional) A two-letter code that specifies the continent where the data center maps to.\n* `country` - (Optional) A two-letter ISO 3166 country code that specifies the country where the data center maps to.\n* `latitude` - (Optional) Specifies the geographical latitude of the data center’s position. See also longitude within this object.\n* `longitude` - (Optional) Specifies the geographic longitude of the data center’s position. See also latitude within this object.\n* `state_or_province` - (Optional) Specifies a two-letter ISO 3166 country code for the state or province where the data center is located.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `datacenter_id` - A unique identifier for an existing data center in the domain.\n* `ping_interval`\n* `ping_packet_size`\n* `score_penalty`\n* `servermonitor_liveness_count`\n* `servermonitor_load_count`\n* `servermonitor_pool`\n* `virtual` - A boolean indicating whether the data center is virtual or physical, the latter meaning the data center has an Akamai Network Agent installed, and its physical location (`latitude`, `longitude`) is fixed. Either `true` if virtual or `false` if physical.\n\n## Schema reference\n\nYou can download the GTM Data Center backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#datacenter) page.\n",
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:index/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter"
                }
            ]
        },
        "akamai:index/gtmDomain:GtmDomain": {
            "description": "Use the `akamai.GtmDomain` resource to create, configure, and import a GTM Domain, which is a basic building block of a traffic management configuration.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demodomain = new akamai.GtmDomain(\"demodomain\", {\n    comment: \"some comment\",\n    contract: \"XXX\",\n    group: \"100\",\n    type: \"basic\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemodomain = akamai.GtmDomain(\"demodomain\",\n    comment=\"some comment\",\n    contract=\"XXX\",\n    group=\"100\",\n    type=\"basic\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demodomain = new Akamai.GtmDomain(\"demodomain\", new Akamai.GtmDomainArgs\n        {\n            Comment = \"some comment\",\n            Contract = \"XXX\",\n            Group = \"100\",\n            Type = \"basic\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmDomain(ctx, \"demodomain\", \u0026akamai.GtmDomainArgs{\n\t\t\tComment:  pulumi.String(\"some comment\"),\n\t\t\tContract: pulumi.String(\"XXX\"),\n\t\t\tGroup:    pulumi.String(\"100\"),\n\t\t\tType:     pulumi.String(\"basic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `contract` - (Required) If creating a domain, the contract ID.\n* `group` - (Required) If creating a domain, the currently selected group ID.\n* `name` - (Required) The DNS name for a collection of GTM Properties.\n* `type` - (Required) Th type of GTM domain. Options include `failover-only`, `static`, `weighted`, `basic`, or `full`.\n* `wait_on_complete` - (Optional) A boolean that, if set to `true`, waits for transaction to complete.\n* `comment` - (Optional) A descriptive note about changes to the domain. The maximum is 4000 characters.\n* `email_notification_list` - (Optional) A list of email addresses to notify when a change is made to the domain.\n* `default_timeout_penalty` - (Optional) Specifies the timeout penalty score. Default is `25`.\n* `load_imbalance_percentage` - (Optional) Indicates the percentage of load imbalance factor (LIF) for the domain.\n* `default_ssl_client_private_key` - (Optional) Specifies a Base64-encoded private key that corresponds with the TLS certificate for HTTPS, SMTPS, POPS, and TCPS liveness tests.\n* `default_error_penalty` - (Optional) Specifies the download penalty score. The default is `75`. If the download encounters an error, the web agent computes a score that is either the download time in seconds or a penalty score.\n* `cname_coalescing_enabled` - (Optional) A boolean that if set to `true`, GTM collapses CNAME redirections in DNS answers when it knows the target of the CNAME.\n* `load_feedback` - (Optional) A boolean indicating whether one or more measurements of load (resources) are defined by you and supplied by each data center in real time to balance load.\n* `default_ssl_client_certificate` - (Optional) Specifies an optional Base64-encoded certificate that corresponds with the private key for TLS-based liveness tests (HTTPS, SMTPS, POPS, and TCPS).\n* `end_user_mapping_enabled` - (Optional) A boolean indicating whether whether the GTM Domain is using end user client subnet mapping.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `default_unreachable_threshold`\n* `min_pingable_region_fraction`\n* `servermonitor_liveness_count`\n* `round_robin_prefix`\n* `servermonitor_load_count`\n* `ping_interval`\n* `max_ttl`\n* `default_health_max`\n* `map_update_interval`\n* `max_properties`\n* `max_resources`\n* `default_error_penalty`\n* `max_test_timeout`\n* `default_health_multiplier`\n* `servermonitor_pool`\n* `min_ttl`\n* `default_max_unreachable_penalty`\n* `default_health_threshold`\n* `min_test_interval`\n* `ping_packet_size`\n\n## Schema reference\n\nYou can download the GTM Domain backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#domain) page.\n",
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmDomain:GtmDomain"
                }
            ]
        },
        "akamai:index/gtmGeomap:GtmGeomap": {
            "description": "Use the `akamai.GtmGeomap` resource to create, configure, and import a GTM Geographic map. Geographic mapping lets you configure a property that returns a CNAME based on the geographic location of the request. \n\nYou can reuse maps for multiple properties or create new ones. To configure a property for geographic mapping, you need to define at least one geographic map for your domain. Each map needs at least two definitions. For example, you can have one definition that maps a set of countries to a specific data center, and a second definition that routes all other traffic. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_map_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoGeomap = new akamai.GtmGeomap(\"demo_geomap\", {\n    defaultDatacenter: {\n        datacenterId: 5400,\n        nickname: \"All Others\",\n    },\n    domain: \"demo_domain.akadns.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_geomap = akamai.GtmGeomap(\"demoGeomap\",\n    default_datacenter=akamai.GtmGeomapDefaultDatacenterArgs(\n        datacenter_id=5400,\n        nickname=\"All Others\",\n    ),\n    domain=\"demo_domain.akadns.net\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoGeomap = new Akamai.GtmGeomap(\"demoGeomap\", new Akamai.GtmGeomapArgs\n        {\n            DefaultDatacenter = new Akamai.Inputs.GtmGeomapDefaultDatacenterArgs\n            {\n                DatacenterId = 5400,\n                Nickname = \"All Others\",\n            },\n            Domain = \"demo_domain.akadns.net\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmGeomap(ctx, \"demoGeomap\", \u0026akamai.GtmGeomapArgs{\n\t\t\tDefaultDatacenter: \u0026GtmGeomapDefaultDatacenterArgs{\n\t\t\t\tDatacenterId: pulumi.Int(5400),\n\t\t\t\tNickname:     pulumi.String(\"All Others\"),\n\t\t\t},\n\t\t\tDomain: pulumi.String(\"demo_domain.akadns.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) GTM Domain name for the Geographic Map.\n* `name` - (Required) A descriptive label for the Geographic map.\n* `default_datacenter` - (Required) A placeholder for all other geographic zones. Requires these additional arguments:\n  * `datacenter_id` - (Required) For each property, an identifier for all other geographic zones.\n  * `nickname` - (Required) A descriptive label for all other geographic zones.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `assignment` - (Optional) Contains information about the geographic zone groupings of countries. You can have multiple `assignment` arguments. If used, requires these additional arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `nickname` - (Optional) A descriptive label for the group.\n  * `countries` - (Optional) Specifies an array of two-letter ISO 3166 country codes, or for finer subdivisions, the two-letter country code and the two-letter stateOrProvince code separated by a forward slash.\n\n## Schema reference\n\nYou can download the GTM Geographic Map backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#geographicmap) page.\n",
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:index/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmGeomap:GtmGeomap"
                }
            ]
        },
        "akamai:index/gtmProperty:GtmProperty": {
            "description": "Use the `akamai.GtmProperty` resource to create, configure and import a GTM property, a set of IP addresses or CNAMEs that GTM provides in response to DNS queries based on a set of rules.\n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:`existing_property_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoProperty = new akamai.GtmProperty(\"demo_property\", {\n    domain: \"demo_domain.akadns.net\",\n    handoutLimit: 5,\n    handoutMode: \"normal\",\n    scoreAggregationType: \"median\",\n    trafficTargets: [{\n        datacenterId: 3131,\n    }],\n    type: \"weighted-round-robin\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_property = akamai.GtmProperty(\"demoProperty\",\n    domain=\"demo_domain.akadns.net\",\n    handout_limit=5,\n    handout_mode=\"normal\",\n    score_aggregation_type=\"median\",\n    traffic_targets=[akamai.GtmPropertyTrafficTargetArgs(\n        datacenter_id=3131,\n    )],\n    type=\"weighted-round-robin\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoProperty = new Akamai.GtmProperty(\"demoProperty\", new Akamai.GtmPropertyArgs\n        {\n            Domain = \"demo_domain.akadns.net\",\n            HandoutLimit = 5,\n            HandoutMode = \"normal\",\n            ScoreAggregationType = \"median\",\n            TrafficTargets = \n            {\n                new Akamai.Inputs.GtmPropertyTrafficTargetArgs\n                {\n                    DatacenterId = 3131,\n                },\n            },\n            Type = \"weighted-round-robin\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmProperty(ctx, \"demoProperty\", \u0026akamai.GtmPropertyArgs{\n\t\t\tDomain:               pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tHandoutLimit:         pulumi.Int(5),\n\t\t\tHandoutMode:          pulumi.String(\"normal\"),\n\t\t\tScoreAggregationType: pulumi.String(\"median\"),\n\t\t\tTrafficTargets: GtmPropertyTrafficTargetArray{\n\t\t\t\t\u0026GtmPropertyTrafficTargetArgs{\n\t\t\t\t\tDatacenterId: pulumi.Int(3131),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"weighted-round-robin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) DNS name for the GTM Domain set that includes this Property.\n* `name` - (Required) DNS name for a collection of IP address or CNAME responses. The value, together with the GTM domainName, forms the Property’s hostname.\n* `type` - (Required) Specifies the load balancing behavior for the property. Either failover, geographic, cidrmapping, weighted-round-robin, weighted-hashed, weighted-round-robin-load-feedback, qtr, or performance.\n* `score_aggregation_type` - (Required) Specifies how GTM aggregates liveness test scores across different tests, when multiple tests are configured.\n* `handout_limit` - (Required) Indicates the limit for the number of live IPs handed out to a DNS request.\n* `handout_mode` - (Required) Specifies how IPs are returned when more than one IP is alive and available.\n* `traffic_target` - (Optional) Contains information about where to direct data center traffic. You can have multiple `traffic_target` arguments. If used, includes these arguments:\n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `enabled` - (Optional) A boolean indicating whether the traffic target is used. You can also omit the traffic target, which has the same result as the false value.\n  * `weight` - (Optional) Specifies the traffic weight for the target.\n  * `servers` - (Optional) (List) Identifies the IP address or the hostnames of the servers.\n  * `name` - (Optional) An alternative label for the traffic target.\n  * `handout_cname` - (Optional) Specifies an optional data center for the property. Used when there are no servers configured for the property.\n* `liveness_test` - (Optional) Contains information about the liveness tests, which are run periodically to determine whether your servers respond to requests. You can have multiple `liveness_test` arguments. If used, requires these arguments:\n  * `name` - (Required) A descriptive name for the liveness test.\n  * `test_interval` - (Required) Indicates the interval at which the liveness test is run, in seconds. Requires a minimum of 10 seconds.\n  * `test_object_protocol` - (Required) Specifies the test protocol. Possible values include `DNS`, `HTTP`, `HTTPS`, `FTP`, `POP`, `POPS`, `SMTP`, `SMTPS`, `TCP`, or `TCPS`.\n  * `test_timeout` - (Required) Specifies the duration of the liveness test before it fails. The range is from 0.001 to 60 seconds.\n  * `answers_required` - (Optional) If `test_object_protocol` is DNS, enter a boolean value if an answer is needed for the DNS query to be successful.\n  * `disabled` - (Optional) A boolean indicating whether the liveness test is disabled. When disabled, GTM stops running the test, effectively treating it as if it no longer exists.\n  * `disable_nonstandard_port_warning` - (Optional) A boolean that if set to `true`, disables warnings when non-standard ports are used.\n  * `error_penalty` - (Optional) Specifies the score that’s reported if the liveness test encounters an error other than timeout, such as connection refused, and 404.\n  * `http_header` - (Optional) Contains HTTP headers to send if the `test_object_protocol` is `http` or `https`. You can have multiple `http_header` entries. Requires these arguments:\n    * `name` - (Optional) Name of HTTP header.\n    * `value` - (Optional) Value of HTTP header.\n  * `http_error3xx` - (Optional) A boolean that if set to `true`, treats a 3xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `http_error4xx` - (Optional) A boolean that if set to `true`, treats a 4xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `http_error5xx` - (Optional) A boolean that if set to `true`, treats a 5xx HTTP response as a failure if the `test_object_protocol` is `http`, `https`, or `ftp`.\n  * `peer_certificate_verification` - (Optional) A boolean that if set to `true`, validates the origin certificate. Applies only to tests with `test_object_protocol` of https.\n  * `recursion_requested` - (Optional) A boolean indicating whether the `test_object_protocol` is DNS. The DNS query is recursive.\n  * `request_string` - (Optional) Specifies a request string.\n  * `resource_type` - (Optional) Specifies the query type, if `test_object_protocol` is DNS.\n  * `response_string` - (Optional) Specifies a response string.\n  * `ssl_client_certificate` - (Optional) Indicates a Base64-encoded certificate. SSL client certificates are available for livenessTests that use secure protocols.\n  * `ssl_client_private_key` - (Optional) Indicates a Base64-encoded private key. The private key used to generate or request a certificate for livenessTests can’t have a passphrase nor be used for any other purpose.\n  * `test_object` - (Required) Specifies the static text that acts as a stand-in for the data that you’re sending on the network.\n  * `test_object_password` - (Optional) Specifies the test object’s password. It is required if testObjectProtocol is ftp.\n  * `test_object_port` - (Required) Specifies the port number for the testObject.\n  * `test_object_username` - (Optional) A descriptive name for the testObject.\n  * `timeout_penalty`- (Optional) Specifies the score to be reported if the liveness test times out.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `failover_delay` - (Optional) Specifies the failover delay in seconds.\n* `failback_delay` - (Optional) Specifies the failback delay in seconds.\n* `ipv6` - (Optional) A boolean that indicates the type of IP address handed out by a GTM property.\n* `stickiness_bonus_percentage` - (Optional) Specifies a percentage used to configure data center affinity.\n* `stickiness_bonus_constant` - (Optional) Specifies a constant used to configure data center affinity.\n* `health_threshold` - (Optional) Configures a cutoff value that is computed from the median scores.\n* `use_computed_targets` - (Optional) For load-feedback domains only, a boolean that indicates whether you want GTM to automatically compute target load.\n* `backup_ip` - (Optional) Specifies a backup IP. When GTM declares that all of the targets are down, the backup IP is handed out. If a backup IP is set, do not set a backup CNAME.\n* `backup_cname` - (Optional) Specifies a backup CNAME. If GTM declares that all of the servers configured for your property are down, the backup CNAME is handed out. If a backup CNAME is set, do not set a backup IP.\n* `balance_by_download_score` - (Optional) A boolean that indicates whether download score based load balancing is enabled.\n* `unreachable_threshold` - (Optional) For performance domains, this specifies a penalty value that’s added to liveness test scores when data centers have an aggregated loss fraction higher than this value.\n* `health_multiplier` - (Optional) Configures a cutoff value that is computed from the median scores.\n* `dynamic_ttl` - (Optional) Indicates the TTL in seconds for records that might change dynamically based on liveness and load balancing such as A and AAAA records, and CNAMEs.\n* `max_unreachable_penalty` - (Optional) For performance domains, this specifies a penalty value that’s added to liveness test scores when data centers show an aggregated loss fraction higher than the penalty value.\n* `map_name` - (Optional) A descriptive label for a GeographicMap or a CidrMap that’s required if the property is either geographic or cidrmapping, in which case mapName needs to reference either an existing GeographicMap or CidrMap in the same domain.\n* `load_imbalance_percentage` - (Optional) Indicates the percent of load imbalance factor (LIF) for the property.\n* `health_max` - (Optional) Defines the absolute limit beyond which IPs are declared unhealthy.\n* `cname` - (Optional) Indicates the fully qualified name aliased to a particular property.\n* `comments` - (Optional) A descriptive note about changes to the domain. The maximum is 4000 characters.\n* `ghost_demand_reporting` - (Optional) Use load estimates from Akamai Ghost utilization messages.\n* `min_live_fraction` - (Optional) Specifies what fraction of the servers need to respond to requests so GTM considers the data center up and able to receive traffic.\n* `static_rr_set` - (Optional) Contains static record sets. You can have multiple `static_rr_set` entries. Requires these arguments:\n  * `type` - (Optional) The record type.\n  * `ttl` - (Optional) The number of seconds that this record should live in a resolver’s cache before being refetched.\n  * `rdata` - (Optional) (List) An array of data strings, representing multiple records within a set.\n\n## Attribute reference\n\nThis resource returns these computed attributes in the state file:\n\n* `weighted_hash_bits_for_ipv4`\n* `weighted_hash_bits_for_ipv6`\n\n## Schema reference\n\nYou can download the GTM Property backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#property) page.\n",
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmProperty:GtmProperty"
                }
            ]
        },
        "akamai:index/gtmResource:GtmResource": {
            "description": "The `akamai.GtmResource` lets you create, configure, and import a GTM resource. In GTM, a resource is anything you can measure whose scarcity affects load balancing. Examples of resources include bandwidth, CPU load average, database queries per second, or disk operations per second. \n\n\u003e **Note** Import requires an ID with this format: `existing_domain_name`:\n`existing_resource_name`.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst demoResource = new akamai.GtmResource(\"demo_resource\", {\n    aggregationType: \"latest\",\n    domain: \"demo_domain.akadns.net\",\n    type: \"XML load object via HTTP\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ndemo_resource = akamai.GtmResource(\"demoResource\",\n    aggregation_type=\"latest\",\n    domain=\"demo_domain.akadns.net\",\n    type=\"XML load object via HTTP\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var demoResource = new Akamai.GtmResource(\"demoResource\", new Akamai.GtmResourceArgs\n        {\n            AggregationType = \"latest\",\n            Domain = \"demo_domain.akadns.net\",\n            Type = \"XML load object via HTTP\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewGtmResource(ctx, \"demoResource\", \u0026akamai.GtmResourceArgs{\n\t\t\tAggregationType: pulumi.String(\"latest\"),\n\t\t\tDomain:          pulumi.String(\"demo_domain.akadns.net\"),\n\t\t\tType:            pulumi.String(\"XML load object via HTTP\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `domain` - (Required) DNS name for the GTM Domain set that includes this property.\n* `name` - (Required) A descriptive label for the GTM resource.\n* `aggregation_type` - (Required) Specifies how GTM handles different load numbers when multiple load servers are used for a data center or property.\n* `type` - (Required) Indicates the kind of `load_object` format used to determine the load on the resource.\n* `wait_on_complete` - (Optional) A boolean indicating whether to wait for transaction to complete. Set to `true` by default.\n* `resource_instance`  - (Optional) (multiple allowed) Contains information about the resources that constrain the properties within the data center. You can have multiple `resource_instance` entries. Requires these arguments: \n  * `datacenter_id` - (Optional) A unique identifier for an existing data center in the domain.\n  * `load_object` - (Optional) Identifies the load object file used to report real-time information about the current load, maximum allowable load, and target load on each resource.\n  * `load_object_port` - (Optional) Specifies the TCP port of the `load_object`.\n  * `load_servers` - (Optional) (List) Specifies a list of servers from which to request the load object.\n  * `use_default_load_object` - (Optional) A boolean that indicates whether a default `load_object` is used for the resources.\n* `host_header` - (Optional) Optionally specifies the host header used when fetching the load object.\n* `least_squares_decay` - (Optional) For internal use only. Unless Akamai indicates otherwise, omit the value or set it to null.\n* `upper_bound` - (Optional) An optional sanity check that specifies the maximum allowed value for any component of the load object.\n* `description` - (Optional) A descriptive note to help you track what the resource constrains.\n* `leader_string` - (Optional) Specifies the text that comes before the `load_object`.\n* `constrained_property` - (Optional) Specifies the name of the property that this resource constrains, enter `**` to constrain all properties.\n* `load_imbalance_percent` - (Optional) Indicates the percent of load imbalance factor (LIF) for the property.\n* `max_u_multiplicative_increment` - (Optional) For Akamai internal use only. You can omit the value or set it to `null`.\n* `decay_rate` - (Optional) For Akamai internal use only. You can omit the value or set it to `null`.\n\n## Schema reference\n\nYou can download the GTM Resource backing schema from the [Global Traffic Management API](https://developer.akamai.com/api/web_performance/global_traffic_management/v1.html#resource) page.\n",
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:trafficmanagement/gtmResource:GtmResource"
                }
            ]
        },
        "akamai:index/networkList:NetworkList": {
            "description": "Use the `akamai.NetworkList` resource to create a network list, or to modify an existing list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkList = new akamai.NetworkList(\"networkList\", {\n    type: \"IP\",\n    description: \"network list description\",\n    lists: _var.list,\n    mode: \"APPEND\",\n    contractId: \"ABC-123\",\n    groupId: 12345,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_list = akamai.NetworkList(\"networkList\",\n    type=\"IP\",\n    description=\"network list description\",\n    lists=var[\"list\"],\n    mode=\"APPEND\",\n    contract_id=\"ABC-123\",\n    group_id=12345)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkList = new Akamai.NetworkList(\"networkList\", new Akamai.NetworkListArgs\n        {\n            Type = \"IP\",\n            Description = \"network list description\",\n            Lists = @var.List,\n            Mode = \"APPEND\",\n            ContractId = \"ABC-123\",\n            GroupId = 12345,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewNetworkList(ctx, \"networkList\", \u0026akamai.NetworkListArgs{\n\t\t\tType:        pulumi.String(\"IP\"),\n\t\t\tDescription: pulumi.String(\"network list description\"),\n\t\t\tLists:       pulumi.Any(_var.List),\n\t\t\tMode:        pulumi.String(\"APPEND\"),\n\t\t\tContractId:  pulumi.String(\"ABC-123\"),\n\t\t\tGroupId:     pulumi.Int(12345),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list.\n"
                },
                "syncPoint": {
                    "type": "integer",
                    "description": "An integer that identifies the current version of the network list; this value is incremented each time\nthe list is modified.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                },
                "uniqueid": {
                    "type": "string",
                    "description": "uniqueId\n"
                }
            },
            "required": [
                "description",
                "mode",
                "name",
                "networkListId",
                "syncPoint",
                "type",
                "uniqueid"
            ],
            "inputProperties": {
                "contractId": {
                    "type": "string",
                    "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                }
            },
            "requiredInputs": [
                "description",
                "mode",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkList resources.\n",
                "properties": {
                    "contractId": {
                        "type": "string",
                        "description": "The contract ID of the network list. If supplied, group_id must also be supplied. The\ncontract_id value of an existing network list may not be modified.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description to be assigned to the network list.\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The group ID of the network list. If supplied, contract_id must also be supplied. The\ngroup_id value of an existing network list may not be modified.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": ": (Optional) A list of IP addresses or locations to be included in the list, added to an existing list, or\nremoved from an existing list.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "A string specifying the interpretation of the `list` parameter. Must be one of the following:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the network list.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The ID of the network list.\n"
                    },
                    "syncPoint": {
                        "type": "integer",
                        "description": "An integer that identifies the current version of the network list; this value is incremented each time\nthe list is modified.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the network list; must be either \"IP\" or \"GEO\".\n"
                    },
                    "uniqueid": {
                        "type": "string",
                        "description": "uniqueId\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListActivations:NetworkListActivations": {
            "description": "Use the `akamai.NetworkListActivations` resource to activate a network list in either the STAGING or PRODUCTION\nenvironment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListsFilter = akamai.getNetworkLists({\n    name: _var.network_list,\n});\nconst activation = new akamai.NetworkListActivations(\"activation\", {\n    networkListId: networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists?[0]),\n    network: \"STAGING\",\n    notes: \"TEST Notes\",\n    notificationEmails: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists_filter = akamai.get_network_lists(name=var[\"network_list\"])\nactivation = akamai.NetworkListActivations(\"activation\",\n    network_list_id=network_lists_filter.lists[0],\n    network=\"STAGING\",\n    notes=\"TEST Notes\",\n    notification_emails=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = @var.Network_list,\n        }));\n        var activation = new Akamai.NetworkListActivations(\"activation\", new Akamai.NetworkListActivationsArgs\n        {\n            NetworkListId = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists?[0]),\n            Network = \"STAGING\",\n            Notes = \"TEST Notes\",\n            NotificationEmails = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Network_list\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewNetworkListActivations(ctx, \"activation\", \u0026akamai.NetworkListActivationsArgs{\n\t\t\tNetworkListId: pulumi.String(networkListsFilter.Lists[0]),\n\t\t\tNetwork:       pulumi.String(\"STAGING\"),\n\t\t\tNotes:         pulumi.String(\"TEST Notes\"),\n\t\t\tNotificationEmails: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activate": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string",
                    "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list to be activated\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A comment describing the activation.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network\nlist was not activated.\n"
                }
            },
            "required": [
                "networkListId",
                "notificationEmails",
                "status"
            ],
            "inputProperties": {
                "activate": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string",
                    "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The ID of the network list to be activated\n"
                },
                "notes": {
                    "type": "string",
                    "description": "A comment describing the activation.\n"
                },
                "notificationEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                }
            },
            "requiredInputs": [
                "networkListId",
                "notificationEmails"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListActivations resources.\n",
                "properties": {
                    "activate": {
                        "type": "boolean"
                    },
                    "network": {
                        "type": "string",
                        "description": "The network to be used, either `STAGING` or `PRODUCTION`. If not supplied, defaults to\n`STAGING`.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The ID of the network list to be activated\n"
                    },
                    "notes": {
                        "type": "string",
                        "description": "A comment describing the activation.\n"
                    },
                    "notificationEmails": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracketed, comma-separated list of email addresses that will be notified when the\noperation is complete.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The string `ACTIVATED` if the activation was successful, or a string identifying the reason why the network\nlist was not activated.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListDescription:NetworkListDescription": {
            "description": "Use the `akamai.NetworkListDescription` resource to update the name or description of an existing network list.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListDescription = new akamai.NetworkListDescription(\"networkListDescription\", {\n    networkListId: _var.network_list_id,\n    description: \"Test network list updated description\",\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_list_description = akamai.NetworkListDescription(\"networkListDescription\",\n    network_list_id=var[\"network_list_id\"],\n    description=\"Test network list updated description\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListDescription = new Akamai.NetworkListDescription(\"networkListDescription\", new Akamai.NetworkListDescriptionArgs\n        {\n            NetworkListId = @var.Network_list_id,\n            Description = \"Test network list updated description\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewNetworkListDescription(ctx, \"networkListDescription\", \u0026akamai.NetworkListDescriptionArgs{\n\t\t\tNetworkListId: pulumi.Any(_var.Network_list_id),\n\t\t\tDescription:   pulumi.String(\"Test network list updated description\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The unique ID of the network list to use.\n"
                }
            },
            "required": [
                "description",
                "name",
                "networkListId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description to be assigned to the network list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name to be assigned to the network list.\n"
                },
                "networkListId": {
                    "type": "string",
                    "description": "The unique ID of the network list to use.\n"
                }
            },
            "requiredInputs": [
                "description",
                "networkListId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListDescription resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description to be assigned to the network list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name to be assigned to the network list.\n"
                    },
                    "networkListId": {
                        "type": "string",
                        "description": "The unique ID of the network list to use.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/networkListSubscription:NetworkListSubscription": {
            "description": "Use the `akamai.NetworkListSubscription` resource to specify a set of email addresses to be notified of changes to any\nof a set of network lists.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkListsFilter = akamai.getNetworkLists({\n    name: _var.network_list,\n});\nconst subscribe = new akamai.NetworkListSubscription(\"subscribe\", {\n    networkLists: networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists),\n    recipients: [\"user@example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists_filter = akamai.get_network_lists(name=var[\"network_list\"])\nsubscribe = akamai.NetworkListSubscription(\"subscribe\",\n    network_lists=network_lists_filter.lists,\n    recipients=[\"user@example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = @var.Network_list,\n        }));\n        var subscribe = new Akamai.NetworkListSubscription(\"subscribe\", new Akamai.NetworkListSubscriptionArgs\n        {\n            NetworkLists = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists),\n            Recipients = \n            {\n                \"user@example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Network_list\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewNetworkListSubscription(ctx, \"subscribe\", \u0026akamai.NetworkListSubscriptionArgs{\n\t\t\tNetworkLists: interface{}(networkListsFilter.Lists),\n\t\t\tRecipients: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                }
            },
            "required": [
                "networkLists",
                "recipients"
            ],
            "inputProperties": {
                "networkLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                }
            },
            "requiredInputs": [
                "networkLists",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkListSubscription resources.\n",
                "properties": {
                    "networkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list containing one or more IDs of the network lists to which the indicated email\naddresses should be subscribed.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracketed, comma-separated list of email addresses that will be notified of changes to any\nof the specified network lists.\n"
                    }
                },
                "type": "object"
            }
        },
        "akamai:index/property:Property": {
            "description": "The `akamai.Property` resource represents an Akamai property configuration.\nThis resource lets you to create, update, and activate properties on the\nAkamai platform.\n\nAkamai’s edge network caches your web assets near to servers that request them.\nA property provides the main way to control how edge servers respond to various\nkinds of requests for those assets. Properties apply rules to a set of hostnames,\nand you can only apply one property at a time to any given hostname. Each property\nis assigned to a product, which determines which behaviors you can use. Each\nproperty’s default rule needs a valid content provider (CP) code assigned to bill\nand report for the service.\n\n\u003e **Note** In version 0.10 and earlier of this resource, it also controlled content provider (CP) codes, origin settings, rules, and hostname associations. Starting with version 1.0.0, this logic is broken out into individual resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = new akamai.Property(\"example\", {\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: [\n        {\n            cnameFrom: \"example.com\",\n            cnameTo: \"example.com.edgekey.net\",\n            certProvisioningType: \"DEFAULT\",\n        },\n        {\n            cnameFrom: \"www.example.com\",\n            cnameTo: \"example.com.edgesuite.net\",\n            certProvisioningType: \"CPS_MANAGED\",\n        },\n    ],\n    ruleFormat: \"v2020-03-04\",\n    rules: data.akamai_property_rules_template.example.json,\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.Property(\"example\",\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames=[\n        akamai.PropertyHostnameArgs(\n            cname_from=\"example.com\",\n            cname_to=\"example.com.edgekey.net\",\n            cert_provisioning_type=\"DEFAULT\",\n        ),\n        akamai.PropertyHostnameArgs(\n            cname_from=\"www.example.com\",\n            cname_to=\"example.com.edgesuite.net\",\n            cert_provisioning_type=\"CPS_MANAGED\",\n        ),\n    ],\n    rule_format=\"v2020-03-04\",\n    rules=data[\"akamai_property_rules_template\"][\"example\"][\"json\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                new Akamai.Inputs.PropertyHostnameArgs\n                {\n                    CnameFrom = \"example.com\",\n                    CnameTo = \"example.com.edgekey.net\",\n                    CertProvisioningType = \"DEFAULT\",\n                },\n                new Akamai.Inputs.PropertyHostnameArgs\n                {\n                    CnameFrom = \"www.example.com\",\n                    CnameTo = \"example.com.edgesuite.net\",\n                    CertProvisioningType = \"CPS_MANAGED\",\n                },\n            },\n            RuleFormat = \"v2020-03-04\",\n            Rules = data.Akamai_property_rules_template.Example.Json,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.NewProperty(ctx, \"example\", \u0026akamai.PropertyArgs{\n\t\t\tProductId:  pulumi.String(\"prd_SPM\"),\n\t\t\tContractId: pulumi.Any(_var.Contractid),\n\t\t\tGroupId:    pulumi.Any(_var.Groupid),\n\t\t\tHostnames: PropertyHostnameArray{\n\t\t\t\t\u0026PropertyHostnameArgs{\n\t\t\t\t\tCnameFrom:            pulumi.String(\"example.com\"),\n\t\t\t\t\tCnameTo:              pulumi.String(\"example.com.edgekey.net\"),\n\t\t\t\t\tCertProvisioningType: pulumi.String(\"DEFAULT\"),\n\t\t\t\t},\n\t\t\t\t\u0026PropertyHostnameArgs{\n\t\t\t\t\tCnameFrom:            pulumi.String(\"www.example.com\"),\n\t\t\t\t\tCnameTo:              pulumi.String(\"example.com.edgesuite.net\"),\n\t\t\t\t\tCertProvisioningType: pulumi.String(\"CPS_MANAGED\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tRuleFormat: pulumi.String(\"v2020-03-04\"),\n\t\t\tRules:      pulumi.Any(data.Akamai_property_rules_template.Example.Json),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis resource supports these arguments:\n\n* `name` - (Required) The property name.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `product_id` - (Required to create, otherwise Optional) A product's unique ID, including the `prd_` prefix.\n* `hostnames` - (Optional) A mapping of public hostnames to edge hostnames. See the `akamai.getPropertyHostnames` data source for details on the necessary DNS configuration.\n\n    \u003e **Note** Starting from version 1.5.0, the `hostnames` argument supports a new block type. If you created your code and state in version 1.4 or earlier, you need to manually update your configuration and replace the previous input for `hostnames` with the new syntax. This error indicates that the state is outdated: `Error: missing expected [`. To fix it, remove `akamai.Property` from the state and import it again.\n\n    Requires these additional arguments:\n\n      * `cname_from` - (Required) A string containing the original origin's hostname. For example, `\"example.org\"`.\n      * `cname_to` - (Required) A string containing the hostname for edge content. For example,  `\"example.org.edgesuite.net\"`.\n      * `cert_provisioning_type` - (Required) The certificate’s provisioning type, either the default `CPS_MANAGED` type for the custom certificates you provision with the [Certificate Provisioning System (CPS)](https://learn.akamai.com/en-us/products/core_features/certificate_provisioning_system.html), or `DEFAULT` for certificates provisioned automatically.\n* `rules` - (Optional) A JSON-encoded rule tree for a given property. For this argument, you need to enter a complete JSON rule tree, unless you set up a series of JSON templates. See the `akamai.getPropertyRules` data source.\n* `rule_format` - (Optional) The [rule format](https://developer.akamai.com/api/core_features/property_manager/v1.html#getruleformats) to use. Uses the latest rule format by default.\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n* `product` - (Deprecated) Optional argument replaced by the now required `product_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe resource returns these attributes:\n\n* `rule_errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `latest_version` - The version of the property you've created or updated rules for. The Akamai Provider always uses the latest version or creates a new version if latest is not editable.\n* `production_version` - The current version of the property active on the Akamai production network.\n* `staging_version` - The current version of the property active on the Akamai staging network.\n\n### Deprecated attributes\n\n* `rule_warnings` - (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.\n\n\n## Import\n\nBasic Usagehcl resource \"akamai_property\" \"example\" {\n\n\n\n # (resource arguments)\n\n } You can import the latest Akamai property version by using either the `property_id` or a comma-delimited string of the property, contract, and group IDs. You'll need to enter the string of IDs if the property belongs to multiple groups or contracts. If using the string of IDs, you need to enter them in this order`property_id,contract_id,group_id` To import a specific property version, pass additional parameters, either* `LATEST` to import the latest version of the property, regardless of whether it's active or not. This works the same as providing just the `property_id` or a string of the property, contract, and group IDs, which is the default behavior. * `PRODUCTION`, `PROD`, or `P` to import the latest version activated on the production environment. * `STAGING`, `STAGE`, `STAG`, or `S` to import the latest version activated on the staging environment. * Version number or version number with the `ver_` prefix to import a specific property version. For example `3` and `ver_3` correspond to the same version number. Here are some examples for the latest property version\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123\n```\n\n Here are some examples for the latest active property version on the production network\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,P\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123,PROD\n```\n\n Here are some examples for the specific property version\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,3\n```\n\n Or\n\n```sh\n $ pulumi import akamai:index/property:Property example prp_123,ctr_1-AB123,grp_123,ver_3\n```\n\n ",
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "readVersion": {
                    "type": "integer",
                    "description": "Required property's version to be read\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "readVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The setting \"contact\" has been deprecated."
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyHostname:PropertyHostname"
                        }
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "The setting \"origin\" has been deprecated."
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "readVersion": {
                        "type": "integer",
                        "description": "Required property's version to be read\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyRuleWarning:PropertyRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "The setting \"variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/property:Property"
                }
            ]
        },
        "akamai:index/propertyActivation:PropertyActivation": {
            "description": "The `akamai.PropertyActivation` resource lets you activate a property version. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.  \n\nBefore activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\nimport * from \"fs\";\n\nconst email = \"user@example.org\";\nconst ruleFormat = \"v2020-03-04\";\nconst example = new akamai.Property(\"example\", {\n    productId: \"prd_SPM\",\n    contractId: _var.contractid,\n    groupId: _var.groupid,\n    hostnames: {\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    ruleFormat: ruleFormat,\n    rules: fs.readFileSync(`${path.module}/main.json`),\n});\nconst exampleStaging = new akamai.PropertyActivation(\"exampleStaging\", {\n    propertyId: example.id,\n    contacts: [email],\n    version: example.latestVersion,\n    note: \"Sample activation\",\n});\nconst exampleProd = new akamai.PropertyActivation(\"exampleProd\", {\n    propertyId: example.id,\n    network: \"PRODUCTION\",\n    version: 3,\n    contacts: [email],\n}, {\n    dependsOn: [exampleStaging],\n});\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nemail = \"user@example.org\"\nrule_format = \"v2020-03-04\"\nexample = akamai.Property(\"example\",\n    product_id=\"prd_SPM\",\n    contract_id=var[\"contractid\"],\n    group_id=var[\"groupid\"],\n    hostnames={\n        \"example.org\": \"example.org.edgesuite.net\",\n        \"www.example.org\": \"example.org.edgesuite.net\",\n        \"sub.example.org\": \"sub.example.org.edgesuite.net\",\n    },\n    rule_format=rule_format,\n    rules=(lambda path: open(path).read())(f\"{path['module']}/main.json\"))\nexample_staging = akamai.PropertyActivation(\"exampleStaging\",\n    property_id=example.id,\n    contacts=[email],\n    version=example.latest_version,\n    note=\"Sample activation\")\nexample_prod = akamai.PropertyActivation(\"exampleProd\",\n    property_id=example.id,\n    network=\"PRODUCTION\",\n    version=3,\n    contacts=[email],\n    opts=pulumi.ResourceOptions(depends_on=[example_staging]))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var email = \"user@example.org\";\n        var ruleFormat = \"v2020-03-04\";\n        var example = new Akamai.Property(\"example\", new Akamai.PropertyArgs\n        {\n            ProductId = \"prd_SPM\",\n            ContractId = @var.Contractid,\n            GroupId = @var.Groupid,\n            Hostnames = \n            {\n                { \"example.org\", \"example.org.edgesuite.net\" },\n                { \"www.example.org\", \"example.org.edgesuite.net\" },\n                { \"sub.example.org\", \"sub.example.org.edgesuite.net\" },\n            },\n            RuleFormat = ruleFormat,\n            Rules = File.ReadAllText($\"{path.Module}/main.json\"),\n        });\n        var exampleStaging = new Akamai.PropertyActivation(\"exampleStaging\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Contacts = \n            {\n                email,\n            },\n            Version = example.LatestVersion,\n            Note = \"Sample activation\",\n        });\n        var exampleProd = new Akamai.PropertyActivation(\"exampleProd\", new Akamai.PropertyActivationArgs\n        {\n            PropertyId = example.Id,\n            Network = \"PRODUCTION\",\n            Version = 3,\n            Contacts = \n            {\n                email,\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                exampleStaging,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\temail := \"user@example.org\"\n\t\truleFormat := \"v2020-03-04\"\n\t\texample, err := akamai.NewProperty(ctx, \"example\", \u0026akamai.PropertyArgs{\n\t\t\tProductId:  pulumi.String(\"prd_SPM\"),\n\t\t\tContractId: pulumi.Any(_var.Contractid),\n\t\t\tGroupId:    pulumi.Any(_var.Groupid),\n\t\t\tHostnames: PropertyHostnameArray{\n\t\t\t\tExample.org:     \"example.org.edgesuite.net\",\n\t\t\t\tWww.example.org: \"example.org.edgesuite.net\",\n\t\t\t\tSub.example.org: \"sub.example.org.edgesuite.net\",\n\t\t\t},\n\t\t\tRuleFormat: pulumi.String(ruleFormat),\n\t\t\tRules:      readFileOrPanic(fmt.Sprintf(\"%v%v\", path.Module, \"/main.json\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleStaging, err := akamai.NewPropertyActivation(ctx, \"exampleStaging\", \u0026akamai.PropertyActivationArgs{\n\t\t\tPropertyId: example.ID(),\n\t\t\tContacts: pulumi.StringArray{\n\t\t\t\tpulumi.String(email),\n\t\t\t},\n\t\t\tVersion: example.LatestVersion,\n\t\t\tNote:    pulumi.String(\"Sample activation\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = akamai.NewPropertyActivation(ctx, \"exampleProd\", \u0026akamai.PropertyActivationArgs{\n\t\t\tPropertyId: example.ID(),\n\t\t\tNetwork:    pulumi.String(\"PRODUCTION\"),\n\t\t\tVersion:    pulumi.Int(3),\n\t\t\tContacts: pulumi.StringArray{\n\t\t\t\tpulumi.String(email),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\texampleStaging,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThe following arguments are supported:\n\n* `property_id` - (Required) The property’s unique identifier, including the `prp_` prefix.\n* `contact` - (Required) One or more email addresses to send activation status changes to.\n* `version` - (Required) The property version to activate. Previously this field was optional. It now depends on the `akamai.Property` resource to identify latest instead of calculating it locally.  This association helps keep the dependency tree properly aligned. To always use the latest version, enter this value `{resource}.{resource identifier}.{field name}`. Using the example code above, the entry would be `akamai_property.example.latest_version` since we want the value of the `latest_version` attribute in the `akamai.Property` resource labeled `example`.\n* `network` - (Optional) Akamai network to activate on, either `STAGING` or `PRODUCTION`. `STAGING` is the default.\n* `note` - (Optional) A log message you can assign to the activation request.\n* `auto_acknowledge_rule_warnings` - (Optional) Whether the activation should proceed despite any warnings. By default set to `true`.\n\n### Deprecated arguments\n\n* `property` - (Deprecated) Replaced by `property_id`. Maintained for legacy purposes.\n\n## Attribute reference\n\nThe following attributes are returned:\n\n* `id` - The unique identifier for this activation.\n* `warnings` - The contents of `warnings` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.\n* `activation_id` - The ID given to the activation event while it's in progress.\n* `status` - The property version’s activation status on the selected network.\n\n### Deprecated attributes\n\n* `rule_warnings` - (Deprecated) Rule warnings are no longer maintained in the state file. You can still see the warnings in logs.\n",
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "ruleErrors",
                "ruleWarnings",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "description": "assigns a log message to the activation request\n"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyActivationRuleError:PropertyActivationRuleError"
                        }
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyActivation:PropertyActivation"
                }
            ]
        },
        "akamai:index/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "akamai:properties/propertyVariables:PropertyVariables"
                }
            ]
        },
        "akamai:properties/cpCode:CpCode": {
            "properties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "name",
                "product",
                "productId"
            ],
            "inputProperties": {
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CpCode resources.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.CpCode has been deprecated in favor of akamai.CpCode"
        },
        "akamai:properties/edgeHostName:EdgeHostName": {
            "properties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "required": [
                "contract",
                "contractId",
                "edgeHostname",
                "group",
                "groupId",
                "ipBehavior",
                "product",
                "productId"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "integer"
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string"
                },
                "edgeHostname": {
                    "type": "string"
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string"
                },
                "ipBehavior": {
                    "type": "string"
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "edgeHostname",
                "ipBehavior"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeHostName resources.\n",
                "properties": {
                    "certificate": {
                        "type": "integer"
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "edgeHostname": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "ipBehavior": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.EdgeHostName has been deprecated in favor of akamai.EdgeHostName"
        },
        "akamai:properties/property:Property": {
            "properties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "latestVersion": {
                    "type": "integer",
                    "description": "Property's current latest version number\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "productionVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in production (zero when not active in production)\n"
                },
                "readVersion": {
                    "type": "integer",
                    "description": "Required property's version to be read\n"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                    }
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "stagingVersion": {
                    "type": "integer",
                    "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "required": [
                "contract",
                "contractId",
                "group",
                "groupId",
                "latestVersion",
                "name",
                "product",
                "productId",
                "productionVersion",
                "readVersion",
                "ruleErrors",
                "ruleFormat",
                "ruleWarnings",
                "rules",
                "stagingVersion"
            ],
            "inputProperties": {
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "deprecationMessage": "The setting \"contact\" has been deprecated."
                },
                "contract": {
                    "type": "string",
                    "deprecationMessage": "The setting \"contract\" has been deprecated."
                },
                "contractId": {
                    "type": "string",
                    "description": "Contract ID to be assigned to the Property\n"
                },
                "cpCode": {
                    "type": "string",
                    "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                },
                "group": {
                    "type": "string",
                    "deprecationMessage": "The setting \"group\" has been deprecated."
                },
                "groupId": {
                    "type": "string",
                    "description": "Group ID to be assigned to the Property\n"
                },
                "hostnames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                    }
                },
                "isSecure": {
                    "type": "boolean",
                    "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                },
                "name": {
                    "type": "string",
                    "description": "Name to give to the Property (must be unique)\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                    },
                    "deprecationMessage": "The setting \"origin\" has been deprecated."
                },
                "product": {
                    "type": "string",
                    "deprecationMessage": "The setting \"product\" has been deprecated."
                },
                "productId": {
                    "type": "string",
                    "description": "Product ID to be assigned to the Property\n"
                },
                "ruleFormat": {
                    "type": "string",
                    "description": "Specify the rule format version (defaults to latest version available when created)\n"
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "rules": {
                    "type": "string",
                    "description": "Property Rules as JSON\n"
                },
                "variables": {
                    "type": "string",
                    "deprecationMessage": "The setting \"variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Property resources.\n",
                "properties": {
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "deprecationMessage": "The setting \"contact\" has been deprecated."
                    },
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string",
                        "description": "Contract ID to be assigned to the Property\n"
                    },
                    "cpCode": {
                        "type": "string",
                        "deprecationMessage": "The setting \"cp_code\" has been deprecated."
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "Group ID to be assigned to the Property\n"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyHostname:PropertyHostname"
                        }
                    },
                    "isSecure": {
                        "type": "boolean",
                        "deprecationMessage": "The setting \"is_secure\" has been deprecated."
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "Property's current latest version number\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name to give to the Property (must be unique)\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyOrigin:PropertyOrigin"
                        },
                        "deprecationMessage": "The setting \"origin\" has been deprecated."
                    },
                    "product": {
                        "type": "string",
                        "deprecationMessage": "The setting \"product\" has been deprecated."
                    },
                    "productId": {
                        "type": "string",
                        "description": "Product ID to be assigned to the Property\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in production (zero when not active in production)\n"
                    },
                    "readVersion": {
                        "type": "integer",
                        "description": "Required property's version to be read\n"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleError:PropertyRuleError"
                        }
                    },
                    "ruleFormat": {
                        "type": "string",
                        "description": "Specify the rule format version (defaults to latest version available when created)\n"
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyRuleWarning:PropertyRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "rules": {
                        "type": "string",
                        "description": "Property Rules as JSON\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "Property's version currently activated in staging (zero when not active in staging)\n"
                    },
                    "variables": {
                        "type": "string",
                        "deprecationMessage": "The setting \"variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.Property has been deprecated in favor of akamai.Property"
        },
        "akamai:properties/propertyActivation:PropertyActivation": {
            "properties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "warnings": {
                    "type": "string"
                }
            },
            "required": [
                "activationId",
                "contacts",
                "errors",
                "property",
                "propertyId",
                "ruleErrors",
                "ruleWarnings",
                "status",
                "version",
                "warnings"
            ],
            "inputProperties": {
                "activationId": {
                    "type": "string"
                },
                "autoAcknowledgeRuleWarnings": {
                    "type": "boolean",
                    "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "type": "string"
                },
                "note": {
                    "type": "string",
                    "description": "assigns a log message to the activation request\n"
                },
                "property": {
                    "type": "string",
                    "deprecationMessage": "The setting \"property\" has been deprecated."
                },
                "propertyId": {
                    "type": "string"
                },
                "ruleErrors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                    }
                },
                "ruleWarnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                    },
                    "deprecationMessage": "Rule warnings will not be set in state anymore"
                },
                "version": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "contacts",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyActivation resources.\n",
                "properties": {
                    "activationId": {
                        "type": "string"
                    },
                    "autoAcknowledgeRuleWarnings": {
                        "type": "boolean",
                        "description": "automatically acknowledge all rule warnings for activation to continue. default is true\n"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "errors": {
                        "type": "string"
                    },
                    "network": {
                        "type": "string"
                    },
                    "note": {
                        "type": "string",
                        "description": "assigns a log message to the activation request\n"
                    },
                    "property": {
                        "type": "string",
                        "deprecationMessage": "The setting \"property\" has been deprecated."
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "ruleErrors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyActivationRuleError:PropertyActivationRuleError"
                        }
                    },
                    "ruleWarnings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyActivationRuleWarning:PropertyActivationRuleWarning"
                        },
                        "deprecationMessage": "Rule warnings will not be set in state anymore"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "warnings": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyActivation has been deprecated in favor of akamai.PropertyActivation"
        },
        "akamai:properties/propertyVariables:PropertyVariables": {
            "properties": {
                "json": {
                    "type": "string",
                    "description": "JSON variables representation\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "required": [
                "json"
            ],
            "inputProperties": {
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                    },
                    "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PropertyVariables resources.\n",
                "properties": {
                    "json": {
                        "type": "string",
                        "description": "JSON variables representation\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:properties/PropertyVariablesVariable:PropertyVariablesVariable"
                        },
                        "deprecationMessage": "The setting \"akamai_property_variables\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.properties.PropertyVariables has been deprecated in favor of akamai.PropertyVariables"
        },
        "akamai:trafficmanagement/gtmASmap:GtmASmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmASmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmASmapAssignment:GtmASmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmASmapDefaultDatacenter:GtmASmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmASmap has been deprecated in favor of akamai.GtmAsmap"
        },
        "akamai:trafficmanagement/gtmCidrmap:GtmCidrmap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmCidrmap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapAssignment:GtmCidrmapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmCidrmapDefaultDatacenter:GtmCidrmapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmCidrmap has been deprecated in favor of akamai.GtmCidrmap"
        },
        "akamai:trafficmanagement/gtmDatacenter:GtmDatacenter": {
            "properties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "datacenterId": {
                    "type": "integer"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "scorePenalty": {
                    "type": "integer"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "virtual": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "datacenterId",
                "domain",
                "pingInterval",
                "pingPacketSize",
                "scorePenalty",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "virtual"
            ],
            "inputProperties": {
                "city": {
                    "type": "string"
                },
                "cloneOf": {
                    "type": "integer"
                },
                "cloudServerHostHeaderOverride": {
                    "type": "boolean"
                },
                "cloudServerTargeting": {
                    "type": "boolean"
                },
                "continent": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "defaultLoadObject": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                },
                "domain": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "nickname": {
                    "type": "string"
                },
                "stateOrProvince": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDatacenter resources.\n",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "cloneOf": {
                        "type": "integer"
                    },
                    "cloudServerHostHeaderOverride": {
                        "type": "boolean"
                    },
                    "cloudServerTargeting": {
                        "type": "boolean"
                    },
                    "continent": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "defaultLoadObject": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmDatacenterDefaultLoadObject:GtmDatacenterDefaultLoadObject"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number"
                    },
                    "longitude": {
                        "type": "number"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "scorePenalty": {
                        "type": "integer"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "stateOrProvince": {
                        "type": "string"
                    },
                    "virtual": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDatacenter has been deprecated in favor of akamai.GtmDatacenter"
        },
        "akamai:trafficmanagement/gtmDomain:GtmDomain": {
            "properties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultHealthMax": {
                    "type": "number"
                },
                "defaultHealthMultiplier": {
                    "type": "number"
                },
                "defaultHealthThreshold": {
                    "type": "number"
                },
                "defaultMaxUnreachablePenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "defaultUnreachableThreshold": {
                    "type": "number"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapUpdateInterval": {
                    "type": "integer"
                },
                "maxProperties": {
                    "type": "integer"
                },
                "maxResources": {
                    "type": "integer"
                },
                "maxTestTimeout": {
                    "type": "number"
                },
                "maxTtl": {
                    "type": "integer"
                },
                "minPingableRegionFraction": {
                    "type": "number"
                },
                "minTestInterval": {
                    "type": "integer"
                },
                "minTtl": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pingInterval": {
                    "type": "integer"
                },
                "pingPacketSize": {
                    "type": "integer"
                },
                "roundRobinPrefix": {
                    "type": "string"
                },
                "servermonitorLivenessCount": {
                    "type": "integer"
                },
                "servermonitorLoadCount": {
                    "type": "integer"
                },
                "servermonitorPool": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultHealthMax",
                "defaultHealthMultiplier",
                "defaultHealthThreshold",
                "defaultMaxUnreachablePenalty",
                "defaultUnreachableThreshold",
                "mapUpdateInterval",
                "maxProperties",
                "maxResources",
                "maxTestTimeout",
                "maxTtl",
                "minPingableRegionFraction",
                "minTestInterval",
                "minTtl",
                "name",
                "pingInterval",
                "pingPacketSize",
                "roundRobinPrefix",
                "servermonitorLivenessCount",
                "servermonitorLoadCount",
                "servermonitorPool",
                "type"
            ],
            "inputProperties": {
                "cnameCoalescingEnabled": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "contract": {
                    "type": "string"
                },
                "defaultErrorPenalty": {
                    "type": "integer"
                },
                "defaultSslClientCertificate": {
                    "type": "string"
                },
                "defaultSslClientPrivateKey": {
                    "type": "string"
                },
                "defaultTimeoutPenalty": {
                    "type": "integer"
                },
                "emailNotificationLists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endUserMappingEnabled": {
                    "type": "boolean"
                },
                "group": {
                    "type": "string"
                },
                "loadFeedback": {
                    "type": "boolean"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmDomain resources.\n",
                "properties": {
                    "cnameCoalescingEnabled": {
                        "type": "boolean"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "contract": {
                        "type": "string"
                    },
                    "defaultErrorPenalty": {
                        "type": "integer"
                    },
                    "defaultHealthMax": {
                        "type": "number"
                    },
                    "defaultHealthMultiplier": {
                        "type": "number"
                    },
                    "defaultHealthThreshold": {
                        "type": "number"
                    },
                    "defaultMaxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "defaultSslClientCertificate": {
                        "type": "string"
                    },
                    "defaultSslClientPrivateKey": {
                        "type": "string"
                    },
                    "defaultTimeoutPenalty": {
                        "type": "integer"
                    },
                    "defaultUnreachableThreshold": {
                        "type": "number"
                    },
                    "emailNotificationLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "endUserMappingEnabled": {
                        "type": "boolean"
                    },
                    "group": {
                        "type": "string"
                    },
                    "loadFeedback": {
                        "type": "boolean"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapUpdateInterval": {
                        "type": "integer"
                    },
                    "maxProperties": {
                        "type": "integer"
                    },
                    "maxResources": {
                        "type": "integer"
                    },
                    "maxTestTimeout": {
                        "type": "number"
                    },
                    "maxTtl": {
                        "type": "integer"
                    },
                    "minPingableRegionFraction": {
                        "type": "number"
                    },
                    "minTestInterval": {
                        "type": "integer"
                    },
                    "minTtl": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "pingInterval": {
                        "type": "integer"
                    },
                    "pingPacketSize": {
                        "type": "integer"
                    },
                    "roundRobinPrefix": {
                        "type": "string"
                    },
                    "servermonitorLivenessCount": {
                        "type": "integer"
                    },
                    "servermonitorLoadCount": {
                        "type": "integer"
                    },
                    "servermonitorPool": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmDomain has been deprecated in favor of akamai.GtmDomain"
        },
        "akamai:trafficmanagement/gtmGeomap:GtmGeomap": {
            "properties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "defaultDatacenter",
                "domain",
                "name"
            ],
            "inputProperties": {
                "assignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                    }
                },
                "defaultDatacenter": {
                    "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                },
                "domain": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "defaultDatacenter",
                "domain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmGeomap resources.\n",
                "properties": {
                    "assignments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmGeomapAssignment:GtmGeomapAssignment"
                        }
                    },
                    "defaultDatacenter": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmGeomapDefaultDatacenter:GtmGeomapDefaultDatacenter"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmGeomap has been deprecated in favor of akamai.GtmGeomap"
        },
        "akamai:trafficmanagement/gtmProperty:GtmProperty": {
            "properties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                },
                "weightedHashBitsForIpv4": {
                    "type": "integer"
                },
                "weightedHashBitsForIpv6": {
                    "type": "integer"
                }
            },
            "required": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "name",
                "scoreAggregationType",
                "type",
                "weightedHashBitsForIpv4",
                "weightedHashBitsForIpv6"
            ],
            "inputProperties": {
                "backupCname": {
                    "type": "string"
                },
                "backupIp": {
                    "type": "string"
                },
                "balanceByDownloadScore": {
                    "type": "boolean"
                },
                "cname": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "dynamicTtl": {
                    "type": "integer"
                },
                "failbackDelay": {
                    "type": "integer"
                },
                "failoverDelay": {
                    "type": "integer"
                },
                "ghostDemandReporting": {
                    "type": "boolean"
                },
                "handoutLimit": {
                    "type": "integer"
                },
                "handoutMode": {
                    "type": "string"
                },
                "healthMax": {
                    "type": "number"
                },
                "healthMultiplier": {
                    "type": "number"
                },
                "healthThreshold": {
                    "type": "number"
                },
                "ipv6": {
                    "type": "boolean"
                },
                "livenessTests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                    }
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "mapName": {
                    "type": "string"
                },
                "maxUnreachablePenalty": {
                    "type": "integer"
                },
                "minLiveFraction": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "scoreAggregationType": {
                    "type": "string"
                },
                "staticRrSets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                    }
                },
                "staticTtl": {
                    "type": "integer"
                },
                "stickinessBonusConstant": {
                    "type": "integer"
                },
                "stickinessBonusPercentage": {
                    "type": "integer"
                },
                "trafficTargets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                    }
                },
                "type": {
                    "type": "string"
                },
                "unreachableThreshold": {
                    "type": "number"
                },
                "useComputedTargets": {
                    "type": "boolean"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "domain",
                "handoutLimit",
                "handoutMode",
                "scoreAggregationType",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmProperty resources.\n",
                "properties": {
                    "backupCname": {
                        "type": "string"
                    },
                    "backupIp": {
                        "type": "string"
                    },
                    "balanceByDownloadScore": {
                        "type": "boolean"
                    },
                    "cname": {
                        "type": "string"
                    },
                    "comments": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "dynamicTtl": {
                        "type": "integer"
                    },
                    "failbackDelay": {
                        "type": "integer"
                    },
                    "failoverDelay": {
                        "type": "integer"
                    },
                    "ghostDemandReporting": {
                        "type": "boolean"
                    },
                    "handoutLimit": {
                        "type": "integer"
                    },
                    "handoutMode": {
                        "type": "string"
                    },
                    "healthMax": {
                        "type": "number"
                    },
                    "healthMultiplier": {
                        "type": "number"
                    },
                    "healthThreshold": {
                        "type": "number"
                    },
                    "ipv6": {
                        "type": "boolean"
                    },
                    "livenessTests": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyLivenessTest:GtmPropertyLivenessTest"
                        }
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "mapName": {
                        "type": "string"
                    },
                    "maxUnreachablePenalty": {
                        "type": "integer"
                    },
                    "minLiveFraction": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "scoreAggregationType": {
                        "type": "string"
                    },
                    "staticRrSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyStaticRrSet:GtmPropertyStaticRrSet"
                        }
                    },
                    "staticTtl": {
                        "type": "integer"
                    },
                    "stickinessBonusConstant": {
                        "type": "integer"
                    },
                    "stickinessBonusPercentage": {
                        "type": "integer"
                    },
                    "trafficTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmPropertyTrafficTarget:GtmPropertyTrafficTarget"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "unreachableThreshold": {
                        "type": "number"
                    },
                    "useComputedTargets": {
                        "type": "boolean"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    },
                    "weightedHashBitsForIpv4": {
                        "type": "integer"
                    },
                    "weightedHashBitsForIpv6": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmProperty has been deprecated in favor of akamai.GtmProperty"
        },
        "akamai:trafficmanagement/gtmResource:GtmResource": {
            "properties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "required": [
                "aggregationType",
                "domain",
                "name",
                "type"
            ],
            "inputProperties": {
                "aggregationType": {
                    "type": "string"
                },
                "constrainedProperty": {
                    "type": "string"
                },
                "decayRate": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "hostHeader": {
                    "type": "string"
                },
                "leaderString": {
                    "type": "string"
                },
                "leastSquaresDecay": {
                    "type": "number"
                },
                "loadImbalancePercentage": {
                    "type": "number"
                },
                "maxUMultiplicativeIncrement": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "resourceInstances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                    }
                },
                "type": {
                    "type": "string"
                },
                "upperBound": {
                    "type": "integer"
                },
                "waitOnComplete": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "aggregationType",
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GtmResource resources.\n",
                "properties": {
                    "aggregationType": {
                        "type": "string"
                    },
                    "constrainedProperty": {
                        "type": "string"
                    },
                    "decayRate": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "hostHeader": {
                        "type": "string"
                    },
                    "leaderString": {
                        "type": "string"
                    },
                    "leastSquaresDecay": {
                        "type": "number"
                    },
                    "loadImbalancePercentage": {
                        "type": "number"
                    },
                    "maxUMultiplicativeIncrement": {
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resourceInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:trafficmanagement/GtmResourceResourceInstance:GtmResourceResourceInstance"
                        }
                    },
                    "type": {
                        "type": "string"
                    },
                    "upperBound": {
                        "type": "integer"
                    },
                    "waitOnComplete": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "deprecationMessage": "akamai.trafficmanagement.GtmResource has been deprecated in favor of akamai.GtmResource"
        }
    },
    "functions": {
        "akamai:edgedns/getAuthoritiesSet:getAuthoritiesSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getAuthoritiesSet has been deprecated in favor of akamai.getAuthoritiesSet"
        },
        "akamai:edgedns/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.edgedns.getDnsRecordSet has been deprecated in favor of akamai.getDnsRecordSet"
        },
        "akamai:index/getAppSecAdvancedSettingsLogging:getAppSecAdvancedSettingsLogging": {
            "description": "Use the `akamai.AppSecAdvancedSettingsLogging` data source to retrieve information about the HTTP header logging controls for a configuration. This operation applies at the configuration level, and therefore applies to all policies within a configuration. You may retrieve these settings for a particular policy by specifying the policy using the security_policy_id parameter. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethttpheaderloggingforaconfiguration).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst logging = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsLogging({\n    configId: configuration.configId,\n}));\nexport const advancedSettingsLoggingOutput = logging.then(logging =\u003e logging.outputText);\nexport const advancedSettingsLoggingJson = logging.then(logging =\u003e logging.json);\nconst policyOverride = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsLogging({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const advancedSettingsPolicyLoggingOutput = policyOverride.then(policyOverride =\u003e policyOverride.outputText);\nexport const advancedSettingsPolicyLoggingJson = policyOverride.then(policyOverride =\u003e policyOverride.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nlogging = akamai.get_app_sec_advanced_settings_logging(config_id=configuration.config_id)\npulumi.export(\"advancedSettingsLoggingOutput\", logging.output_text)\npulumi.export(\"advancedSettingsLoggingJson\", logging.json)\npolicy_override = akamai.get_app_sec_advanced_settings_logging(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"advancedSettingsPolicyLoggingOutput\", policy_override.output_text)\npulumi.export(\"advancedSettingsPolicyLoggingJson\", policy_override.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var logging = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsLogging.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.AdvancedSettingsLoggingOutput = logging.Apply(logging =\u003e logging.OutputText);\n        this.AdvancedSettingsLoggingJson = logging.Apply(logging =\u003e logging.Json);\n        var policyOverride = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsLogging.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsLoggingArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.AdvancedSettingsPolicyLoggingOutput = policyOverride.Apply(policyOverride =\u003e policyOverride.OutputText);\n        this.AdvancedSettingsPolicyLoggingJson = policyOverride.Apply(policyOverride =\u003e policyOverride.Json);\n    }\n\n    [Output(\"advancedSettingsLoggingOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsLoggingOutput { get; set; }\n    [Output(\"advancedSettingsLoggingJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsLoggingJson { get; set; }\n    [Output(\"advancedSettingsPolicyLoggingOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyLoggingOutput { get; set; }\n    [Output(\"advancedSettingsPolicyLoggingJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyLoggingJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tlogging, err := akamai.LookupAppSecAdvancedSettingsLogging(ctx, \u0026GetAppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsLoggingOutput\", logging.OutputText)\n\t\tctx.Export(\"advancedSettingsLoggingJson\", logging.Json)\n\t\topt1 := _var.Security_policy_id\n\t\tpolicyOverride, err := akamai.LookupAppSecAdvancedSettingsLogging(ctx, \u0026GetAppSecAdvancedSettingsLoggingArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPolicyLoggingOutput\", policyOverride.OutputText)\n\t\tctx.Export(\"advancedSettingsPolicyLoggingJson\", policyOverride.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsLogging.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the logging settings.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the logging settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPragmaHeader:getAppSecAdvancedSettingsPragmaHeader": {
            "description": "Use the `akamai.AppSecAdvancedSettingsPragmaHeader` data source to retrieve pragma header settings for a configuration or a security policy. Additional information is available [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getpragmaheaderconfiguration).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst pragmaHeader = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPragmaHeader({\n    configId: configuration.configId,\n}));\nexport const advancedSettingsPragmaHeaderOutput = pragmaHeader.then(pragmaHeader =\u003e pragmaHeader.outputText);\nexport const advancedSettingsPragmaHeaderJson = pragmaHeader.then(pragmaHeader =\u003e pragmaHeader.json);\nconst policyPragmaHeader = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPragmaHeader({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const advancedSettingsPolicyPragmaHeaderOutput = policyPragmaHeader.then(policyPragmaHeader =\u003e policyPragmaHeader.outputText);\nexport const advancedSettingsPolicyPragmaHeaderJson = policyPragmaHeader.then(policyPragmaHeader =\u003e policyPragmaHeader.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\npragma_header = akamai.get_app_sec_advanced_settings_pragma_header(config_id=configuration.config_id)\npulumi.export(\"advancedSettingsPragmaHeaderOutput\", pragma_header.output_text)\npulumi.export(\"advancedSettingsPragmaHeaderJson\", pragma_header.json)\npolicy_pragma_header = akamai.get_app_sec_advanced_settings_pragma_header(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"advancedSettingsPolicyPragmaHeaderOutput\", policy_pragma_header.output_text)\npulumi.export(\"advancedSettingsPolicyPragmaHeaderJson\", policy_pragma_header.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var pragmaHeader = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPragmaHeader.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPragmaHeaderArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.AdvancedSettingsPragmaHeaderOutput = pragmaHeader.Apply(pragmaHeader =\u003e pragmaHeader.OutputText);\n        this.AdvancedSettingsPragmaHeaderJson = pragmaHeader.Apply(pragmaHeader =\u003e pragmaHeader.Json);\n        var policyPragmaHeader = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPragmaHeader.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPragmaHeaderArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.AdvancedSettingsPolicyPragmaHeaderOutput = policyPragmaHeader.Apply(policyPragmaHeader =\u003e policyPragmaHeader.OutputText);\n        this.AdvancedSettingsPolicyPragmaHeaderJson = policyPragmaHeader.Apply(policyPragmaHeader =\u003e policyPragmaHeader.Json);\n    }\n\n    [Output(\"advancedSettingsPragmaHeaderOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPragmaHeaderOutput { get; set; }\n    [Output(\"advancedSettingsPragmaHeaderJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPragmaHeaderJson { get; set; }\n    [Output(\"advancedSettingsPolicyPragmaHeaderOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyPragmaHeaderOutput { get; set; }\n    [Output(\"advancedSettingsPolicyPragmaHeaderJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPolicyPragmaHeaderJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpragmaHeader, err := akamai.LookupAppSecAdvancedSettingsPragmaHeader(ctx, \u0026GetAppSecAdvancedSettingsPragmaHeaderArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPragmaHeaderOutput\", pragmaHeader.OutputText)\n\t\tctx.Export(\"advancedSettingsPragmaHeaderJson\", pragmaHeader.Json)\n\t\topt1 := _var.Security_policy_id\n\t\tpolicyPragmaHeader, err := akamai.LookupAppSecAdvancedSettingsPragmaHeader(ctx, \u0026GetAppSecAdvancedSettingsPragmaHeaderArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPolicyPragmaHeaderOutput\", policyPragmaHeader.OutputText)\n\t\tctx.Export(\"advancedSettingsPolicyPragmaHeaderJson\", policyPragmaHeader.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPragmaHeader.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putpragmaheaderpolicy)) list of information about the pragma header settings.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the pragma header settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAdvancedSettingsPrefetch:getAppSecAdvancedSettingsPrefetch": {
            "description": "Use the `akamai.AppSecAdvancedSettingsPrefetch` data source to retrieve information the prefetch request settings for a security configuration. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getprefetchrequestsforaconfiguration).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst prefetch = configuration.then(configuration =\u003e akamai.getAppSecAdvancedSettingsPrefetch({\n    configId: configuration.configId,\n}));\nexport const advancedSettingsPrefetchOutput = prefetch.then(prefetch =\u003e prefetch.outputText);\nexport const advancedSettingsPrefetchJson = prefetch.then(prefetch =\u003e prefetch.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprefetch = akamai.get_app_sec_advanced_settings_prefetch(config_id=configuration.config_id)\npulumi.export(\"advancedSettingsPrefetchOutput\", prefetch.output_text)\npulumi.export(\"advancedSettingsPrefetchJson\", prefetch.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var prefetch = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAdvancedSettingsPrefetch.InvokeAsync(new Akamai.GetAppSecAdvancedSettingsPrefetchArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.AdvancedSettingsPrefetchOutput = prefetch.Apply(prefetch =\u003e prefetch.OutputText);\n        this.AdvancedSettingsPrefetchJson = prefetch.Apply(prefetch =\u003e prefetch.Json);\n    }\n\n    [Output(\"advancedSettingsPrefetchOutput\")]\n    public Output\u003cstring\u003e AdvancedSettingsPrefetchOutput { get; set; }\n    [Output(\"advancedSettingsPrefetchJson\")]\n    public Output\u003cstring\u003e AdvancedSettingsPrefetchJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprefetch, err := akamai.LookupAppSecAdvancedSettingsPrefetch(ctx, \u0026GetAppSecAdvancedSettingsPrefetchArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"advancedSettingsPrefetchOutput\", prefetch.OutputText)\n\t\tctx.Export(\"advancedSettingsPrefetchJson\", prefetch.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAdvancedSettingsPrefetch.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the prefetch request settings.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the prefetch request settings.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecApiEndpoints:getAppSecApiEndpoints": {
            "description": "Use the `akamai.getAppSecApiEndpoints` data source to retrieve information about the API Endpoints associated with a security policy or configuration. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getapiendpoints).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst apiEndpoints = pulumi.output(akamai.getAppSecApiEndpoints({\n    apiName: \"TestEndpoint\",\n    configId: 43253,\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\napi_endpoints = akamai.get_app_sec_api_endpoints(api_name=\"TestEndpoint\",\n    config_id=43253)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var apiEndpoints = Output.Create(Akamai.GetAppSecApiEndpoints.InvokeAsync(new Akamai.GetAppSecApiEndpointsArgs\n        {\n            ApiName = \"TestEndpoint\",\n            ConfigId = 43253,\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"TestEndpoint\"\n\t\t_, err := akamai.GetAppSecApiEndpoints(ctx, \u0026GetAppSecApiEndpointsArgs{\n\t\t\tApiName:  \u0026opt0,\n\t\t\tConfigId: 43253,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string",
                        "description": "The name of a specific endpoint.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiEndpoints.\n",
                "properties": {
                    "apiName": {
                        "type": "string"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "idLists": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "A list of IDs of the API endpoints.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the API endpoints.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of the API endpoints.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "idLists",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecApiRequestConstraints:getAppSecApiRequestConstraints": {
            "description": "Use the `akamai.AppSecApiRequestConstraints` data source to retrieve a list of APIs with their constraints and associated actions, or the constraints and actions for a particular API. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getapirequestconstraints).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst apisRequestConstraints = configuration.then(configuration =\u003e akamai.getAppSecApiRequestConstraints({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const apisConstraintsText = apisRequestConstraints.then(apisRequestConstraints =\u003e apisRequestConstraints.outputText);\nexport const apisConstraintsJson = apisRequestConstraints.then(apisRequestConstraints =\u003e apisRequestConstraints.json);\nconst apiRequestConstraints = configuration.then(configuration =\u003e akamai.getAppSecApiRequestConstraints({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n    apiId: _var.api_id,\n}));\nexport const apiConstraintsText = apiRequestConstraints.then(apiRequestConstraints =\u003e apiRequestConstraints.outputText);\nexport const apiConstraintsJson = apiRequestConstraints.then(apiRequestConstraints =\u003e apiRequestConstraints.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\napis_request_constraints = akamai.get_app_sec_api_request_constraints(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"apisConstraintsText\", apis_request_constraints.output_text)\npulumi.export(\"apisConstraintsJson\", apis_request_constraints.json)\napi_request_constraints = akamai.get_app_sec_api_request_constraints(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    api_id=var[\"api_id\"])\npulumi.export(\"apiConstraintsText\", api_request_constraints.output_text)\npulumi.export(\"apiConstraintsJson\", api_request_constraints.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var apisRequestConstraints = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecApiRequestConstraints.InvokeAsync(new Akamai.GetAppSecApiRequestConstraintsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.ApisConstraintsText = apisRequestConstraints.Apply(apisRequestConstraints =\u003e apisRequestConstraints.OutputText);\n        this.ApisConstraintsJson = apisRequestConstraints.Apply(apisRequestConstraints =\u003e apisRequestConstraints.Json);\n        var apiRequestConstraints = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecApiRequestConstraints.InvokeAsync(new Akamai.GetAppSecApiRequestConstraintsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n            ApiId = @var.Api_id,\n        })));\n        this.ApiConstraintsText = apiRequestConstraints.Apply(apiRequestConstraints =\u003e apiRequestConstraints.OutputText);\n        this.ApiConstraintsJson = apiRequestConstraints.Apply(apiRequestConstraints =\u003e apiRequestConstraints.Json);\n    }\n\n    [Output(\"apisConstraintsText\")]\n    public Output\u003cstring\u003e ApisConstraintsText { get; set; }\n    [Output(\"apisConstraintsJson\")]\n    public Output\u003cstring\u003e ApisConstraintsJson { get; set; }\n    [Output(\"apiConstraintsText\")]\n    public Output\u003cstring\u003e ApiConstraintsText { get; set; }\n    [Output(\"apiConstraintsJson\")]\n    public Output\u003cstring\u003e ApiConstraintsJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tapisRequestConstraints, err := akamai.LookupAppSecApiRequestConstraints(ctx, \u0026GetAppSecApiRequestConstraintsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"apisConstraintsText\", apisRequestConstraints.OutputText)\n\t\tctx.Export(\"apisConstraintsJson\", apisRequestConstraints.Json)\n\t\topt1 := _var.Api_id\n\t\tapiRequestConstraints, err := akamai.LookupAppSecApiRequestConstraints(ctx, \u0026GetAppSecApiRequestConstraintsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t\tApiId:            \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"apiConstraintsText\", apiRequestConstraints.OutputText)\n\t\tctx.Export(\"apiConstraintsJson\", apiRequestConstraints.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer",
                        "description": "The ID of a specific API for which to retrieve constraint information.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecApiRequestConstraints.\n",
                "properties": {
                    "apiId": {
                        "type": "integer"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the APIs and their constraints and actions.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the APIs and their constraints and actions.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecAttackGroups:getAppSecAttackGroups": {
            "description": "Use the `akamai.getAppSecAttackGroups` data source to list the action and condition-exception information for an attack\ngroup or groups.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst attackGroup = configuration.then(configuration =\u003e akamai.getAppSecAttackGroups({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n    attackGroup: _var.attack_group,\n}));\nexport const attackGroupAction = akamai_appsec_attack_groups.attack_group.attack_group_action;\nexport const conditionException = akamai_appsec_attack_groups.attack_group.condition_exception;\nexport const json = akamai_appsec_attack_groups.attack_group.json;\nexport const outputText = akamai_appsec_attack_groups.attack_group.output_text;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nattack_group = akamai.get_app_sec_attack_groups(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    attack_group=var[\"attack_group\"])\npulumi.export(\"attackGroupAction\", akamai_appsec_attack_groups[\"attack_group\"][\"attack_group_action\"])\npulumi.export(\"conditionException\", akamai_appsec_attack_groups[\"attack_group\"][\"condition_exception\"])\npulumi.export(\"json\", akamai_appsec_attack_groups[\"attack_group\"][\"json\"])\npulumi.export(\"outputText\", akamai_appsec_attack_groups[\"attack_group\"][\"output_text\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var attackGroup = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecAttackGroups.InvokeAsync(new Akamai.GetAppSecAttackGroupsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n            AttackGroup = @var.Attack_group,\n        })));\n        this.AttackGroupAction = akamai_appsec_attack_groups.Attack_group.Attack_group_action;\n        this.ConditionException = akamai_appsec_attack_groups.Attack_group.Condition_exception;\n        this.Json = akamai_appsec_attack_groups.Attack_group.Json;\n        this.OutputText = akamai_appsec_attack_groups.Attack_group.Output_text;\n    }\n\n    [Output(\"attackGroupAction\")]\n    public Output\u003cstring\u003e AttackGroupAction { get; set; }\n    [Output(\"conditionException\")]\n    public Output\u003cstring\u003e ConditionException { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := _var.Attack_group\n\t\t_, err = akamai.GetAppSecAttackGroups(ctx, \u0026GetAppSecAttackGroupsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t\tAttackGroup:      \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"attackGroupAction\", akamai_appsec_attack_groups.Attack_group.Attack_group_action)\n\t\tctx.Export(\"conditionException\", akamai_appsec_attack_groups.Attack_group.Condition_exception)\n\t\tctx.Export(\"json\", akamai_appsec_attack_groups.Attack_group.Json)\n\t\tctx.Export(\"outputText\", akamai_appsec_attack_groups.Attack_group.Output_text)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "The ID of the attack group to use.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecAttackGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "The attack group's action, either `alert`, `deny`, or `none`.\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "The attack group's conditions and exceptions.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the action and condition-exception information for the specified attack\ngroup. This output is only generated if an attack group is specified.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing, for the specified attack group or groups, the attack group's action and\nboolean values indicating whether conditions and exceptions are present.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecBypassNetworkLists:getAppSecBypassNetworkLists": {
            "description": "Use the `akamai.AppSecByPassNetworkList` data source to retrieve information about which network\nlists are used in the bypass network lists settings.  The information available is described\n[here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getbypassnetworklistsforawapconfigversion).\nNote: this data source is only applicable to WAP (Web Application Protector) configurations.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst bypassNetworkLists = configuration.then(configuration =\u003e akamai.getAppSecBypassNetworkLists({\n    configId: configuration.configId,\n}));\nexport const bypassNetworkListsOutput = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.outputText);\nexport const bypassNetworkListsJson = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.json);\nexport const bypassNetworkListsIdList = bypassNetworkLists.then(bypassNetworkLists =\u003e bypassNetworkLists.bypassNetworkLists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nbypass_network_lists = akamai.get_app_sec_bypass_network_lists(config_id=configuration.config_id)\npulumi.export(\"bypassNetworkListsOutput\", bypass_network_lists.output_text)\npulumi.export(\"bypassNetworkListsJson\", bypass_network_lists.json)\npulumi.export(\"bypassNetworkListsIdList\", bypass_network_lists.bypass_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var bypassNetworkLists = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecBypassNetworkLists.InvokeAsync(new Akamai.GetAppSecBypassNetworkListsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.BypassNetworkListsOutput = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.OutputText);\n        this.BypassNetworkListsJson = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.Json);\n        this.BypassNetworkListsIdList = bypassNetworkLists.Apply(bypassNetworkLists =\u003e bypassNetworkLists.BypassNetworkLists);\n    }\n\n    [Output(\"bypassNetworkListsOutput\")]\n    public Output\u003cstring\u003e BypassNetworkListsOutput { get; set; }\n    [Output(\"bypassNetworkListsJson\")]\n    public Output\u003cstring\u003e BypassNetworkListsJson { get; set; }\n    [Output(\"bypassNetworkListsIdList\")]\n    public Output\u003cstring\u003e BypassNetworkListsIdList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbypassNetworkLists, err := akamai.GetAppSecBypassNetworkLists(ctx, \u0026GetAppSecBypassNetworkListsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"bypassNetworkListsOutput\", bypassNetworkLists.OutputText)\n\t\tctx.Export(\"bypassNetworkListsJson\", bypassNetworkLists.Json)\n\t\tctx.Export(\"bypassNetworkListsIdList\", bypassNetworkLists.BypassNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecBypassNetworkLists.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecBypassNetworkLists.\n",
                "properties": {
                    "bypassNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of strings containing the network list IDs.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the bypass network lists.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the bypass network list information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bypassNetworkLists",
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecConfiguration:getAppSecConfiguration": {
            "description": "Use the `akamai.AppSecConfiguration` data source to retrieve the list of security configurations, or information about a specific security configuration.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configurations = akamai.getAppSecConfiguration({});\nexport const configurationList = configurations.then(configurations =\u003e configurations.outputText);\nconst specificConfiguration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nexport const latest = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.latestVersion);\nexport const staging = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.stagingVersion);\nexport const production = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.productionVersion);\nexport const id = specificConfiguration.then(specificConfiguration =\u003e specificConfiguration.configId);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfigurations = akamai.get_app_sec_configuration()\npulumi.export(\"configurationList\", configurations.output_text)\nspecific_configuration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\npulumi.export(\"latest\", specific_configuration.latest_version)\npulumi.export(\"staging\", specific_configuration.staging_version)\npulumi.export(\"production\", specific_configuration.production_version)\npulumi.export(\"id\", specific_configuration.config_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configurations = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync());\n        this.ConfigurationList = configurations.Apply(configurations =\u003e configurations.OutputText);\n        var specificConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        this.Latest = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.LatestVersion);\n        this.Staging = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.StagingVersion);\n        this.Production = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.ProductionVersion);\n        this.Id = specificConfiguration.Apply(specificConfiguration =\u003e specificConfiguration.ConfigId);\n    }\n\n    [Output(\"configurationList\")]\n    public Output\u003cstring\u003e ConfigurationList { get; set; }\n    [Output(\"latest\")]\n    public Output\u003cstring\u003e Latest { get; set; }\n    [Output(\"staging\")]\n    public Output\u003cstring\u003e Staging { get; set; }\n    [Output(\"production\")]\n    public Output\u003cstring\u003e Production { get; set; }\n    [Output(\"id\")]\n    public Output\u003cstring\u003e Id { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tconfigurations, err := akamai.LookupAppSecConfiguration(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"configurationList\", configurations.OutputText)\n\t\topt0 := \"Akamai Tools\"\n\t\tspecificConfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"latest\", specificConfiguration.LatestVersion)\n\t\tctx.Export(\"staging\", specificConfiguration.StagingVersion)\n\t\tctx.Export(\"production\", specificConfiguration.ProductionVersion)\n\t\tctx.Export(\"id\", specificConfiguration.ConfigId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfiguration.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of a specific security configuration. If not supplied, information about all security configurations is returned.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the specified security configuration. Returned only if `name` was specified.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "The last version of the specified security configuration created. Returned only if `name` was specified.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the following information about all available security configurations: config_id, name, latest_version, version_active_in_staging, and version_active_in_production.\n"
                    },
                    "productionVersion": {
                        "type": "integer",
                        "description": "The version of the specified security configuration currently active in production. Returned only if `name` was specified.\n"
                    },
                    "stagingVersion": {
                        "type": "integer",
                        "description": "The version of the specified security configuration currently active in staging. Returned only if `name` was specified.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionVersion",
                    "stagingVersion",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecConfigurationVersion:getAppSecConfigurationVersion": {
            "description": "Use the `akamai.getAppSecConfigurationVersion` data source to retrieve information about the versions of a security configuration, or about a specific version.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst specificConfiguration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst versions = specificConfiguration.then(specificConfiguration =\u003e akamai.getAppSecConfigurationVersion({\n    configId: specificConfiguration.configId,\n}));\nexport const versionsOutputText = versions.then(versions =\u003e versions.outputText);\nexport const versionsLatest = versions.then(versions =\u003e versions.latestVersion);\nconst specificVersion = specificConfiguration.then(specificConfiguration =\u003e akamai.getAppSecConfigurationVersion({\n    configId: specificConfiguration.configId,\n    version: 42,\n}));\nexport const specificVersionVersion = specificVersion.then(specificVersion =\u003e specificVersion.version);\nexport const specificVersionStaging = specificVersion.then(specificVersion =\u003e specificVersion.stagingStatus);\nexport const specificVersionProduction = specificVersion.then(specificVersion =\u003e specificVersion.productionStatus);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nspecific_configuration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nversions = akamai.get_app_sec_configuration_version(config_id=specific_configuration.config_id)\npulumi.export(\"versionsOutputText\", versions.output_text)\npulumi.export(\"versionsLatest\", versions.latest_version)\nspecific_version = akamai.get_app_sec_configuration_version(config_id=specific_configuration.config_id,\n    version=42)\npulumi.export(\"specificVersionVersion\", specific_version.version)\npulumi.export(\"specificVersionStaging\", specific_version.staging_status)\npulumi.export(\"specificVersionProduction\", specific_version.production_status)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var specificConfiguration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var versions = specificConfiguration.Apply(specificConfiguration =\u003e Output.Create(Akamai.GetAppSecConfigurationVersion.InvokeAsync(new Akamai.GetAppSecConfigurationVersionArgs\n        {\n            ConfigId = specificConfiguration.ConfigId,\n        })));\n        this.VersionsOutputText = versions.Apply(versions =\u003e versions.OutputText);\n        this.VersionsLatest = versions.Apply(versions =\u003e versions.LatestVersion);\n        var specificVersion = specificConfiguration.Apply(specificConfiguration =\u003e Output.Create(Akamai.GetAppSecConfigurationVersion.InvokeAsync(new Akamai.GetAppSecConfigurationVersionArgs\n        {\n            ConfigId = specificConfiguration.ConfigId,\n            Version = 42,\n        })));\n        this.SpecificVersionVersion = specificVersion.Apply(specificVersion =\u003e specificVersion.Version);\n        this.SpecificVersionStaging = specificVersion.Apply(specificVersion =\u003e specificVersion.StagingStatus);\n        this.SpecificVersionProduction = specificVersion.Apply(specificVersion =\u003e specificVersion.ProductionStatus);\n    }\n\n    [Output(\"versionsOutputText\")]\n    public Output\u003cstring\u003e VersionsOutputText { get; set; }\n    [Output(\"versionsLatest\")]\n    public Output\u003cstring\u003e VersionsLatest { get; set; }\n    [Output(\"specificVersionVersion\")]\n    public Output\u003cstring\u003e SpecificVersionVersion { get; set; }\n    [Output(\"specificVersionStaging\")]\n    public Output\u003cstring\u003e SpecificVersionStaging { get; set; }\n    [Output(\"specificVersionProduction\")]\n    public Output\u003cstring\u003e SpecificVersionProduction { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tspecificConfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversions, err := akamai.GetAppSecConfigurationVersion(ctx, \u0026GetAppSecConfigurationVersionArgs{\n\t\t\tConfigId: specificConfiguration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionsOutputText\", versions.OutputText)\n\t\tctx.Export(\"versionsLatest\", versions.LatestVersion)\n\t\topt1 := 42\n\t\tspecificVersion, err := akamai.GetAppSecConfigurationVersion(ctx, \u0026GetAppSecConfigurationVersionArgs{\n\t\t\tConfigId: specificConfiguration.ConfigId,\n\t\t\tVersion:  \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificVersionVersion\", specificVersion.Version)\n\t\tctx.Export(\"specificVersionStaging\", specificVersion.StagingStatus)\n\t\tctx.Export(\"specificVersionProduction\", specificVersion.ProductionStatus)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use. If not supplied, information about all versions of the specified security configuration is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecConfigurationVersion.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "latestVersion": {
                        "type": "integer",
                        "description": "The last version of the security configuration created.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the following information about all versions of the security configuration: version number, staging status, and production status.\n"
                    },
                    "productionStatus": {
                        "type": "string",
                        "description": "The status of the specified version in production: \"Active\", \"Inactive\", or \"Deactivated\". Returned only if `version` was specified.\n"
                    },
                    "stagingStatus": {
                        "type": "string",
                        "description": "The status of the specified version in staging: \"Active\", \"Inactive\", or \"Deactivated\". Returned only if `version` was specified.\n"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "latestVersion",
                    "outputText",
                    "productionStatus",
                    "stagingStatus",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecContractsGroups:getAppSecContractsGroups": {
            "description": "Use the `akamai.getAppSecContractsGroups` data source to retrieve information about the contracts and groups for your account. Each object contains the contract, groups associated with the contract, and whether Kona Site Defender or Web Application Protector is the product for that contract. You’ll need this information when you create a new security configuration or when you want to get a list of hostnames still available for use in a security policy. The information available via this data source is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcontractsandgroupswithksdorwaf).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst contractsGroups = akamai.getAppSecContractsGroups({\n    contractid: _var.contractid,\n    groupid: _var.groupid,\n});\nexport const contractsGroupsList = contractsGroups.then(contractsGroups =\u003e contractsGroups.outputText);\nexport const contractsGroupsJson = contractsGroups.then(contractsGroups =\u003e contractsGroups.json);\nexport const contractGroupsDefaultContractid = contractsGroups.then(contractsGroups =\u003e contractsGroups.defaultContractid);\nexport const contractGroupsDefaultGroupid = contractsGroups.then(contractsGroups =\u003e contractsGroups.defaultGroupid);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ncontracts_groups = akamai.get_app_sec_contracts_groups(contractid=var[\"contractid\"],\n    groupid=var[\"groupid\"])\npulumi.export(\"contractsGroupsList\", contracts_groups.output_text)\npulumi.export(\"contractsGroupsJson\", contracts_groups.json)\npulumi.export(\"contractGroupsDefaultContractid\", contracts_groups.default_contractid)\npulumi.export(\"contractGroupsDefaultGroupid\", contracts_groups.default_groupid)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var contractsGroups = Output.Create(Akamai.GetAppSecContractsGroups.InvokeAsync(new Akamai.GetAppSecContractsGroupsArgs\n        {\n            Contractid = @var.Contractid,\n            Groupid = @var.Groupid,\n        }));\n        this.ContractsGroupsList = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.OutputText);\n        this.ContractsGroupsJson = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.Json);\n        this.ContractGroupsDefaultContractid = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.DefaultContractid);\n        this.ContractGroupsDefaultGroupid = contractsGroups.Apply(contractsGroups =\u003e contractsGroups.DefaultGroupid);\n    }\n\n    [Output(\"contractsGroupsList\")]\n    public Output\u003cstring\u003e ContractsGroupsList { get; set; }\n    [Output(\"contractsGroupsJson\")]\n    public Output\u003cstring\u003e ContractsGroupsJson { get; set; }\n    [Output(\"contractGroupsDefaultContractid\")]\n    public Output\u003cstring\u003e ContractGroupsDefaultContractid { get; set; }\n    [Output(\"contractGroupsDefaultGroupid\")]\n    public Output\u003cstring\u003e ContractGroupsDefaultGroupid { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Contractid\n\t\topt1 := _var.Groupid\n\t\tcontractsGroups, err := akamai.GetAppSecContractsGroups(ctx, \u0026GetAppSecContractsGroupsArgs{\n\t\t\tContractid: \u0026opt0,\n\t\t\tGroupid:    \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"contractsGroupsList\", contractsGroups.OutputText)\n\t\tctx.Export(\"contractsGroupsJson\", contractsGroups.Json)\n\t\tctx.Export(\"contractGroupsDefaultContractid\", contractsGroups.DefaultContractid)\n\t\tctx.Export(\"contractGroupsDefaultGroupid\", contractsGroups.DefaultGroupid)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string",
                        "description": "(Optional) The ID of a contract for which to retrieve information.\n"
                    },
                    "groupid": {
                        "type": "integer",
                        "description": "(Optional) The ID of a group for which to retrieve information.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecContractsGroups.\n",
                "properties": {
                    "contractid": {
                        "type": "string",
                        "description": "(Optional) The ID of a contract for which to retrieve information.\n"
                    },
                    "defaultContractid": {
                        "type": "string",
                        "description": "The default contract ID for the specified contract and group.\n"
                    },
                    "defaultGroupid": {
                        "type": "integer",
                        "description": "The default group ID for the specified contract and group.\n"
                    },
                    "groupid": {
                        "type": "integer",
                        "description": "(Optional) The ID of a group for which to retrieve information.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the contract and group information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the contract and group information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "defaultContractid",
                    "defaultGroupid",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomDeny:getAppSecCustomDeny": {
            "description": "Use the `akamai.AppSecCustomDeny` data source to retrieve information about custom deny actions for a specific security configuration, or about a particular custom deny action. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getcustomdeny).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst customDenyList = configuration.then(configuration =\u003e akamai.getAppSecCustomDeny({\n    configId: configuration.configId,\n}));\nexport const customDenyListOutput = customDenyList.then(customDenyList =\u003e customDenyList.outputText);\nexport const customDenyListJson = customDenyList.then(customDenyList =\u003e customDenyList.json);\nconst customDeny = configuration.then(configuration =\u003e akamai.getAppSecCustomDeny({\n    configId: configuration.configId,\n    customDenyId: _var.custom_deny_id,\n}));\nexport const customDenyJson = customDeny.then(customDeny =\u003e customDeny.json);\nexport const customDenyOutput = customDeny.then(customDeny =\u003e customDeny.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\ncustom_deny_list = akamai.get_app_sec_custom_deny(config_id=configuration.config_id)\npulumi.export(\"customDenyListOutput\", custom_deny_list.output_text)\npulumi.export(\"customDenyListJson\", custom_deny_list.json)\ncustom_deny = akamai.get_app_sec_custom_deny(config_id=configuration.config_id,\n    custom_deny_id=var[\"custom_deny_id\"])\npulumi.export(\"customDenyJson\", custom_deny.json)\npulumi.export(\"customDenyOutput\", custom_deny.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var customDenyList = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomDeny.InvokeAsync(new Akamai.GetAppSecCustomDenyArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomDenyListOutput = customDenyList.Apply(customDenyList =\u003e customDenyList.OutputText);\n        this.CustomDenyListJson = customDenyList.Apply(customDenyList =\u003e customDenyList.Json);\n        var customDeny = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomDeny.InvokeAsync(new Akamai.GetAppSecCustomDenyArgs\n        {\n            ConfigId = configuration.ConfigId,\n            CustomDenyId = @var.Custom_deny_id,\n        })));\n        this.CustomDenyJson = customDeny.Apply(customDeny =\u003e customDeny.Json);\n        this.CustomDenyOutput = customDeny.Apply(customDeny =\u003e customDeny.OutputText);\n    }\n\n    [Output(\"customDenyListOutput\")]\n    public Output\u003cstring\u003e CustomDenyListOutput { get; set; }\n    [Output(\"customDenyListJson\")]\n    public Output\u003cstring\u003e CustomDenyListJson { get; set; }\n    [Output(\"customDenyJson\")]\n    public Output\u003cstring\u003e CustomDenyJson { get; set; }\n    [Output(\"customDenyOutput\")]\n    public Output\u003cstring\u003e CustomDenyOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomDenyList, err := akamai.LookupAppSecCustomDeny(ctx, \u0026GetAppSecCustomDenyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyListOutput\", customDenyList.OutputText)\n\t\tctx.Export(\"customDenyListJson\", customDenyList.Json)\n\t\topt1 := _var.Custom_deny_id\n\t\tcustomDeny, err := akamai.LookupAppSecCustomDeny(ctx, \u0026GetAppSecCustomDenyArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tCustomDenyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customDenyJson\", customDeny.Json)\n\t\tctx.Export(\"customDenyOutput\", customDeny.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "customDenyId": {
                        "type": "string",
                        "description": "The ID of a specific custom deny action.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomDeny.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customDenyId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the custom deny action information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the custom deny action information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRuleActions:getAppSecCustomRuleActions": {
            "description": "Use the `akamai.getAppSecCustomRuleActions` data source to retrieve information about the actions defined for the custom rules, or a specific custom rule, associated with a specific security configuration and security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst customRuleActionsAppSecCustomRuleActions = configuration.then(configuration =\u003e akamai.getAppSecCustomRuleActions({\n    configId: configuration.configId,\n    securityPolicyId: \"crAP_75829\",\n}));\nexport const customRuleActions = customRuleActionsAppSecCustomRuleActions.then(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\ncustom_rule_actions_app_sec_custom_rule_actions = akamai.get_app_sec_custom_rule_actions(config_id=configuration.config_id,\n    security_policy_id=\"crAP_75829\")\npulumi.export(\"customRuleActions\", custom_rule_actions_app_sec_custom_rule_actions.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var customRuleActionsAppSecCustomRuleActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRuleActions.InvokeAsync(new Akamai.GetAppSecCustomRuleActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = \"crAP_75829\",\n        })));\n        this.CustomRuleActions = customRuleActionsAppSecCustomRuleActions.Apply(customRuleActionsAppSecCustomRuleActions =\u003e customRuleActionsAppSecCustomRuleActions.OutputText);\n    }\n\n    [Output(\"customRuleActions\")]\n    public Output\u003cstring\u003e CustomRuleActions { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRuleActionsAppSecCustomRuleActions, err := akamai.GetAppSecCustomRuleActions(ctx, \u0026GetAppSecCustomRuleActionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: \"crAP_75829\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRuleActions\", customRuleActionsAppSecCustomRuleActions.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "A specific custom rule for which to retrieve information. If not supplied, information about all custom rules will be returned.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRuleActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID, name, and action of all custom rules, or of the specific custom rule, associated with the specified security configuration, version and security policy.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecCustomRules:getAppSecCustomRules": {
            "description": "Use the `akamai.getAppSecCustomRules` data source to retrieve a list of the custom rules defined for a security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst customRules = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n}));\nexport const customRulesOutputText = customRules.then(customRules =\u003e customRules.outputText);\nexport const customRulesJson = customRules.then(customRules =\u003e customRules.json);\nexport const customRulesConfigId = customRules.then(customRules =\u003e customRules.configId);\nconst specificCustomRule = configuration.then(configuration =\u003e akamai.getAppSecCustomRules({\n    configId: configuration.configId,\n    customRuleId: _var.custom_rule_id,\n}));\nexport const specificCustomRuleJson = specificCustomRule.then(specificCustomRule =\u003e specificCustomRule.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\ncustom_rules = akamai.get_app_sec_custom_rules(config_id=configuration.config_id)\npulumi.export(\"customRulesOutputText\", custom_rules.output_text)\npulumi.export(\"customRulesJson\", custom_rules.json)\npulumi.export(\"customRulesConfigId\", custom_rules.config_id)\nspecific_custom_rule = akamai.get_app_sec_custom_rules(config_id=configuration.config_id,\n    custom_rule_id=var[\"custom_rule_id\"])\npulumi.export(\"specificCustomRuleJson\", specific_custom_rule.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var customRules = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.CustomRulesOutputText = customRules.Apply(customRules =\u003e customRules.OutputText);\n        this.CustomRulesJson = customRules.Apply(customRules =\u003e customRules.Json);\n        this.CustomRulesConfigId = customRules.Apply(customRules =\u003e customRules.ConfigId);\n        var specificCustomRule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecCustomRules.InvokeAsync(new Akamai.GetAppSecCustomRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            CustomRuleId = @var.Custom_rule_id,\n        })));\n        this.SpecificCustomRuleJson = specificCustomRule.Apply(specificCustomRule =\u003e specificCustomRule.Json);\n    }\n\n    [Output(\"customRulesOutputText\")]\n    public Output\u003cstring\u003e CustomRulesOutputText { get; set; }\n    [Output(\"customRulesJson\")]\n    public Output\u003cstring\u003e CustomRulesJson { get; set; }\n    [Output(\"customRulesConfigId\")]\n    public Output\u003cstring\u003e CustomRulesConfigId { get; set; }\n    [Output(\"specificCustomRuleJson\")]\n    public Output\u003cstring\u003e SpecificCustomRuleJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tcustomRules, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"customRulesOutputText\", customRules.OutputText)\n\t\tctx.Export(\"customRulesJson\", customRules.Json)\n\t\tctx.Export(\"customRulesConfigId\", customRules.ConfigId)\n\t\topt1 := _var.Custom_rule_id\n\t\tspecificCustomRule, err := akamai.GetAppSecCustomRules(ctx, \u0026GetAppSecCustomRulesArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tCustomRuleId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificCustomRuleJson\", specificCustomRule.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "customRuleId": {
                        "type": "integer",
                        "description": "The ID of a specific custom rule to use. If not supplied, information about all custom rules associated with the given security configuration will be returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecCustomRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "customRuleId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted display of the custom rule information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of the custom rule(s).\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEval:getAppSecEval": {
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEval.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalGroups:getAppSecEvalGroups": {
            "description": "Use the `akamai.getAppSecEvalGroups` data source to list the action and condition-exception information for an evaluation attack\ngroup or groups.\n__BETA__ This is Adaptive Security Engine(ASE) related data source. Please contact your akamai representative if you want to learn more\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalAttackGroup = configuration.then(configuration =\u003e akamai.getAppSecEvalGroups({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n    attackGroup: _var.attack_group,\n}));\nexport const evalAttackGroupAction = evalAttackGroup.then(evalAttackGroup =\u003e evalAttackGroup.attackGroupAction);\nexport const conditionException = evalAttackGroup.then(evalAttackGroup =\u003e evalAttackGroup.conditionException);\nexport const json = evalAttackGroup.then(evalAttackGroup =\u003e evalAttackGroup.json);\nexport const outputText = evalAttackGroup.then(evalAttackGroup =\u003e evalAttackGroup.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_attack_group = akamai.get_app_sec_eval_groups(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    attack_group=var[\"attack_group\"])\npulumi.export(\"evalAttackGroupAction\", eval_attack_group.attack_group_action)\npulumi.export(\"conditionException\", eval_attack_group.condition_exception)\npulumi.export(\"json\", eval_attack_group.json)\npulumi.export(\"outputText\", eval_attack_group.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalAttackGroup = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalGroups.InvokeAsync(new Akamai.GetAppSecEvalGroupsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n            AttackGroup = @var.Attack_group,\n        })));\n        this.EvalAttackGroupAction = evalAttackGroup.Apply(evalAttackGroup =\u003e evalAttackGroup.AttackGroupAction);\n        this.ConditionException = evalAttackGroup.Apply(evalAttackGroup =\u003e evalAttackGroup.ConditionException);\n        this.Json = evalAttackGroup.Apply(evalAttackGroup =\u003e evalAttackGroup.Json);\n        this.OutputText = evalAttackGroup.Apply(evalAttackGroup =\u003e evalAttackGroup.OutputText);\n    }\n\n    [Output(\"evalAttackGroupAction\")]\n    public Output\u003cstring\u003e EvalAttackGroupAction { get; set; }\n    [Output(\"conditionException\")]\n    public Output\u003cstring\u003e ConditionException { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := _var.Attack_group\n\t\tevalAttackGroup, err := akamai.GetAppSecEvalGroups(ctx, \u0026GetAppSecEvalGroupsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t\tAttackGroup:      \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalAttackGroupAction\", evalAttackGroup.AttackGroupAction)\n\t\tctx.Export(\"conditionException\", evalAttackGroup.ConditionException)\n\t\tctx.Export(\"json\", evalAttackGroup.Json)\n\t\tctx.Export(\"outputText\", evalAttackGroup.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string",
                        "description": "The ID of the eval attack group to use.\n"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalGroups.\n",
                "properties": {
                    "attackGroup": {
                        "type": "string"
                    },
                    "attackGroupAction": {
                        "type": "string",
                        "description": "The eval attack group's action, either `alert`, `d\n"
                    },
                    "conditionException": {
                        "type": "string",
                        "description": "The eval attack group's conditions and exceptions.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the action and condition-exception information for the specified eval attack\ngroup. This output is only generated if an attack group is specified.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing, for the specified eval attack group or groups, the eval attack group's action and\nboolean values indicating whether conditions and exceptions are present.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "attackGroupAction",
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalHostnames:getAppSecEvalHostnames": {
            "description": "Use the `akamai.AppSecEvalHostnames` data source to retrieve the evaluation hostnames for a configuration. Evaluation mode for hostnames is only available for Web Application Protector. Run hostnames in evaluation mode to see how your configuration settings protect traffic for that hostname before adding a hostname directly to a live configuration. An evaluation period lasts four weeks unless you stop the evaluation. Once you begin, the hostnames you evaluate start responding to traffic as if they are your current hostnames. However, instead of taking an action the evaluation hostnames log which action they would have taken if they were your actively-protected hostnames and not a test.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalHostnamesAppSecEvalHostnames = configuration.then(configuration =\u003e akamai.getAppSecEvalHostnames({\n    configId: configuration.configId,\n}));\nexport const evalHostnames = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.hostnames);\nexport const evalHostnamesOutput = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.outputText);\nexport const evalHostnamesJson = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_hostnames_app_sec_eval_hostnames = akamai.get_app_sec_eval_hostnames(config_id=configuration.config_id)\npulumi.export(\"evalHostnames\", eval_hostnames_app_sec_eval_hostnames.hostnames)\npulumi.export(\"evalHostnamesOutput\", eval_hostnames_app_sec_eval_hostnames.output_text)\npulumi.export(\"evalHostnamesJson\", eval_hostnames_app_sec_eval_hostnames.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalHostnamesAppSecEvalHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalHostnames.InvokeAsync(new Akamai.GetAppSecEvalHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.EvalHostnames = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.Hostnames);\n        this.EvalHostnamesOutput = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.OutputText);\n        this.EvalHostnamesJson = evalHostnamesAppSecEvalHostnames.Apply(evalHostnamesAppSecEvalHostnames =\u003e evalHostnamesAppSecEvalHostnames.Json);\n    }\n\n    [Output(\"evalHostnames\")]\n    public Output\u003cstring\u003e EvalHostnames { get; set; }\n    [Output(\"evalHostnamesOutput\")]\n    public Output\u003cstring\u003e EvalHostnamesOutput { get; set; }\n    [Output(\"evalHostnamesJson\")]\n    public Output\u003cstring\u003e EvalHostnamesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tevalHostnamesAppSecEvalHostnames, err := akamai.LookupAppSecEvalHostnames(ctx, \u0026GetAppSecEvalHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalHostnames\", evalHostnamesAppSecEvalHostnames.Hostnames)\n\t\tctx.Export(\"evalHostnamesOutput\", evalHostnamesAppSecEvalHostnames.OutputText)\n\t\tctx.Export(\"evalHostnamesJson\", evalHostnamesAppSecEvalHostnames.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the evaluation hostnames.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the evaluation hostnames.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the evaluation hostnames.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecEvalRules:getAppSecEvalRules": {
            "description": "Use the `akamai.getAppSecEvalRules` data source to list the action and condition-exception information\nfor a rule or rules you want to evaluate.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst evalRule = configuration.then(configuration =\u003e akamai.getAppSecEvalRules({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n    ruleId: _var.rule_id,\n}));\nexport const evalRuleAction = akamai_appsec_eval_rules.eval_rule.eval_rule_action;\nexport const conditionException = akamai_appsec_eval_rules.eval_rule.condition_exception;\nexport const json = akamai_appsec_eval_rules.eval_rule.json;\nexport const outputText = akamai_appsec_eval_rules.eval_rule.output_text;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\neval_rule = akamai.get_app_sec_eval_rules(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    rule_id=var[\"rule_id\"])\npulumi.export(\"evalRuleAction\", akamai_appsec_eval_rules[\"eval_rule\"][\"eval_rule_action\"])\npulumi.export(\"conditionException\", akamai_appsec_eval_rules[\"eval_rule\"][\"condition_exception\"])\npulumi.export(\"json\", akamai_appsec_eval_rules[\"eval_rule\"][\"json\"])\npulumi.export(\"outputText\", akamai_appsec_eval_rules[\"eval_rule\"][\"output_text\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var evalRule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecEvalRules.InvokeAsync(new Akamai.GetAppSecEvalRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n            RuleId = @var.Rule_id,\n        })));\n        this.EvalRuleAction = akamai_appsec_eval_rules.Eval_rule.Eval_rule_action;\n        this.ConditionException = akamai_appsec_eval_rules.Eval_rule.Condition_exception;\n        this.Json = akamai_appsec_eval_rules.Eval_rule.Json;\n        this.OutputText = akamai_appsec_eval_rules.Eval_rule.Output_text;\n    }\n\n    [Output(\"evalRuleAction\")]\n    public Output\u003cstring\u003e EvalRuleAction { get; set; }\n    [Output(\"conditionException\")]\n    public Output\u003cstring\u003e ConditionException { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := _var.Rule_id\n\t\t_, err = akamai.GetAppSecEvalRules(ctx, \u0026GetAppSecEvalRulesArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t\tRuleId:           \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"evalRuleAction\", akamai_appsec_eval_rules.Eval_rule.Eval_rule_action)\n\t\tctx.Export(\"conditionException\", akamai_appsec_eval_rules.Eval_rule.Condition_exception)\n\t\tctx.Export(\"json\", akamai_appsec_eval_rules.Eval_rule.Json)\n\t\tctx.Export(\"outputText\", akamai_appsec_eval_rules.Eval_rule.Output_text)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecEvalRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "The ID of the rule to use. If not specified, information about all rules will be returned.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecEvalRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "The eval rule's conditions and exceptions.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "evalRuleAction": {
                        "type": "string",
                        "description": "The eval rule's action, either `alert`, `deny`, or `none`.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the action and condition-exception information for the specified eval rule.\nThis output is only generated if an eval rule is specified.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing, for the specified eval rule or rules, the rule action and boolean values\nindicating whether conditions and exceptions are present.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "conditionException",
                    "configId",
                    "evalRuleAction",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration": {
            "description": "Use the `akamai.getAppSecExportConfiguration` data source to retrieve comprehensive details about a security configuration version, including rate and security policies, rules, hostnames, and other settings. You can retrieve the entire set of information in JSON format, or a subset of the information in tabular format.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst export = Promise.all([configuration, configuration]).then(([configuration, configuration1]) =\u003e akamai.getAppSecExportConfiguration({\n    configId: configuration.configId,\n    version: configuration1.latestVersion,\n    searches: [\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ],\n}));\nexport const json = _export.then(_export =\u003e _export.json);\nexport const text = _export.then(_export =\u003e _export.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nexport = akamai.get_app_sec_export_configuration(config_id=configuration.config_id,\n    version=configuration.latest_version,\n    searches=[\n        \"securityPolicies\",\n        \"selectedHosts\",\n    ])\npulumi.export(\"json\", export.json)\npulumi.export(\"text\", export.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var export = Output.Tuple(configuration, configuration).Apply(values =\u003e\n        {\n            var configuration = values.Item1;\n            var configuration1 = values.Item2;\n            return Output.Create(Akamai.GetAppSecExportConfiguration.InvokeAsync(new Akamai.GetAppSecExportConfigurationArgs\n            {\n                ConfigId = configuration.ConfigId,\n                Version = configuration1.LatestVersion,\n                Searches = \n                {\n                    \"securityPolicies\",\n                    \"selectedHosts\",\n                },\n            }));\n        });\n        this.Json = export.Apply(export =\u003e export.Json);\n        this.Text = export.Apply(export =\u003e export.OutputText);\n    }\n\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"text\")]\n    public Output\u003cstring\u003e Text { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texport, err := akamai.GetAppSecExportConfiguration(ctx, \u0026GetAppSecExportConfigurationArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t\tVersion:  configuration.LatestVersion,\n\t\t\tSearches: []string{\n\t\t\t\t\"securityPolicies\",\n\t\t\t\t\"selectedHosts\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"json\", export.Json)\n\t\tctx.Export(\"text\", export.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A bracket-delimited list of quoted strings specifying the types of information to be retrieved and made available for display in the `output_text` format. The following types are available:\n* customRules\n* matchTargets\n* ratePolicies\n* reputationProfiles\n* rulesets\n* securityPolicies\n* selectableHosts\n* selectedHosts\n"
                    },
                    "version": {
                        "type": "integer",
                        "description": "The version number of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "version"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecExportConfiguration.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "The complete set of information about the specified security configuration version, in JSON format. This includes the types available for the `search` parameter, plus several additional fields such as createDate and createdBy.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the types of data specified in the `search` parameter. Included only if the `search` parameter specifies at least one type.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecFailoverHostnames:getAppSecFailoverHostnames": {
            "description": "Use the `akamai.getAppSecFailoverHostnames` data source to retrieve a list of the failover hostnames in a configuration. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getfailoverhostnames).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst failoverHostnamesAppSecFailoverHostnames = configuration.then(configuration =\u003e akamai.getAppSecFailoverHostnames({\n    configId: configuration.configId,\n}));\nexport const failoverHostnames = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.hostnames);\nexport const failoverHostnamesOutput = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.outputText);\nexport const failoverHostnamesJson = failoverHostnamesAppSecFailoverHostnames.then(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nfailover_hostnames_app_sec_failover_hostnames = akamai.get_app_sec_failover_hostnames(config_id=configuration.config_id)\npulumi.export(\"failoverHostnames\", failover_hostnames_app_sec_failover_hostnames.hostnames)\npulumi.export(\"failoverHostnamesOutput\", failover_hostnames_app_sec_failover_hostnames.output_text)\npulumi.export(\"failoverHostnamesJson\", failover_hostnames_app_sec_failover_hostnames.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var failoverHostnamesAppSecFailoverHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecFailoverHostnames.InvokeAsync(new Akamai.GetAppSecFailoverHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.FailoverHostnames = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.Hostnames);\n        this.FailoverHostnamesOutput = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.OutputText);\n        this.FailoverHostnamesJson = failoverHostnamesAppSecFailoverHostnames.Apply(failoverHostnamesAppSecFailoverHostnames =\u003e failoverHostnamesAppSecFailoverHostnames.Json);\n    }\n\n    [Output(\"failoverHostnames\")]\n    public Output\u003cstring\u003e FailoverHostnames { get; set; }\n    [Output(\"failoverHostnamesOutput\")]\n    public Output\u003cstring\u003e FailoverHostnamesOutput { get; set; }\n    [Output(\"failoverHostnamesJson\")]\n    public Output\u003cstring\u003e FailoverHostnamesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfailoverHostnamesAppSecFailoverHostnames, err := akamai.GetAppSecFailoverHostnames(ctx, \u0026GetAppSecFailoverHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"failoverHostnames\", failoverHostnamesAppSecFailoverHostnames.Hostnames)\n\t\tctx.Export(\"failoverHostnamesOutput\", failoverHostnamesAppSecFailoverHostnames.OutputText)\n\t\tctx.Export(\"failoverHostnamesJson\", failoverHostnamesAppSecFailoverHostnames.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecFailoverHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the failover hostnames.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the failover hostnames.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the failover hostnames.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverage:getAppSecHostnameCoverage": {
            "description": "Use the `akamai.getAppSecHostnameCoverage` data source to retrieve a list of hostnames in the account with their current protections, activation statuses, and other summary information. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#8eb23096).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst hostnameCoverage = akamai.getAppSecHostnameCoverage({});\nexport const hostnameCoverageListJson = hostnameCoverage.then(hostnameCoverage =\u003e hostnameCoverage.json);\nexport const hostnameCoverageListOutput = hostnameCoverage.then(hostnameCoverage =\u003e hostnameCoverage.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nhostname_coverage = akamai.get_app_sec_hostname_coverage()\npulumi.export(\"hostnameCoverageListJson\", hostname_coverage.json)\npulumi.export(\"hostnameCoverageListOutput\", hostname_coverage.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var hostnameCoverage = Output.Create(Akamai.GetAppSecHostnameCoverage.InvokeAsync());\n        this.HostnameCoverageListJson = hostnameCoverage.Apply(hostnameCoverage =\u003e hostnameCoverage.Json);\n        this.HostnameCoverageListOutput = hostnameCoverage.Apply(hostnameCoverage =\u003e hostnameCoverage.OutputText);\n    }\n\n    [Output(\"hostnameCoverageListJson\")]\n    public Output\u003cstring\u003e HostnameCoverageListJson { get; set; }\n    [Output(\"hostnameCoverageListOutput\")]\n    public Output\u003cstring\u003e HostnameCoverageListOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\t_, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\thostnameCoverage, err := akamai.GetAppSecHostnameCoverage(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"hostnameCoverageListJson\", hostnameCoverage.Json)\n\t\tctx.Export(\"hostnameCoverageListOutput\", hostnameCoverage.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverage.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the hostname coverage information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the hostname coverage information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverageMatchTargets:getAppSecHostnameCoverageMatchTargets": {
            "description": "Use the `akamai.getAppSecHostnameCoverageMatchTargets` data source to retrieve information about the API and website match targets that protect a hostname. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoveragematchtargets).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst matchTargets = pulumi.output(akamai.getAppSecHostnameCoverageMatchTargets({\n    configId: 43253,\n    hostname: \"example.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nmatch_targets = akamai.get_app_sec_hostname_coverage_match_targets(config_id=43253,\n    hostname=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var matchTargets = Output.Create(Akamai.GetAppSecHostnameCoverageMatchTargets.InvokeAsync(new Akamai.GetAppSecHostnameCoverageMatchTargetsArgs\n        {\n            ConfigId = 43253,\n            Hostname = \"example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.GetAppSecHostnameCoverageMatchTargets(ctx, \u0026GetAppSecHostnameCoverageMatchTargetsArgs{\n\t\t\tConfigId: 43253,\n\t\t\tHostname: \"example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname for which to retrieve information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the coverage information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the coverage information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecHostnameCoverageOverlapping:getAppSecHostnameCoverageOverlapping": {
            "description": "Use the `akamai.getAppSecHostnameCoverageOverlapping` data source to retrieve information about the configuration versions that contain a hostname also included in the current configuration version. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoverageoverlapping).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst test = pulumi.output(akamai.getAppSecHostnameCoverageOverlapping({\n    configId: 43253,\n    hostname: \"example.com\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ntest = akamai.get_app_sec_hostname_coverage_overlapping(config_id=43253,\n    hostname=\"example.com\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(Akamai.GetAppSecHostnameCoverageOverlapping.InvokeAsync(new Akamai.GetAppSecHostnameCoverageOverlappingArgs\n        {\n            ConfigId = 43253,\n            Hostname = \"example.com\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.GetAppSecHostnameCoverageOverlapping(ctx, \u0026GetAppSecHostnameCoverageOverlappingArgs{\n\t\t\tConfigId: 43253,\n\t\t\tHostname: \"example.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID.\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "The hostname for which to retrieve information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecHostnameCoverageOverlapping.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the overlap information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the overlap information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostname",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecIPGeo:getAppSecIPGeo": {
            "description": "Use the `akamai.AppSecIPGeo` data source to retrieve information about which network lists are used in the IP/Geo Firewall settings.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst ipGeo = configuration.then(configuration =\u003e akamai.getAppSecIPGeo({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const ipGeoMode = ipGeo.then(ipGeo =\u003e ipGeo.mode);\nexport const geoNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.geoNetworkLists);\nexport const ipNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.ipNetworkLists);\nexport const exceptionIpNetworkLists = ipGeo.then(ipGeo =\u003e ipGeo.exceptionIpNetworkLists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nip_geo = akamai.get_app_sec_ip_geo(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"ipGeoMode\", ip_geo.mode)\npulumi.export(\"geoNetworkLists\", ip_geo.geo_network_lists)\npulumi.export(\"ipNetworkLists\", ip_geo.ip_network_lists)\npulumi.export(\"exceptionIpNetworkLists\", ip_geo.exception_ip_network_lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var ipGeo = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecIPGeo.InvokeAsync(new Akamai.GetAppSecIPGeoArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.IpGeoMode = ipGeo.Apply(ipGeo =\u003e ipGeo.Mode);\n        this.GeoNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.GeoNetworkLists);\n        this.IpNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.IpNetworkLists);\n        this.ExceptionIpNetworkLists = ipGeo.Apply(ipGeo =\u003e ipGeo.ExceptionIpNetworkLists);\n    }\n\n    [Output(\"ipGeoMode\")]\n    public Output\u003cstring\u003e IpGeoMode { get; set; }\n    [Output(\"geoNetworkLists\")]\n    public Output\u003cstring\u003e GeoNetworkLists { get; set; }\n    [Output(\"ipNetworkLists\")]\n    public Output\u003cstring\u003e IpNetworkLists { get; set; }\n    [Output(\"exceptionIpNetworkLists\")]\n    public Output\u003cstring\u003e ExceptionIpNetworkLists { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipGeo, err := akamai.LookupAppSecIPGeo(ctx, \u0026GetAppSecIPGeoArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ipGeoMode\", ipGeo.Mode)\n\t\tctx.Export(\"geoNetworkLists\", ipGeo.GeoNetworkLists)\n\t\tctx.Export(\"ipNetworkLists\", ipGeo.IpNetworkLists)\n\t\tctx.Export(\"exceptionIpNetworkLists\", ipGeo.ExceptionIpNetworkLists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecIPGeo.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecIPGeo.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "exceptionIpNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be allowed regardless of `mode`, `geo_network_lists`, and `ip_network_lists` parameters.\n"
                    },
                    "geoNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be blocked or allowed geographically.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipNetworkLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The network lists to be blocked or allowd by IP address.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The mode used for IP/Geo firewall blocking: `block` to block specific IPs, geographies or network lists, or `allow` to allow specific IPs or geographies to be let through while blocking the rest.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the IP/Geo firewall settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "exceptionIpNetworkLists",
                    "geoNetworkLists",
                    "ipNetworkLists",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecMatchTargets:getAppSecMatchTargets": {
            "description": "Use the `akamai.getAppSecMatchTargets` data source to retrieve information about the match targets associated with a given configuration, or about a specific match target.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst matchTargetsAppSecMatchTargets = configuration.then(configuration =\u003e akamai.getAppSecMatchTargets({\n    configId: configuration.configId,\n}));\nexport const matchTargets = matchTargetsAppSecMatchTargets.then(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.outputText);\nconst matchTarget = configuration.then(configuration =\u003e akamai.getAppSecMatchTargets({\n    configId: configuration.configId,\n    matchTargetId: _var.match_target_id,\n}));\nexport const matchTargetOutput = matchTarget.then(matchTarget =\u003e matchTarget.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nmatch_targets_app_sec_match_targets = akamai.get_app_sec_match_targets(config_id=configuration.config_id)\npulumi.export(\"matchTargets\", match_targets_app_sec_match_targets.output_text)\nmatch_target = akamai.get_app_sec_match_targets(config_id=configuration.config_id,\n    match_target_id=var[\"match_target_id\"])\npulumi.export(\"matchTargetOutput\", match_target.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var matchTargetsAppSecMatchTargets = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecMatchTargets.InvokeAsync(new Akamai.GetAppSecMatchTargetsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.MatchTargets = matchTargetsAppSecMatchTargets.Apply(matchTargetsAppSecMatchTargets =\u003e matchTargetsAppSecMatchTargets.OutputText);\n        var matchTarget = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecMatchTargets.InvokeAsync(new Akamai.GetAppSecMatchTargetsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            MatchTargetId = @var.Match_target_id,\n        })));\n        this.MatchTargetOutput = matchTarget.Apply(matchTarget =\u003e matchTarget.OutputText);\n    }\n\n    [Output(\"matchTargets\")]\n    public Output\u003cstring\u003e MatchTargets { get; set; }\n    [Output(\"matchTargetOutput\")]\n    public Output\u003cstring\u003e MatchTargetOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmatchTargetsAppSecMatchTargets, err := akamai.GetAppSecMatchTargets(ctx, \u0026GetAppSecMatchTargetsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"matchTargets\", matchTargetsAppSecMatchTargets.OutputText)\n\t\topt1 := _var.Match_target_id\n\t\tmatchTarget, err := akamai.GetAppSecMatchTargets(ctx, \u0026GetAppSecMatchTargetsArgs{\n\t\t\tConfigId:      configuration.ConfigId,\n\t\t\tMatchTargetId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"matchTargetOutput\", matchTarget.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "matchTargetId": {
                        "type": "integer",
                        "description": "The ID of the match target to use. If not supplied, information about all match targets is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecMatchTargets.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the match target information.\n"
                    },
                    "matchTargetId": {
                        "type": "integer"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and Policy ID of all match targets associated with the specified security configuration, or of the specific match target if `match_target_id` was supplied.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecPenaltyBox:getAppSecPenaltyBox": {
            "description": "Use the `akamai.AppSecPenaltyBox` data source to retrieve the penalty box settings for a specified security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst penaltyBox = configuration.then(configuration =\u003e akamai.getAppSecPenaltyBox({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const penaltyBoxAction = penaltyBox.then(penaltyBox =\u003e penaltyBox.action);\nexport const penaltyBoxEnabled = penaltyBox.then(penaltyBox =\u003e penaltyBox.enabled);\nexport const penaltyBoxText = penaltyBox.then(penaltyBox =\u003e penaltyBox.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\npenalty_box = akamai.get_app_sec_penalty_box(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"penaltyBoxAction\", penalty_box.action)\npulumi.export(\"penaltyBoxEnabled\", penalty_box.enabled)\npulumi.export(\"penaltyBoxText\", penalty_box.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var penaltyBox = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecPenaltyBox.InvokeAsync(new Akamai.GetAppSecPenaltyBoxArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.PenaltyBoxAction = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.Action);\n        this.PenaltyBoxEnabled = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.Enabled);\n        this.PenaltyBoxText = penaltyBox.Apply(penaltyBox =\u003e penaltyBox.OutputText);\n    }\n\n    [Output(\"penaltyBoxAction\")]\n    public Output\u003cstring\u003e PenaltyBoxAction { get; set; }\n    [Output(\"penaltyBoxEnabled\")]\n    public Output\u003cstring\u003e PenaltyBoxEnabled { get; set; }\n    [Output(\"penaltyBoxText\")]\n    public Output\u003cstring\u003e PenaltyBoxText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpenaltyBox, err := akamai.LookupAppSecPenaltyBox(ctx, \u0026GetAppSecPenaltyBoxArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"penaltyBoxAction\", penaltyBox.Action)\n\t\tctx.Export(\"penaltyBoxEnabled\", penaltyBox.Enabled)\n\t\tctx.Export(\"penaltyBoxText\", penaltyBox.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecPenaltyBox.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecPenaltyBox.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action for the penalty box: `alert`, `deny`, or `none`.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Either `true` or `false`, indicating whether penalty box protection is enabled.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the `action` and `enabled` information.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "configId",
                    "enabled",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRatePolicies:getAppSecRatePolicies": {
            "description": "Use the `akamai.getAppSecRatePolicies` data source to retrieve the rate policies for a specific security configuration, or a single rate policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst ratePolicies = configuration.then(configuration =\u003e akamai.getAppSecRatePolicies({\n    configId: configuration.configId,\n}));\nexport const ratePoliciesOutput = ratePolicies.then(ratePolicies =\u003e ratePolicies.outputText);\nexport const ratePoliciesJson = ratePolicies.then(ratePolicies =\u003e ratePolicies.json);\nconst ratePolicy = configuration.then(configuration =\u003e akamai.getAppSecRatePolicies({\n    configId: configuration.configId,\n    ratePolicyId: _var.rate_policy_id,\n}));\nexport const ratePolicyJson = ratePolicy.then(ratePolicy =\u003e ratePolicy.json);\nexport const ratePolicyOutput = ratePolicy.then(ratePolicy =\u003e ratePolicy.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrate_policies = akamai.get_app_sec_rate_policies(config_id=configuration.config_id)\npulumi.export(\"ratePoliciesOutput\", rate_policies.output_text)\npulumi.export(\"ratePoliciesJson\", rate_policies.json)\nrate_policy = akamai.get_app_sec_rate_policies(config_id=configuration.config_id,\n    rate_policy_id=var[\"rate_policy_id\"])\npulumi.export(\"ratePolicyJson\", rate_policy.json)\npulumi.export(\"ratePolicyOutput\", rate_policy.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var ratePolicies = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.RatePoliciesOutput = ratePolicies.Apply(ratePolicies =\u003e ratePolicies.OutputText);\n        this.RatePoliciesJson = ratePolicies.Apply(ratePolicies =\u003e ratePolicies.Json);\n        var ratePolicy = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicies.InvokeAsync(new Akamai.GetAppSecRatePoliciesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            RatePolicyId = @var.Rate_policy_id,\n        })));\n        this.RatePolicyJson = ratePolicy.Apply(ratePolicy =\u003e ratePolicy.Json);\n        this.RatePolicyOutput = ratePolicy.Apply(ratePolicy =\u003e ratePolicy.OutputText);\n    }\n\n    [Output(\"ratePoliciesOutput\")]\n    public Output\u003cstring\u003e RatePoliciesOutput { get; set; }\n    [Output(\"ratePoliciesJson\")]\n    public Output\u003cstring\u003e RatePoliciesJson { get; set; }\n    [Output(\"ratePolicyJson\")]\n    public Output\u003cstring\u003e RatePolicyJson { get; set; }\n    [Output(\"ratePolicyOutput\")]\n    public Output\u003cstring\u003e RatePolicyOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicies, err := akamai.GetAppSecRatePolicies(ctx, \u0026GetAppSecRatePoliciesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePoliciesOutput\", ratePolicies.OutputText)\n\t\tctx.Export(\"ratePoliciesJson\", ratePolicies.Json)\n\t\topt1 := _var.Rate_policy_id\n\t\tratePolicy, err := akamai.GetAppSecRatePolicies(ctx, \u0026GetAppSecRatePoliciesArgs{\n\t\t\tConfigId:     configuration.ConfigId,\n\t\t\tRatePolicyId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyJson\", ratePolicy.Json)\n\t\tctx.Export(\"ratePolicyOutput\", ratePolicy.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "The ID of the rate policy to use. If this parameter is not supplied, information about all rate policies will be returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicies.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the rate policy information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of all rate policies associated with the specified security configuration.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRatePolicyActions:getAppSecRatePolicyActions": {
            "description": "Use the `akamai.getAppSecRatePolicyActions` data source to retrieve a list of all rate policies associated with a given configuration and security policy, or the actions associated with a specific rate policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst ratePolicyActionsAppSecRatePolicyActions = configuration.then(configuration =\u003e akamai.getAppSecRatePolicyActions({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const ratePolicyActions = ratePolicyActionsAppSecRatePolicyActions.then(ratePolicyActionsAppSecRatePolicyActions =\u003e ratePolicyActionsAppSecRatePolicyActions.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrate_policy_actions_app_sec_rate_policy_actions = akamai.get_app_sec_rate_policy_actions(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"ratePolicyActions\", rate_policy_actions_app_sec_rate_policy_actions.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var ratePolicyActionsAppSecRatePolicyActions = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRatePolicyActions.InvokeAsync(new Akamai.GetAppSecRatePolicyActionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.RatePolicyActions = ratePolicyActionsAppSecRatePolicyActions.Apply(ratePolicyActionsAppSecRatePolicyActions =\u003e ratePolicyActionsAppSecRatePolicyActions.OutputText);\n    }\n\n    [Output(\"ratePolicyActions\")]\n    public Output\u003cstring\u003e RatePolicyActions { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tratePolicyActionsAppSecRatePolicyActions, err := akamai.GetAppSecRatePolicyActions(ctx, \u0026GetAppSecRatePolicyActionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ratePolicyActions\", ratePolicyActionsAppSecRatePolicyActions.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer",
                        "description": "The ID of the rate policy to use. If not supplied, information about all rate policies will be returned.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRatePolicyActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID IPv4Action and IPv6Action of the indicated security policy.\n"
                    },
                    "ratePolicyId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfileActions:getAppSecReputationProfileActions": {
            "description": "Use the `akamai.getAppSecReputationProfileActions` data source to retrieve details about reputation profiles and their associated actions, or about the actions associated with a specific reputation profile.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileActions.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "The ID of a given reputation profile. If not supplied, information about all reputation profiles is returned.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "THe ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileActions.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action that the specified reputation profile or profiles take when triggered.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted display of the specified reputation profile action information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the specified reputation profile action information.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfileAnalysis:getAppSecReputationProfileAnalysis": {
            "description": "Use the `akamai.AppSecReputationProfileAnalysis` data source to retrieve information about the current reputation analysis settings. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getreputationanalysis).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst reputationAnalysis = configuration.then(configuration =\u003e akamai.getAppSecReputationProfileAnalysis({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const reputationAnalysisText = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.outputText);\nexport const reputationAnalysisJson = reputationAnalysis.then(reputationAnalysis =\u003e reputationAnalysis.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nreputation_analysis = akamai.get_app_sec_reputation_profile_analysis(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"reputationAnalysisText\", reputation_analysis.output_text)\npulumi.export(\"reputationAnalysisJson\", reputation_analysis.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var reputationAnalysis = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfileAnalysis.InvokeAsync(new Akamai.GetAppSecReputationProfileAnalysisArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.ReputationAnalysisText = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.OutputText);\n        this.ReputationAnalysisJson = reputationAnalysis.Apply(reputationAnalysis =\u003e reputationAnalysis.Json);\n    }\n\n    [Output(\"reputationAnalysisText\")]\n    public Output\u003cstring\u003e ReputationAnalysisText { get; set; }\n    [Output(\"reputationAnalysisJson\")]\n    public Output\u003cstring\u003e ReputationAnalysisJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationAnalysis, err := akamai.LookupAppSecReputationProfileAnalysis(ctx, \u0026GetAppSecReputationProfileAnalysisArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationAnalysisText\", reputationAnalysis.OutputText)\n\t\tctx.Export(\"reputationAnalysisJson\", reputationAnalysis.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfileAnalysis.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the reputation analysis settings.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the reputation analysis settings.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles": {
            "description": "Use the `akamai.getAppSecReputationProfiles` data source to retrieve details about all reputation profiles, or a specific reputation profiles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst reputationProfiles = configuration.then(configuration =\u003e akamai.getAppSecReputationProfiles({\n    configId: configuration.configId,\n}));\nexport const reputationProfilesOutput = reputationProfiles.then(reputationProfiles =\u003e reputationProfiles.outputText);\nexport const reputationProfilesJson = reputationProfiles.then(reputationProfiles =\u003e reputationProfiles.json);\nconst reputationProfile = configuration.then(configuration =\u003e akamai.getAppSecReputationProfiles({\n    configId: configuration.configId,\n    reputationProfileId: _var.reputation_profile_id,\n}));\nexport const reputationProfileJson = reputationProfile.then(reputationProfile =\u003e reputationProfile.json);\nexport const reputationProfileOutput = reputationProfile.then(reputationProfile =\u003e reputationProfile.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nreputation_profiles = akamai.get_app_sec_reputation_profiles(config_id=configuration.config_id)\npulumi.export(\"reputationProfilesOutput\", reputation_profiles.output_text)\npulumi.export(\"reputationProfilesJson\", reputation_profiles.json)\nreputation_profile = akamai.get_app_sec_reputation_profiles(config_id=configuration.config_id,\n    reputation_profile_id=var[\"reputation_profile_id\"])\npulumi.export(\"reputationProfileJson\", reputation_profile.json)\npulumi.export(\"reputationProfileOutput\", reputation_profile.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var reputationProfiles = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =\u003e reputationProfiles.OutputText);\n        this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =\u003e reputationProfiles.Json);\n        var reputationProfile = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            ReputationProfileId = @var.Reputation_profile_id,\n        })));\n        this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =\u003e reputationProfile.Json);\n        this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =\u003e reputationProfile.OutputText);\n    }\n\n    [Output(\"reputationProfilesOutput\")]\n    public Output\u003cstring\u003e ReputationProfilesOutput { get; set; }\n    [Output(\"reputationProfilesJson\")]\n    public Output\u003cstring\u003e ReputationProfilesJson { get; set; }\n    [Output(\"reputationProfileJson\")]\n    public Output\u003cstring\u003e ReputationProfileJson { get; set; }\n    [Output(\"reputationProfileOutput\")]\n    public Output\u003cstring\u003e ReputationProfileOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treputationProfiles, err := akamai.GetAppSecReputationProfiles(ctx, \u0026GetAppSecReputationProfilesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfilesOutput\", reputationProfiles.OutputText)\n\t\tctx.Export(\"reputationProfilesJson\", reputationProfiles.Json)\n\t\topt1 := _var.Reputation_profile_id\n\t\treputationProfile, err := akamai.GetAppSecReputationProfiles(ctx, \u0026GetAppSecReputationProfilesArgs{\n\t\t\tConfigId:            configuration.ConfigId,\n\t\t\tReputationProfileId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"reputationProfileJson\", reputationProfile.Json)\n\t\tctx.Export(\"reputationProfileOutput\", reputationProfile.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer",
                        "description": "The ID of a given reputation profile. If not supplied, information about all reputation profiles is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecReputationProfiles.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted display of the details about the indicated reputation profile or profiles.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the details about the indicated reputation profile or profiles.\n"
                    },
                    "reputationProfileId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRuleUpgradeDetails:getAppSecRuleUpgradeDetails": {
            "description": "Use the `akamai.getAppSecRuleUpgradeDetails` data source to retrieve information on changes to the KRS rule sets.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst upgradeDetails = configuration.then(configuration =\u003e akamai.getAppSecRuleUpgradeDetails({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const upgradeDetailsText = upgradeDetails.then(upgradeDetails =\u003e upgradeDetails.outputText);\nexport const upgradeDetailsJson = upgradeDetails.then(upgradeDetails =\u003e upgradeDetails.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nupgrade_details = akamai.get_app_sec_rule_upgrade_details(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"upgradeDetailsText\", upgrade_details.output_text)\npulumi.export(\"upgradeDetailsJson\", upgrade_details.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var upgradeDetails = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRuleUpgradeDetails.InvokeAsync(new Akamai.GetAppSecRuleUpgradeDetailsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.UpgradeDetailsText = upgradeDetails.Apply(upgradeDetails =\u003e upgradeDetails.OutputText);\n        this.UpgradeDetailsJson = upgradeDetails.Apply(upgradeDetails =\u003e upgradeDetails.Json);\n    }\n\n    [Output(\"upgradeDetailsText\")]\n    public Output\u003cstring\u003e UpgradeDetailsText { get; set; }\n    [Output(\"upgradeDetailsJson\")]\n    public Output\u003cstring\u003e UpgradeDetailsJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tupgradeDetails, err := akamai.GetAppSecRuleUpgradeDetails(ctx, \u0026GetAppSecRuleUpgradeDetailsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"upgradeDetailsText\", upgradeDetails.OutputText)\n\t\tctx.Export(\"upgradeDetailsJson\", upgradeDetails.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRuleUpgradeDetails.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the changes (additions and deletions) to the rules for the specified security policy.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing changes (additions and deletions) to the rules for the specified security policy.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecRules:getAppSecRules": {
            "description": "Use the `akamai.getAppSecRules` data source to list the action and condition-exception information for a rule or rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst rule = configuration.then(configuration =\u003e akamai.getAppSecRules({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n    ruleId: _var.rule_id,\n}));\nexport const ruleAction = akamai_appsec_rules.rule.rule_action;\nexport const conditionException = akamai_appsec_rules.rule.condition_exception;\nexport const json = akamai_appsec_rules.rule.json;\nexport const outputText = akamai_appsec_rules.rule.output_text;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nrule = akamai.get_app_sec_rules(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"],\n    rule_id=var[\"rule_id\"])\npulumi.export(\"ruleAction\", akamai_appsec_rules[\"rule\"][\"rule_action\"])\npulumi.export(\"conditionException\", akamai_appsec_rules[\"rule\"][\"condition_exception\"])\npulumi.export(\"json\", akamai_appsec_rules[\"rule\"][\"json\"])\npulumi.export(\"outputText\", akamai_appsec_rules[\"rule\"][\"output_text\"])\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var rule = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecRules.InvokeAsync(new Akamai.GetAppSecRulesArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n            RuleId = @var.Rule_id,\n        })));\n        this.RuleAction = akamai_appsec_rules.Rule.Rule_action;\n        this.ConditionException = akamai_appsec_rules.Rule.Condition_exception;\n        this.Json = akamai_appsec_rules.Rule.Json;\n        this.OutputText = akamai_appsec_rules.Rule.Output_text;\n    }\n\n    [Output(\"ruleAction\")]\n    public Output\u003cstring\u003e RuleAction { get; set; }\n    [Output(\"conditionException\")]\n    public Output\u003cstring\u003e ConditionException { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := _var.Rule_id\n\t\t_, err = akamai.GetAppSecRules(ctx, \u0026GetAppSecRulesArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t\tRuleId:           \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ruleAction\", akamai_appsec_rules.Rule.Rule_action)\n\t\tctx.Export(\"conditionException\", akamai_appsec_rules.Rule.Condition_exception)\n\t\tctx.Export(\"json\", akamai_appsec_rules.Rule.Json)\n\t\tctx.Export(\"outputText\", akamai_appsec_rules.Rule.Output_text)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecRules.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "ruleId": {
                        "type": "integer",
                        "description": "The ID of the rule to use. If not specified, information about all rules will be returned.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecRules.\n",
                "properties": {
                    "conditionException": {
                        "type": "string",
                        "description": "The rule's conditions and exceptions.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the action and condition-exception information for the specified rule.\nThis output is only generated if a rule is specified.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing, for the specified rule or rules, the rule action and boolean values\nindicating whether conditions and exceptions are present.\n"
                    },
                    "ruleAction": {
                        "type": "string",
                        "description": "The rule's action, either `alert`, `deny`, or `none`.\n"
                    },
                    "ruleId": {
                        "type": "integer"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "conditionException",
                    "configId",
                    "json",
                    "outputText",
                    "ruleAction",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSecurityPolicy:getAppSecSecurityPolicy": {
            "description": "Use the `akamai.AppSecSecurityPolicy` data source to retrieve information about the security policies associated with a specific security configuration, or about a specific security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst securityPolicies = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n}));\nexport const securityPoliciesList = securityPolicies.then(securityPolicies =\u003e securityPolicies.securityPolicyIdLists);\nexport const securityPoliciesText = securityPolicies.then(securityPolicies =\u003e securityPolicies.outputText);\nconst specificSecurityPolicy = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicy({\n    configId: configuration.configId,\n    securityPolicyName: \"APIs\",\n}));\nexport const specificSecurityPolicyId = specificSecurityPolicy.then(specificSecurityPolicy =\u003e specificSecurityPolicy.securityPolicyId);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nsecurity_policies = akamai.get_app_sec_security_policy(config_id=configuration.config_id)\npulumi.export(\"securityPoliciesList\", security_policies.security_policy_id_lists)\npulumi.export(\"securityPoliciesText\", security_policies.output_text)\nspecific_security_policy = akamai.get_app_sec_security_policy(config_id=configuration.config_id,\n    security_policy_name=\"APIs\")\npulumi.export(\"specificSecurityPolicyId\", specific_security_policy.security_policy_id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var securityPolicies = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SecurityPoliciesList = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.SecurityPolicyIdLists);\n        this.SecurityPoliciesText = securityPolicies.Apply(securityPolicies =\u003e securityPolicies.OutputText);\n        var specificSecurityPolicy = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicy.InvokeAsync(new Akamai.GetAppSecSecurityPolicyArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyName = \"APIs\",\n        })));\n        this.SpecificSecurityPolicyId = specificSecurityPolicy.Apply(specificSecurityPolicy =\u003e specificSecurityPolicy.SecurityPolicyId);\n    }\n\n    [Output(\"securityPoliciesList\")]\n    public Output\u003cstring\u003e SecurityPoliciesList { get; set; }\n    [Output(\"securityPoliciesText\")]\n    public Output\u003cstring\u003e SecurityPoliciesText { get; set; }\n    [Output(\"specificSecurityPolicyId\")]\n    public Output\u003cstring\u003e SpecificSecurityPolicyId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecurityPolicies, err := akamai.LookupAppSecSecurityPolicy(ctx, \u0026GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"securityPoliciesList\", securityPolicies.SecurityPolicyIdLists)\n\t\tctx.Export(\"securityPoliciesText\", securityPolicies.OutputText)\n\t\topt1 := \"APIs\"\n\t\tspecificSecurityPolicy, err := akamai.LookupAppSecSecurityPolicy(ctx, \u0026GetAppSecSecurityPolicyArgs{\n\t\t\tConfigId:           configuration.ConfigId,\n\t\t\tSecurityPolicyName: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"specificSecurityPolicyId\", specificSecurityPolicy.SecurityPolicyId)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyName": {
                        "type": "string",
                        "description": "The name of the security policy to use. If not supplied, information about all security policies is returned.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicy.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of all security policies.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy. Included only if `security_policy_name` was specified.\n"
                    },
                    "securityPolicyIdLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the IDs of all security policies.\n"
                    },
                    "securityPolicyName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "outputText",
                    "securityPolicyId",
                    "securityPolicyIdLists",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSecurityPolicyProtections:getAppSecSecurityPolicyProtections": {
            "description": "Use the `akamai.getAppSecSecurityPolicyProtections` data source to retrieve the protections in effect for a given security policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst protections = configuration.then(configuration =\u003e akamai.getAppSecSecurityPolicyProtections({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const protectionsJson = protections.then(protections =\u003e protections.json);\nexport const protectionsApplyApiConstraints = protections.then(protections =\u003e protections.applyApiConstraints);\nexport const protectionsApplyApplicationLayerControls = protections.then(protections =\u003e protections.applyApplicationLayerControls);\nexport const protectionsApplyBotmanControls = protections.then(protections =\u003e protections.applyBotmanControls);\nexport const protectionsApplyNetworkLayerControls = protections.then(protections =\u003e protections.applyNetworkLayerControls);\nexport const protectionsApplyRateControls = protections.then(protections =\u003e protections.applyRateControls);\nexport const protectionsApplyReputationControls = protections.then(protections =\u003e protections.applyReputationControls);\nexport const protectionsApplySlowPostControls = protections.then(protections =\u003e protections.applySlowPostControls);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nprotections = akamai.get_app_sec_security_policy_protections(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"protectionsJson\", protections.json)\npulumi.export(\"protectionsApplyApiConstraints\", protections.apply_api_constraints)\npulumi.export(\"protectionsApplyApplicationLayerControls\", protections.apply_application_layer_controls)\npulumi.export(\"protectionsApplyBotmanControls\", protections.apply_botman_controls)\npulumi.export(\"protectionsApplyNetworkLayerControls\", protections.apply_network_layer_controls)\npulumi.export(\"protectionsApplyRateControls\", protections.apply_rate_controls)\npulumi.export(\"protectionsApplyReputationControls\", protections.apply_reputation_controls)\npulumi.export(\"protectionsApplySlowPostControls\", protections.apply_slow_post_controls)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var protections = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSecurityPolicyProtections.InvokeAsync(new Akamai.GetAppSecSecurityPolicyProtectionsArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.ProtectionsJson = protections.Apply(protections =\u003e protections.Json);\n        this.ProtectionsApplyApiConstraints = protections.Apply(protections =\u003e protections.ApplyApiConstraints);\n        this.ProtectionsApplyApplicationLayerControls = protections.Apply(protections =\u003e protections.ApplyApplicationLayerControls);\n        this.ProtectionsApplyBotmanControls = protections.Apply(protections =\u003e protections.ApplyBotmanControls);\n        this.ProtectionsApplyNetworkLayerControls = protections.Apply(protections =\u003e protections.ApplyNetworkLayerControls);\n        this.ProtectionsApplyRateControls = protections.Apply(protections =\u003e protections.ApplyRateControls);\n        this.ProtectionsApplyReputationControls = protections.Apply(protections =\u003e protections.ApplyReputationControls);\n        this.ProtectionsApplySlowPostControls = protections.Apply(protections =\u003e protections.ApplySlowPostControls);\n    }\n\n    [Output(\"protectionsJson\")]\n    public Output\u003cstring\u003e ProtectionsJson { get; set; }\n    [Output(\"protectionsApplyApiConstraints\")]\n    public Output\u003cstring\u003e ProtectionsApplyApiConstraints { get; set; }\n    [Output(\"protectionsApplyApplicationLayerControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyApplicationLayerControls { get; set; }\n    [Output(\"protectionsApplyBotmanControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyBotmanControls { get; set; }\n    [Output(\"protectionsApplyNetworkLayerControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyNetworkLayerControls { get; set; }\n    [Output(\"protectionsApplyRateControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyRateControls { get; set; }\n    [Output(\"protectionsApplyReputationControls\")]\n    public Output\u003cstring\u003e ProtectionsApplyReputationControls { get; set; }\n    [Output(\"protectionsApplySlowPostControls\")]\n    public Output\u003cstring\u003e ProtectionsApplySlowPostControls { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprotections, err := akamai.GetAppSecSecurityPolicyProtections(ctx, \u0026GetAppSecSecurityPolicyProtectionsArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"protectionsJson\", protections.Json)\n\t\tctx.Export(\"protectionsApplyApiConstraints\", protections.ApplyApiConstraints)\n\t\tctx.Export(\"protectionsApplyApplicationLayerControls\", protections.ApplyApplicationLayerControls)\n\t\tctx.Export(\"protectionsApplyBotmanControls\", protections.ApplyBotmanControls)\n\t\tctx.Export(\"protectionsApplyNetworkLayerControls\", protections.ApplyNetworkLayerControls)\n\t\tctx.Export(\"protectionsApplyRateControls\", protections.ApplyRateControls)\n\t\tctx.Export(\"protectionsApplyReputationControls\", protections.ApplyReputationControls)\n\t\tctx.Export(\"protectionsApplySlowPostControls\", protections.ApplySlowPostControls)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSecurityPolicyProtections.\n",
                "properties": {
                    "applyApiConstraints": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether API constraints are in effect.\n"
                    },
                    "applyApplicationLayerControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether application layer controls are in effect.\n"
                    },
                    "applyBotmanControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether botman controls are in effect.\n"
                    },
                    "applyNetworkLayerControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether network layer controls are in effect.\n"
                    },
                    "applyRateControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether rate controls are in effect.\n"
                    },
                    "applyReputationControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether reputation controls are in effect.\n"
                    },
                    "applySlowPostControls": {
                        "type": "boolean",
                        "description": "`true` or `false`, indicating whether slow post controls are in effect.\n"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "a JSON-formatted list showing the status of the protection settings\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "a tabular display showing the status of the protection settings\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "applyApiConstraints",
                    "applyApplicationLayerControls",
                    "applyBotmanControls",
                    "applyNetworkLayerControls",
                    "applyRateControls",
                    "applyReputationControls",
                    "applySlowPostControls",
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames": {
            "description": "Use the `akamai.getAppSecSelectableHostnames` data source to retrieve the list of hostnames that may be protected under a given security configuration. You can specify the list to be retrieved either by supplying the name of a security configuration, or by supplying a group ID and contract ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst selectableHostnamesAppSecSelectableHostnames = configuration.then(configuration =\u003e akamai.getAppSecSelectableHostnames({\n    configId: configuration.configId,\n}));\nexport const selectableHostnames = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnames);\nexport const selectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.hostnamesJson);\nexport const selectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.then(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.outputText);\nconst selectableHostnamesForCreateConfigurationAppSecSelectableHostnames = akamai.getAppSecSelectableHostnames({\n    contractid: _var.contractid,\n    groupid: _var.groupid,\n});\nexport const selectableHostnamesForCreateConfiguration = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.hostnames);\nexport const selectableHostnamesForCreateConfigurationJson = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.hostnamesJson);\nexport const selectableHostnamesForCreateConfigurationOutputText = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.then(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nselectable_hostnames_app_sec_selectable_hostnames = akamai.get_app_sec_selectable_hostnames(config_id=configuration.config_id)\npulumi.export(\"selectableHostnames\", selectable_hostnames_app_sec_selectable_hostnames.hostnames)\npulumi.export(\"selectableHostnamesJson\", selectable_hostnames_app_sec_selectable_hostnames.hostnames_json)\npulumi.export(\"selectableHostnamesOutputText\", selectable_hostnames_app_sec_selectable_hostnames.output_text)\nselectable_hostnames_for_create_configuration_app_sec_selectable_hostnames = akamai.get_app_sec_selectable_hostnames(contractid=var[\"contractid\"],\n    groupid=var[\"groupid\"])\npulumi.export(\"selectableHostnamesForCreateConfiguration\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.hostnames)\npulumi.export(\"selectableHostnamesForCreateConfigurationJson\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.hostnames_json)\npulumi.export(\"selectableHostnamesForCreateConfigurationOutputText\", selectable_hostnames_for_create_configuration_app_sec_selectable_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var selectableHostnamesAppSecSelectableHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SelectableHostnames = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.Hostnames);\n        this.SelectableHostnamesJson = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.HostnamesJson);\n        this.SelectableHostnamesOutputText = selectableHostnamesAppSecSelectableHostnames.Apply(selectableHostnamesAppSecSelectableHostnames =\u003e selectableHostnamesAppSecSelectableHostnames.OutputText);\n        var selectableHostnamesForCreateConfigurationAppSecSelectableHostnames = Output.Create(Akamai.GetAppSecSelectableHostnames.InvokeAsync(new Akamai.GetAppSecSelectableHostnamesArgs\n        {\n            Contractid = @var.Contractid,\n            Groupid = @var.Groupid,\n        }));\n        this.SelectableHostnamesForCreateConfiguration = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Hostnames);\n        this.SelectableHostnamesForCreateConfigurationJson = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.HostnamesJson);\n        this.SelectableHostnamesForCreateConfigurationOutputText = selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Apply(selectableHostnamesForCreateConfigurationAppSecSelectableHostnames =\u003e selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.OutputText);\n    }\n\n    [Output(\"selectableHostnames\")]\n    public Output\u003cstring\u003e SelectableHostnames { get; set; }\n    [Output(\"selectableHostnamesJson\")]\n    public Output\u003cstring\u003e SelectableHostnamesJson { get; set; }\n    [Output(\"selectableHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectableHostnamesOutputText { get; set; }\n    [Output(\"selectableHostnamesForCreateConfiguration\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfiguration { get; set; }\n    [Output(\"selectableHostnamesForCreateConfigurationJson\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfigurationJson { get; set; }\n    [Output(\"selectableHostnamesForCreateConfigurationOutputText\")]\n    public Output\u003cstring\u003e SelectableHostnamesForCreateConfigurationOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := configuration.ConfigId\n\t\tselectableHostnamesAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026GetAppSecSelectableHostnamesArgs{\n\t\t\tConfigId: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectableHostnames\", selectableHostnamesAppSecSelectableHostnames.Hostnames)\n\t\tctx.Export(\"selectableHostnamesJson\", selectableHostnamesAppSecSelectableHostnames.HostnamesJson)\n\t\tctx.Export(\"selectableHostnamesOutputText\", selectableHostnamesAppSecSelectableHostnames.OutputText)\n\t\topt2 := _var.Contractid\n\t\topt3 := _var.Groupid\n\t\tselectableHostnamesForCreateConfigurationAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, \u0026GetAppSecSelectableHostnamesArgs{\n\t\t\tContractid: \u0026opt2,\n\t\t\tGroupid:    \u0026opt3,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectableHostnamesForCreateConfiguration\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Hostnames)\n\t\tctx.Export(\"selectableHostnamesForCreateConfigurationJson\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.HostnamesJson)\n\t\tctx.Export(\"selectableHostnamesForCreateConfigurationOutputText\", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "contractid": {
                        "type": "string",
                        "description": "The ID of the contract to use.\n"
                    },
                    "groupid": {
                        "type": "integer",
                        "description": "The ID of the group to use.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectableHostnames.\n",
                "properties": {
                    "activeInProduction": {
                        "type": "boolean"
                    },
                    "activeInStaging": {
                        "type": "boolean"
                    },
                    "configId": {
                        "type": "integer"
                    },
                    "contractid": {
                        "type": "string"
                    },
                    "groupid": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of selectable hostnames.\n"
                    },
                    "hostnamesJson": {
                        "type": "string",
                        "description": "The list of selectable hostnames in json format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the selectable hostnames showing the name and config_id of the security configuration under which the host is protected in production, or '-' if the host is not protected in production.\n"
                    }
                },
                "type": "object",
                "required": [
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSelectedHostnames:getAppSecSelectedHostnames": {
            "description": "Use the `akamai.AppSecSelectedHostnames` data source to retrieve a list of the hostnames that are currently protected under a given security configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: \"Akamai Tools\",\n});\nconst selectedHostnamesAppSecSelectedHostnames = configuration.then(configuration =\u003e akamai.getAppSecSelectedHostnames({\n    configId: configuration.configId,\n}));\nexport const selectedHostnames = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnames);\nexport const selectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.hostnamesJson);\nexport const selectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.then(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=\"Akamai Tools\")\nselected_hostnames_app_sec_selected_hostnames = akamai.get_app_sec_selected_hostnames(config_id=configuration.config_id)\npulumi.export(\"selectedHostnames\", selected_hostnames_app_sec_selected_hostnames.hostnames)\npulumi.export(\"selectedHostnamesJson\", selected_hostnames_app_sec_selected_hostnames.hostnames_json)\npulumi.export(\"selectedHostnamesOutputText\", selected_hostnames_app_sec_selected_hostnames.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = \"Akamai Tools\",\n        }));\n        var selectedHostnamesAppSecSelectedHostnames = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSelectedHostnames.InvokeAsync(new Akamai.GetAppSecSelectedHostnamesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SelectedHostnames = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.Hostnames);\n        this.SelectedHostnamesJson = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.HostnamesJson);\n        this.SelectedHostnamesOutputText = selectedHostnamesAppSecSelectedHostnames.Apply(selectedHostnamesAppSecSelectedHostnames =\u003e selectedHostnamesAppSecSelectedHostnames.OutputText);\n    }\n\n    [Output(\"selectedHostnames\")]\n    public Output\u003cstring\u003e SelectedHostnames { get; set; }\n    [Output(\"selectedHostnamesJson\")]\n    public Output\u003cstring\u003e SelectedHostnamesJson { get; set; }\n    [Output(\"selectedHostnamesOutputText\")]\n    public Output\u003cstring\u003e SelectedHostnamesOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"Akamai Tools\"\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tselectedHostnamesAppSecSelectedHostnames, err := akamai.LookupAppSecSelectedHostnames(ctx, \u0026GetAppSecSelectedHostnamesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"selectedHostnames\", selectedHostnamesAppSecSelectedHostnames.Hostnames)\n\t\tctx.Export(\"selectedHostnamesJson\", selectedHostnamesAppSecSelectedHostnames.HostnamesJson)\n\t\tctx.Export(\"selectedHostnamesOutputText\", selectedHostnamesAppSecSelectedHostnames.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of selected hostnames.\n"
                    },
                    "hostnamesJson": {
                        "type": "string",
                        "description": "The list of selected hostnames in JSON format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the selected hostnames.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "hostnames",
                    "hostnamesJson",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSiemDefinitions:getAppSecSiemDefinitions": {
            "description": "Use the `akamai.getAppSecSiemDefinitions` data source to retrieve information about the available SIEM versions, or about a specific SIEM version. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getsiemversions).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst siemDefinitions = akamai.getAppSecSiemDefinitions({});\nexport const siemDefinitionsJson = siemDefinitions.then(siemDefinitions =\u003e siemDefinitions.json);\nexport const siemDefinitionsOutput = siemDefinitions.then(siemDefinitions =\u003e siemDefinitions.outputText);\nconst siemDefinition = akamai.getAppSecSiemDefinitions({\n    siemDefinitionName: _var.siem_definition_name,\n});\nexport const siemDefinitionId = siemDefinition.then(siemDefinition =\u003e siemDefinition.id);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nsiem_definitions = akamai.get_app_sec_siem_definitions()\npulumi.export(\"siemDefinitionsJson\", siem_definitions.json)\npulumi.export(\"siemDefinitionsOutput\", siem_definitions.output_text)\nsiem_definition = akamai.get_app_sec_siem_definitions(siem_definition_name=var[\"siem_definition_name\"])\npulumi.export(\"siemDefinitionId\", siem_definition.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var siemDefinitions = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync());\n        this.SiemDefinitionsJson = siemDefinitions.Apply(siemDefinitions =\u003e siemDefinitions.Json);\n        this.SiemDefinitionsOutput = siemDefinitions.Apply(siemDefinitions =\u003e siemDefinitions.OutputText);\n        var siemDefinition = Output.Create(Akamai.GetAppSecSiemDefinitions.InvokeAsync(new Akamai.GetAppSecSiemDefinitionsArgs\n        {\n            SiemDefinitionName = @var.Siem_definition_name,\n        }));\n        this.SiemDefinitionId = siemDefinition.Apply(siemDefinition =\u003e siemDefinition.Id);\n    }\n\n    [Output(\"siemDefinitionsJson\")]\n    public Output\u003cstring\u003e SiemDefinitionsJson { get; set; }\n    [Output(\"siemDefinitionsOutput\")]\n    public Output\u003cstring\u003e SiemDefinitionsOutput { get; set; }\n    [Output(\"siemDefinitionId\")]\n    public Output\u003cstring\u003e SiemDefinitionId { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\t_, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsiemDefinitions, err := akamai.GetAppSecSiemDefinitions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemDefinitionsJson\", siemDefinitions.Json)\n\t\tctx.Export(\"siemDefinitionsOutput\", siemDefinitions.OutputText)\n\t\topt1 := _var.Siem_definition_name\n\t\tsiemDefinition, err := akamai.GetAppSecSiemDefinitions(ctx, \u0026GetAppSecSiemDefinitionsArgs{\n\t\t\tSiemDefinitionName: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemDefinitionId\", siemDefinition.Id)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemDefinitions.\n",
                "properties": {
                    "siemDefinitionName": {
                        "type": "string",
                        "description": "The name of a specific SIEM definition for which to retrieve information.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemDefinitions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the SIEM version information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the ID and name of each SIEM version.\n"
                    },
                    "siemDefinitionName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSiemSettings:getAppSecSiemSettings": {
            "description": "Use the `akamai.AppSecSiemSettings` data source to retrieve the SIEM settings for a specific configuration. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getsiemsettings).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst siemSettings = configuration.then(configuration =\u003e akamai.getAppSecSiemSettings({\n    configId: configuration.configId,\n}));\nexport const siemSettingsJson = siemSettings.then(siemSettings =\u003e siemSettings.json);\nexport const siemSettingsOutput = siemSettings.then(siemSettings =\u003e siemSettings.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nsiem_settings = akamai.get_app_sec_siem_settings(config_id=configuration.config_id)\npulumi.export(\"siemSettingsJson\", siem_settings.json)\npulumi.export(\"siemSettingsOutput\", siem_settings.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var siemSettings = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSiemSettings.InvokeAsync(new Akamai.GetAppSecSiemSettingsArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.SiemSettingsJson = siemSettings.Apply(siemSettings =\u003e siemSettings.Json);\n        this.SiemSettingsOutput = siemSettings.Apply(siemSettings =\u003e siemSettings.OutputText);\n    }\n\n    [Output(\"siemSettingsJson\")]\n    public Output\u003cstring\u003e SiemSettingsJson { get; set; }\n    [Output(\"siemSettingsOutput\")]\n    public Output\u003cstring\u003e SiemSettingsOutput { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsiemSettings, err := akamai.LookupAppSecSiemSettings(ctx, \u0026GetAppSecSiemSettingsArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"siemSettingsJson\", siemSettings.Json)\n\t\tctx.Export(\"siemSettingsOutput\", siemSettings.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSiemSettings.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the SIEM setting information.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the SIEM setting information.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecSlowPost:getAppSecSlowPost": {
            "description": "Use the `akamai.AppSecSlowPost` data source to retrieve the slow post protection settings for a given security configuration and policy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst slowPost = configuration.then(configuration =\u003e akamai.getAppSecSlowPost({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const slowPostOutputText = slowPost.then(slowPost =\u003e slowPost.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nslow_post = akamai.get_app_sec_slow_post(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"slowPostOutputText\", slow_post.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var slowPost = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecSlowPost.InvokeAsync(new Akamai.GetAppSecSlowPostArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.SlowPostOutputText = slowPost.Apply(slowPost =\u003e slowPost.OutputText);\n    }\n\n    [Output(\"slowPostOutputText\")]\n    public Output\u003cstring\u003e SlowPostOutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tslowPost, err := akamai.LookupAppSecSlowPost(ctx, \u0026GetAppSecSlowPostArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"slowPostOutputText\", slowPost.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecSlowPost.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display including the following columns:\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecThreatIntel:getAppSecThreatIntel": {
            "description": "Use the `akamai.AppSecThreatIntel` data source to view threat intelligence setting for a policy\n__BETA__ This is Adaptive Security Engine(ASE) related data source. Please contact your akamai representative if you want to learn more\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst threatIntelAppSecThreatIntel = configuration.then(configuration =\u003e akamai.getAppSecThreatIntel({\n    configId: configuration.configId,\n    securityPolicyId: _var.security_policy_id,\n}));\nexport const threatIntel = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.threatIntel);\nexport const json = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.json);\nexport const outputText = threatIntelAppSecThreatIntel.then(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.outputText);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nthreat_intel_app_sec_threat_intel = akamai.get_app_sec_threat_intel(config_id=configuration.config_id,\n    security_policy_id=var[\"security_policy_id\"])\npulumi.export(\"threatIntel\", threat_intel_app_sec_threat_intel.threat_intel)\npulumi.export(\"json\", threat_intel_app_sec_threat_intel.json)\npulumi.export(\"outputText\", threat_intel_app_sec_threat_intel.output_text)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var threatIntelAppSecThreatIntel = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecThreatIntel.InvokeAsync(new Akamai.GetAppSecThreatIntelArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Security_policy_id,\n        })));\n        this.ThreatIntel = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.ThreatIntel);\n        this.Json = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.Json);\n        this.OutputText = threatIntelAppSecThreatIntel.Apply(threatIntelAppSecThreatIntel =\u003e threatIntelAppSecThreatIntel.OutputText);\n    }\n\n    [Output(\"threatIntel\")]\n    public Output\u003cstring\u003e ThreatIntel { get; set; }\n    [Output(\"json\")]\n    public Output\u003cstring\u003e Json { get; set; }\n    [Output(\"outputText\")]\n    public Output\u003cstring\u003e OutputText { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tthreatIntelAppSecThreatIntel, err := akamai.LookupAppSecThreatIntel(ctx, \u0026GetAppSecThreatIntelArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Security_policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"threatIntel\", threatIntelAppSecThreatIntel.ThreatIntel)\n\t\tctx.Export(\"json\", threatIntelAppSecThreatIntel.Json)\n\t\tctx.Export(\"outputText\", threatIntelAppSecThreatIntel.OutputText)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecThreatIntel.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted threat intelligence object\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the threat intel information.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "threatIntel": {
                        "type": "string",
                        "description": "Threat Intelligence setting, either `on` or `off`.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "securityPolicyId",
                    "threatIntel",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecVersionNotes:getAppSecVersionNotes": {
            "description": "Use the `akamai.AppSecVersionNodes` data source to retrieve the most recent version notes for a configuration.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst versionNotes = configuration.then(configuration =\u003e akamai.getAppSecVersionNotes({\n    configId: configuration.configId,\n}));\nexport const versionNotesText = versionNotes.then(versionNotes =\u003e versionNotes.outputText);\nexport const versionNotesJson = versionNotes.then(versionNotes =\u003e versionNotes.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nversion_notes = akamai.get_app_sec_version_notes(config_id=configuration.config_id)\npulumi.export(\"versionNotesText\", version_notes.output_text)\npulumi.export(\"versionNotesJson\", version_notes.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var versionNotes = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecVersionNotes.InvokeAsync(new Akamai.GetAppSecVersionNotesArgs\n        {\n            ConfigId = configuration.ConfigId,\n        })));\n        this.VersionNotesText = versionNotes.Apply(versionNotes =\u003e versionNotes.OutputText);\n        this.VersionNotesJson = versionNotes.Apply(versionNotes =\u003e versionNotes.Json);\n    }\n\n    [Output(\"versionNotesText\")]\n    public Output\u003cstring\u003e VersionNotesText { get; set; }\n    [Output(\"versionNotesJson\")]\n    public Output\u003cstring\u003e VersionNotesJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tversionNotes, err := akamai.GetAppSecVersionNotes(ctx, \u0026GetAppSecVersionNotesArgs{\n\t\t\tConfigId: configuration.ConfigId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"versionNotesText\", versionNotes.OutputText)\n\t\tctx.Export(\"versionNotesJson\", versionNotes.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The configuration ID to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecVersionNotes.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list showing the version notes.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the version notes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "json",
                    "outputText",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecWafMode:getAppSecWafMode": {
            "description": "Use the `akamai.AppSecWafMode` data source to retrieve the mode that indicates how the WAF rules of the given security configuration and security policy will be updated.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst configuration = akamai.getAppSecConfiguration({\n    name: _var.security_configuration,\n});\nconst wafMode = configuration.then(configuration =\u003e akamai.getAppSecWafMode({\n    configId: configuration.configId,\n    securityPolicyId: _var.policy_id,\n}));\nexport const wafModeMode = wafMode.then(wafMode =\u003e wafMode.mode);\nexport const wafModeCurrentRuleset = wafMode.then(wafMode =\u003e wafMode.currentRuleset);\nexport const wafModeEvalStatus = wafMode.then(wafMode =\u003e wafMode.evalStatus);\nexport const wafModeEvalRuleset = wafMode.then(wafMode =\u003e wafMode.evalRuleset);\nexport const wafModeEvalExpirationDate = wafMode.then(wafMode =\u003e wafMode.evalExpirationDate);\nexport const wafModeText = wafMode.then(wafMode =\u003e wafMode.outputText);\nexport const wafModeJson = wafMode.then(wafMode =\u003e wafMode.json);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nconfiguration = akamai.get_app_sec_configuration(name=var[\"security_configuration\"])\nwaf_mode = akamai.get_app_sec_waf_mode(config_id=configuration.config_id,\n    security_policy_id=var[\"policy_id\"])\npulumi.export(\"wafModeMode\", waf_mode.mode)\npulumi.export(\"wafModeCurrentRuleset\", waf_mode.current_ruleset)\npulumi.export(\"wafModeEvalStatus\", waf_mode.eval_status)\npulumi.export(\"wafModeEvalRuleset\", waf_mode.eval_ruleset)\npulumi.export(\"wafModeEvalExpirationDate\", waf_mode.eval_expiration_date)\npulumi.export(\"wafModeText\", waf_mode.output_text)\npulumi.export(\"wafModeJson\", waf_mode.json)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs\n        {\n            Name = @var.Security_configuration,\n        }));\n        var wafMode = configuration.Apply(configuration =\u003e Output.Create(Akamai.GetAppSecWafMode.InvokeAsync(new Akamai.GetAppSecWafModeArgs\n        {\n            ConfigId = configuration.ConfigId,\n            SecurityPolicyId = @var.Policy_id,\n        })));\n        this.WafModeMode = wafMode.Apply(wafMode =\u003e wafMode.Mode);\n        this.WafModeCurrentRuleset = wafMode.Apply(wafMode =\u003e wafMode.CurrentRuleset);\n        this.WafModeEvalStatus = wafMode.Apply(wafMode =\u003e wafMode.EvalStatus);\n        this.WafModeEvalRuleset = wafMode.Apply(wafMode =\u003e wafMode.EvalRuleset);\n        this.WafModeEvalExpirationDate = wafMode.Apply(wafMode =\u003e wafMode.EvalExpirationDate);\n        this.WafModeText = wafMode.Apply(wafMode =\u003e wafMode.OutputText);\n        this.WafModeJson = wafMode.Apply(wafMode =\u003e wafMode.Json);\n    }\n\n    [Output(\"wafModeMode\")]\n    public Output\u003cstring\u003e WafModeMode { get; set; }\n    [Output(\"wafModeCurrentRuleset\")]\n    public Output\u003cstring\u003e WafModeCurrentRuleset { get; set; }\n    [Output(\"wafModeEvalStatus\")]\n    public Output\u003cstring\u003e WafModeEvalStatus { get; set; }\n    [Output(\"wafModeEvalRuleset\")]\n    public Output\u003cstring\u003e WafModeEvalRuleset { get; set; }\n    [Output(\"wafModeEvalExpirationDate\")]\n    public Output\u003cstring\u003e WafModeEvalExpirationDate { get; set; }\n    [Output(\"wafModeText\")]\n    public Output\u003cstring\u003e WafModeText { get; set; }\n    [Output(\"wafModeJson\")]\n    public Output\u003cstring\u003e WafModeJson { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := _var.Security_configuration\n\t\tconfiguration, err := akamai.LookupAppSecConfiguration(ctx, \u0026GetAppSecConfigurationArgs{\n\t\t\tName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twafMode, err := akamai.LookupAppSecWafMode(ctx, \u0026GetAppSecWafModeArgs{\n\t\t\tConfigId:         configuration.ConfigId,\n\t\t\tSecurityPolicyId: _var.Policy_id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"wafModeMode\", wafMode.Mode)\n\t\tctx.Export(\"wafModeCurrentRuleset\", wafMode.CurrentRuleset)\n\t\tctx.Export(\"wafModeEvalStatus\", wafMode.EvalStatus)\n\t\tctx.Export(\"wafModeEvalRuleset\", wafMode.EvalRuleset)\n\t\tctx.Export(\"wafModeEvalExpirationDate\", wafMode.EvalExpirationDate)\n\t\tctx.Export(\"wafModeText\", wafMode.OutputText)\n\t\tctx.Export(\"wafModeJson\", wafMode.Json)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecWafMode.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "currentRuleset": {
                        "type": "string",
                        "description": "The current rule set version and the ISO 8601 date the rule set version was introduced; this date acts like a version number.\n"
                    },
                    "evalExpirationDate": {
                        "type": "string",
                        "description": "The ISO 8601 time stamp when the evaluation is expiring. This value only appears when `eval` is set to \"enabled\".\n"
                    },
                    "evalRuleset": {
                        "type": "string",
                        "description": "The evaluation rule set version and the ISO 8601 date the evaluation starts.\n"
                    },
                    "evalStatus": {
                        "type": "string",
                        "description": "Whether the evaluation mode is enabled or disabled.\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of the mode information.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "The security policy mode, either `KRS` (update manually) or `AAG` (update automatically), For Adaptive Security Engine (ASE) __BETA__, use `ASE_AUTO` for automatic updates or `ASE_MANUAL` to manually get current rules. Please contact your Akamai representative to learn more about ASE.\n"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the mode information.\n"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "currentRuleset",
                    "evalExpirationDate",
                    "evalRuleset",
                    "evalStatus",
                    "json",
                    "mode",
                    "outputText",
                    "securityPolicyId",
                    "id"
                ]
            }
        },
        "akamai:index/getAppSecWapSelectedHostnames:getAppSecWapSelectedHostnames": {
            "description": "Use the `akamai.AppSecWapSelectedHostnames` data source to retrieve lists of the hostnames that are currently\nprotected and currently being evaluated under a given security configuration and policy. This resource is available\nonly for WAP accounts. (WAP selected hostnames is currently in beta. Please contact your Akamai representative for\nmore information about this feature.)\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAppSecWapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer",
                        "description": "The ID of the security configuration to use.\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of the security policy to use.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "securityPolicyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAppSecWapSelectedHostnames.\n",
                "properties": {
                    "configId": {
                        "type": "integer"
                    },
                    "evaluatedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "matchTargets": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display of the protected and evaluated hostnames.\n"
                    },
                    "protectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "selectedHosts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "configId",
                    "evaluatedHosts",
                    "json",
                    "matchTargets",
                    "outputText",
                    "protectedHosts",
                    "securityPolicyId",
                    "selectedHosts",
                    "id"
                ]
            }
        },
        "akamai:index/getAuthoritiesSet:getAuthoritiesSet": {
            "description": "Use the `akamai.getAuthoritiesSet` data source to retrieve a contract's authorities set. You use the authorities set when creating new zones.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = pulumi.output(akamai.getAuthoritiesSet({\n    contract: \"ctr_1-AB123\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_authorities_set(contract=\"ctr_1-AB123\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetAuthoritiesSet.InvokeAsync(new Akamai.GetAuthoritiesSetArgs\n        {\n            Contract = \"ctr_1-AB123\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := akamai.GetAuthoritiesSet(ctx, \u0026GetAuthoritiesSetArgs{\n\t\t\tContract: \"ctr_1-AB123\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports this argument:\n\n* `contract` - (Required) The contract ID.\n\n## Attributes reference\n\nThis data source supports this attribute:\n\n* `authorities` - A list of authorities.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthoritiesSet.\n",
                "properties": {
                    "contract": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contract"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthoritiesSet.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "contract": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "contract",
                    "id"
                ]
            }
        },
        "akamai:index/getContract:getContract": {
            "description": "Use the `akamai.getContract` data source to find a contract ID.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst exampleContract = pulumi.output(akamai.getContract({\n    groupName: \"example group name\",\n}));\nconst exampleProperty = new akamai.Property(\"example\", {\n    contractId: \"\",\n    \"data.akamai_contract.example.id\": [{}],\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source requires one of these group arguments to return contract information: \n  * `group_name` - The name of the group containing the contract. \n  * `group_id` - The unique ID of the group containing the contract, including the  `grp_` prefix.\n  * `group` - (Deprecated) Either the group ID or the group name that includes the contract. You can't use this argument with `group_id` and `group_name`.\n\n## Attributes reference\n\n* `id` - The contract's unique ID, including the `ctr_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getContract.\n",
                "properties": {
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groupId",
                    "groupName",
                    "id"
                ]
            }
        },
        "akamai:index/getContracts:getContracts": {
            "description": "Use the `akamai.getContracts` data source to list contracts associated with the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nReturn contracts associated with the EdgeGrid API client token currently used for authentication:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_contracts[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_contracts\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_contracts.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_contracts.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThere are no arguments available for this data source.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `contracts` - A list of supported contracts, with the following properties:\n  * `contract_id` - The contract's unique ID, including the `ctr_` prefix.\n  * `contract_type_name` - The type of contract, either `DIRECT_CUSTOMER`, `INDIRECT_CUSTOMER`, `PARENT_CUSTOMER`, `REFERRAL_PARTNER`, `TIER_1_RESELLER`, `VAR_CUSTOMER`, `VALUE_ADDED_RESELLER`, `PARTNER`, `PORTAL_PARTNER`, `STREAMING_RESELLER`, `AKAMAI_INTERNAL`, or `UNKNOWN`.\n",
            "outputs": {
                "description": "A collection of values returned by getContracts.\n",
                "properties": {
                    "contracts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getContractsContract:getContractsContract"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "contracts",
                    "id"
                ]
            }
        },
        "akamai:index/getCpCode:getCpCode": {
            "description": "Use the `akamai.CpCode` data source to retrieve the ID for a content provider (CP) code.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = pulumi.output(akamai.getCpCode({\n    contractId: \"ctr_1-AB123\",\n    groupId: \"grp_123\",\n    name: \"my cpcode name\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_cp_code(contract_id=\"ctr_1-AB123\",\n    group_id=\"grp_123\",\n    name=\"my cpcode name\")\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs\n        {\n            ContractId = \"ctr_1-AB123\",\n            GroupId = \"grp_123\",\n            Name = \"my cpcode name\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := \"ctr_1-AB123\"\n\t\topt1 := \"grp_123\"\n\t\t_, err := akamai.LookupCpCode(ctx, \u0026GetCpCodeArgs{\n\t\t\tContractId: \u0026opt0,\n\t\t\tGroupId:    \u0026opt1,\n\t\t\tName:       \"my cpcode name\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nHere's a real-world example that includes other data sources as dependencies:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst groupName = \"example group name\";\nconst cpcodeName = \"My CP code Name\";\nconst exampleContract = akamai.getContract({\n    groupName: groupName,\n});\nconst exampleGroup = exampleContract.then(exampleContract =\u003e akamai.getGroup({\n    groupName: groupName,\n    contractId: exampleContract.id,\n}));\nconst exampleCpCode = Promise.all([exampleGroup, exampleContract]).then(([exampleGroup, exampleContract]) =\u003e akamai.getCpCode({\n    name: cpcodeName,\n    groupId: exampleGroup.id,\n    contractId: exampleContract.id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\ngroup_name = \"example group name\"\ncpcode_name = \"My CP code Name\"\nexample_contract = akamai.get_contract(group_name=group_name)\nexample_group = akamai.get_group(group_name=group_name,\n    contract_id=example_contract.id)\nexample_cp_code = akamai.get_cp_code(name=cpcode_name,\n    group_id=example_group.id,\n    contract_id=example_contract.id)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var groupName = \"example group name\";\n        var cpcodeName = \"My CP code Name\";\n        var exampleContract = Output.Create(Akamai.GetContract.InvokeAsync(new Akamai.GetContractArgs\n        {\n            GroupName = groupName,\n        }));\n        var exampleGroup = exampleContract.Apply(exampleContract =\u003e Output.Create(Akamai.GetGroup.InvokeAsync(new Akamai.GetGroupArgs\n        {\n            GroupName = groupName,\n            ContractId = exampleContract.Id,\n        })));\n        var exampleCpCode = Output.Tuple(exampleGroup, exampleContract).Apply(values =\u003e\n        {\n            var exampleGroup = values.Item1;\n            var exampleContract = values.Item2;\n            return Output.Create(Akamai.GetCpCode.InvokeAsync(new Akamai.GetCpCodeArgs\n            {\n                Name = cpcodeName,\n                GroupId = exampleGroup.Id,\n                ContractId = exampleContract.Id,\n            }));\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgroupName := \"example group name\"\n\t\tcpcodeName := \"My CP code Name\"\n\t\topt0 := groupName\n\t\texampleContract, err := akamai.GetContract(ctx, \u0026GetContractArgs{\n\t\t\tGroupName: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt1 := groupName\n\t\topt2 := exampleContract.Id\n\t\texampleGroup, err := akamai.GetGroup(ctx, \u0026GetGroupArgs{\n\t\t\tGroupName:  \u0026opt1,\n\t\t\tContractId: \u0026opt2,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\topt3 := exampleGroup.Id\n\t\topt4 := exampleContract.Id\n\t\t_, err = akamai.LookupCpCode(ctx, \u0026GetCpCodeArgs{\n\t\t\tName:       cpcodeName,\n\t\t\tGroupId:    \u0026opt3,\n\t\t\tContractId: \u0026opt4,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `name` - (Required) The name of the CP code.\n* `group_id` - (Required) The group's unique ID, including the `grp_` prefix.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n### Deprecated arguments\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `group` - (Deprecated) Replaced by `group_id`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `id` - The ID of the CP code, including the `cpc_` prefix.\n* `product_ids` - An array of product IDs associated with this CP code. Each ID returned includes the `prd_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            }
        },
        "akamai:index/getDnsRecordSet:getDnsRecordSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "recordType",
                    "zone"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDnsRecordSet.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "rdatas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recordType": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "host",
                    "rdatas",
                    "recordType",
                    "zone",
                    "id"
                ]
            }
        },
        "akamai:index/getGroup:getGroup": {
            "description": "Use the `akamai.getGroup` data source to get a group by name.\n\nEach account features a hierarchy of groups, which control access to your\nAkamai configurations and help consolidate reporting functions, typically\nmapping to an organizational hierarchy. Using either Control Center or the\n[Identity Management: User Administration API](https://developer.akamai.com/en-us/api/core_features/identity_management_user_admin/v2.html),\naccount administrators can assign properties to specific groups, each with\nits own set of users and accompanying roles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst exampleGroup = pulumi.output(akamai.getGroup({\n    contractId: \"\",\n    \"data.akamai_contract.example.id\": [{}],\n    groupName: \"example group name\",\n}));\nconst exampleContract = pulumi.output(akamai.getContract({\n    groupName: \"example group name\",\n}));\nconst exampleProperty = new akamai.Property(\"example\", {\n    \"data.akamai_group.example.id\": [{}],\n    groupId: \"\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `group_name` - (Required) The group name.\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n### Deprecated arguments\n* `contract` - (Deprecated) Replaced by `contract_id`. Maintained for legacy purposes.\n* `name` -  (Deprecated) Replaced by `group_name`. Maintained for legacy purposes.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `id` - The group's unique ID, including the `grp_` prefix.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "groupName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "deprecationMessage": "The setting \"name\" has been deprecated."
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "groupName",
                    "name",
                    "id"
                ]
            }
        },
        "akamai:index/getGroups:getGroups": {
            "description": "Use the `akamai.getGroups` data source to list groups associated with the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using.\n\n## Basic usage\n\nReturn groups associated with the EdgeGrid API client token you're using:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_groups[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_groups\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_groups.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_groups.My-example)\n\t\treturn nil\n\t})\n}\n```\n\n## Argument reference\n\nThere are no arguments available for this data source.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `groups` - A list of supported groups, with the following attributes:\n  * `group_id` - A group's unique ID, including the `grp_` prefix.\n  * `group_name` - The name of the group.\n  * `parent_group_id` - The ID of the parent group, if applicable.\n  * `contract_ids` - An array of strings listing the contract IDs for each group.\n",
            "outputs": {
                "description": "A collection of values returned by getGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getGroupsGroup:getGroupsGroup"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "akamai:index/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "description": "Use the `akamai.getGtmDefaultDatacenter` data source to retrieve the default data center, ID, and nickname.\n\n## Argument reference\n\nThis data source supports these arguments:\n\n* `domain` - (Required)\n* `datacenter` - (Optional) The default is `5400`.\n\n## Attributes reference\n\nThis data source supports these attributes:\n\n* `id` - The data resource ID. Enter in this format: `\u003cdomain\u003e:default_datacenter:\u003cdatacenter_id\u003e`.\n* `datacenter_id` - The default data center ID.\n* `nickname` - The default data center nickname.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            }
        },
        "akamai:index/getNetworkLists:getNetworkLists": {
            "description": "Use the `akamai.getNetworkLists` data source to retrieve information about the available network lists,\noptionally filtered by list type or based on a search string. The information available is described\n[here](https://developer.akamai.com/api/cloud_security/network_lists/v2.html#getlists). \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst networkLists = akamai.getNetworkLists({});\nexport const networkListsText = networkLists.then(networkLists =\u003e networkLists.outputText);\nexport const networkListsJson = networkLists.then(networkLists =\u003e networkLists.json);\nexport const networkListsList = networkLists.then(networkLists =\u003e networkLists.lists);\nconst networkListsFilter = akamai.getNetworkLists({\n    name: \"Test Whitelist\",\n    type: \"IP\",\n});\nexport const networkListsFilterText = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.outputText);\nexport const networkListsFilterJson = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.json);\nexport const networkListsFilterList = networkListsFilter.then(networkListsFilter =\u003e networkListsFilter.lists);\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nnetwork_lists = akamai.get_network_lists()\npulumi.export(\"networkListsText\", network_lists.output_text)\npulumi.export(\"networkListsJson\", network_lists.json)\npulumi.export(\"networkListsList\", network_lists.lists)\nnetwork_lists_filter = akamai.get_network_lists(name=\"Test Whitelist\",\n    type=\"IP\")\npulumi.export(\"networkListsFilterText\", network_lists_filter.output_text)\npulumi.export(\"networkListsFilterJson\", network_lists_filter.json)\npulumi.export(\"networkListsFilterList\", network_lists_filter.lists)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var networkLists = Output.Create(Akamai.GetNetworkLists.InvokeAsync());\n        this.NetworkListsText = networkLists.Apply(networkLists =\u003e networkLists.OutputText);\n        this.NetworkListsJson = networkLists.Apply(networkLists =\u003e networkLists.Json);\n        this.NetworkListsList = networkLists.Apply(networkLists =\u003e networkLists.Lists);\n        var networkListsFilter = Output.Create(Akamai.GetNetworkLists.InvokeAsync(new Akamai.GetNetworkListsArgs\n        {\n            Name = \"Test Whitelist\",\n            Type = \"IP\",\n        }));\n        this.NetworkListsFilterText = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.OutputText);\n        this.NetworkListsFilterJson = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Json);\n        this.NetworkListsFilterList = networkListsFilter.Apply(networkListsFilter =\u003e networkListsFilter.Lists);\n    }\n\n    [Output(\"networkListsText\")]\n    public Output\u003cstring\u003e NetworkListsText { get; set; }\n    [Output(\"networkListsJson\")]\n    public Output\u003cstring\u003e NetworkListsJson { get; set; }\n    [Output(\"networkListsList\")]\n    public Output\u003cstring\u003e NetworkListsList { get; set; }\n    [Output(\"networkListsFilterText\")]\n    public Output\u003cstring\u003e NetworkListsFilterText { get; set; }\n    [Output(\"networkListsFilterJson\")]\n    public Output\u003cstring\u003e NetworkListsFilterJson { get; set; }\n    [Output(\"networkListsFilterList\")]\n    public Output\u003cstring\u003e NetworkListsFilterList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnetworkLists, err := akamai.GetNetworkLists(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"networkListsText\", networkLists.OutputText)\n\t\tctx.Export(\"networkListsJson\", networkLists.Json)\n\t\tctx.Export(\"networkListsList\", networkLists.Lists)\n\t\topt0 := \"Test Whitelist\"\n\t\topt1 := \"IP\"\n\t\tnetworkListsFilter, err := akamai.GetNetworkLists(ctx, \u0026GetNetworkListsArgs{\n\t\t\tName: \u0026opt0,\n\t\t\tType: \u0026opt1,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"networkListsFilterText\", networkListsFilter.OutputText)\n\t\tctx.Export(\"networkListsFilterJson\", networkListsFilter.Json)\n\t\tctx.Export(\"networkListsFilterList\", networkListsFilter.Lists)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkLists.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of a specific network list to retrieve. If not supplied, information about all network\nlists will be returned.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of network lists to be retrieved; must be either \"IP\" or \"GEO\". If not supplied,\ninformation about both types will be returned.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkLists.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string",
                        "description": "A JSON-formatted list of information about the specified network list(s).\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list containing the IDs of the specified network lists(s).\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "outputText": {
                        "type": "string",
                        "description": "A tabular display showing the network list information.\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "uniqueid": {
                        "type": "string",
                        "description": "The ID of the indicated list (if the `name` argument was supplied).\n"
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "lists",
                    "outputText",
                    "uniqueid",
                    "id"
                ]
            }
        },
        "akamai:index/getProperties:getProperties": {
            "description": "Use the `akamai.getProperties` data source to query and retrieve the list of properties for a group and contract\nbased on the [EdgeGrid API client token](https://developer.akamai.com/getting-started/edgegrid) you're using.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nReturn properties associated with the EdgeGrid API client token currently used for authentication:\n\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const myPropertyList = data.akamai_properties.example;\n```\n```python\nimport pulumi\n\npulumi.export(\"myPropertyList\", data[\"akamai_properties\"][\"example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.MyPropertyList = data.Akamai_properties.Example;\n    }\n\n    [Output(\"myPropertyList\")]\n    public Output\u003cstring\u003e MyPropertyList { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"myPropertyList\", data.Akamai_properties.Example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `properties` - A list of properties available for the contract and group IDs provided.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperties.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertiesProperty:getPropertiesProperty"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "properties",
                    "id"
                ]
            }
        },
        "akamai:index/getProperty:getProperty": {
            "description": "Use the `akamai.Property` data source to query and list the property ID and rule tree based on the property name.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThis example returns the property ID and rule tree based on the property name and optional version argument:\n\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as akamai from \"@pulumi/akamai\";\n\nconst example = akamai.getProperty({\n    name: \"terraform-demo\",\n    version: \"1\",\n});\nexport const myPropertyID = example;\n```\n```python\nimport pulumi\nimport pulumi_akamai as akamai\n\nexample = akamai.get_property(name=\"terraform-demo\",\n    version=1)\npulumi.export(\"myPropertyID\", example)\n```\n```csharp\nusing Pulumi;\nusing Akamai = Pulumi.Akamai;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = Output.Create(Akamai.GetProperty.InvokeAsync(new Akamai.GetPropertyArgs\n        {\n            Name = \"terraform-demo\",\n            Version = 1,\n        }));\n        this.MyPropertyID = example;\n    }\n\n    [Output(\"myPropertyID\")]\n    public Output\u003cstring\u003e MyPropertyID { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topt0 := 1\n\t\texample, err := akamai.LookupProperty(ctx, \u0026GetPropertyArgs{\n\t\t\tName:    \"terraform-demo\",\n\t\t\tVersion: \u0026opt0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"myPropertyID\", example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports these arguments:\n\n* `name` - (Required) The property name.\n* `version` - (Optional) The version of the property whose ID you want to list.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `property_ID` - A property's unique identifier, including the `prp_` prefix.\n* `rules` - A JSON-encoded rule tree for a given property.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyHostnames:getPropertyHostnames": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyHostnames.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyHostnamesHostname:getPropertyHostnamesHostname"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "groupId",
                    "hostnames",
                    "propertyId",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyProducts:getPropertyProducts": {
            "description": "Use the `akamai.getPropertyProducts` data source to list the products included on a contract.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThis example returns products associated with the [EdgeGrid client token](https://developer.akamai.com/getting-started/edgegrid) for a given contract:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_products[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_products\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_products.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_products.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThis data source supports this argument:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `products` - A list of supported products for the contract, including:\n  * `product_id` - The product's unique ID, including the `prd_` prefix.\n  * `product_name` - A string containing the product name.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "contractId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyProducts.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyProductsProduct:getPropertyProductsProduct"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "products",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRuleFormats:getPropertyRuleFormats": {
            "description": "Use the `akamai.getPropertyRuleFormats` data source to query the list of\nknown rule formats.\nYou use rule formats to [freeze](https://developer.akamai.com/api/core_features/property_manager/v1.html#freezerf) or\n[update](https://developer.akamai.com/api/core_features/property_manager/v1.html#updaterf) the versioned set of behaviors\nand criteria a rule tree invokes. Without this mechanism, behaviors and criteria\nwould update automatically and generate unexpected errors.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nUse this example to list available property rule formats:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rule_formats[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rule_formats\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rule_formats.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rule_formats.My-example)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Argument reference\n\nThere are no arguments available for this data source.\n",
            "outputs": {
                "description": "A collection of values returned by getPropertyRuleFormats.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ruleFormats": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "ruleFormats",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRules:getPropertyRules": {
            "description": "Use the `akamai.getPropertyRules` data source to query and retrieve the rule tree of\nan existing property version. This data source lets you search across the contracts\nand groups you have access to.\n\n## Basic usage\n\nThis example returns the rule tree for version 3 of a property based on the selected contract and group:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n\nexport const propertyMatch = data.akamai_property_rules[\"my-example\"];\n```\n```python\nimport pulumi\n\npulumi.export(\"propertyMatch\", data[\"akamai_property_rules\"][\"my-example\"])\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        this.PropertyMatch = data.Akamai_property_rules.My_example;\n    }\n\n    [Output(\"propertyMatch\")]\n    public Output\u003cstring\u003e PropertyMatch { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tctx.Export(\"propertyMatch\", data.Akamai_property_rules.My-example)\n\t\treturn nil\n\t})\n}\n```\n\n## Argument reference\n\nThis data source supports these arguments:\n\n* `contract_id` - (Required) A contract's unique ID, including the `ctr_` prefix.\n* `group_id` - (Required) A group's unique ID, including the `grp_` prefix.\n* `property_id` - (Required) A property's unique ID, including the `prp_` prefix.\n* `version` - (Optional) The version to return. Returns the latest version by default.\n\n## Attributes reference\n\nThis data source returns these attributes:\n\n* `rules` - A JSON-encoded rule tree for the property.\n* `errors` - A list of validation errors for the rule tree object returned. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the Property Manager API documentation.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            }
        },
        "akamai:index/getPropertyRulesTemplate:getPropertyRulesTemplate": {
            "description": "The `akamai.getPropertyRulesTemplate` data source lets you configure a rule tree through the use of JSON template files. A rule tree is a nested block of property\nrules in JSON format that include match criteria and behaviors.\n\nWith this data source you define the location of the JSON template files and provide information about any user-defined variables included within the templates.\n\nThe template format used in this data source matches those used in the [Property Manager CLI](https://learn.akamai.com/en-us/learn_akamai/getting_started_with_akamai_developers/developer_tools/getstartedpmcli.html#addanewsnippet).\n\nYou can pass user-defined variables by supplying either:\n\n* paths to `variableDefinitions.json` and `variables.json` with syntax used in Property Manager CLI, or\n* a set of provider variables.\n\n## Referencing sub-files from a template\n\nYou can split each template out into a series of smaller template files. To add\nthem to this data source, you need to include them in the currently loaded file,\nwhich corresponds to the value in the `template_file` argument.  For example, to\ninclude `example-file.json` from the `property-snippets` directory, use this syntax\nincluding the quotes: `\"#include:example-file.json\"`.  Make sure the `property-snippets` folder contains only `.json` files.\nAll files are resolved in relation to the directory that contains the starting template file.\n\n## Inserting variables in a template\n\nYou can also add variables to a template by using a string like `“${env.\u003cvariableName\u003e}\"`. You'll need the quotes here too.  \nThese variables follow the format used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager#update-the-variabledefinitions-file).  They differ from the provider variables which should resolve normally.\n\n{{% examples %}}\n## Example Usage\n{{% /examples %}}\n## Argument reference\n\n* `template_file` - (Required) The absolute path to your top-level JSON template file. The top-level template combines smaller, nested JSON templates to form your property rule tree.\n* `variables` - (Optional) A definition of a variable. Variables aren't required and you can use multiple ones if needed. This argument conflicts with the `variable_definition_file` and `variable_values_file` arguments. A `variables` block includes:\n    * `name` - The name of the variable used in template.\n    * `type` - The type of variable: `string`, `number`, `bool`, or `jsonBlock`.\n    * `value` - The value of the variable passed as a string.\n* `variable_definition_file` - (Optional) The absolute path to the file containing variable definitions and defaults. This file follows the syntax used in the [Property Manager CLI](https://github.com/akamai/cli-property-manager). This argument is required if you set `variable_values_file` and conflicts with `variables`.\n* `variable_values_file` - (Optional) The absolute path to the file containing variable values. This file follows the syntax used in the Property Manager CLI. This argument is required if you set `variable_definition_file` and conflicts with `variables`.\n\n## Attributes reference\n\nThis data source returns this attribute:\n\n* `json` - The fully expanded template with variables and all nested templates resolved.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRulesTemplate.\n",
                "properties": {
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "templateFile"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRulesTemplate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "json": {
                        "type": "string"
                    },
                    "templateFile": {
                        "type": "string"
                    },
                    "varDefinitionFile": {
                        "type": "string"
                    },
                    "varValuesFile": {
                        "type": "string"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/akamai:index/getPropertyRulesTemplateVariable:getPropertyRulesTemplateVariable"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "json",
                    "templateFile",
                    "id"
                ]
            }
        },
        "akamai:properties/getCpCode:getCpCode": {
            "inputs": {
                "description": "A collection of arguments for invoking getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCpCode.\n",
                "properties": {
                    "contract": {
                        "type": "string",
                        "deprecationMessage": "The setting \"contract\" has been deprecated."
                    },
                    "contractId": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string",
                        "deprecationMessage": "The setting \"group\" has been deprecated."
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "contract",
                    "contractId",
                    "group",
                    "groupId",
                    "name",
                    "productIds",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getCpCode has been deprecated in favor of akamai.getCpCode"
        },
        "akamai:properties/getProperty:getProperty": {
            "inputs": {
                "description": "A collection of arguments for invoking getProperty.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProperty.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "rules",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getProperty has been deprecated in favor of akamai.getProperty"
        },
        "akamai:properties/getPropertyRules:getPropertyRules": {
            "inputs": {
                "description": "A collection of arguments for invoking getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "propertyId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPropertyRules.\n",
                "properties": {
                    "contractId": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "propertyId": {
                        "type": "string"
                    },
                    "rules": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "contractId",
                    "errors",
                    "groupId",
                    "propertyId",
                    "rules",
                    "version",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.properties.getPropertyRules has been deprecated in favor of akamai.getPropertyRules"
        },
        "akamai:trafficmanagement/getGtmDefaultDatacenter:getGtmDefaultDatacenter": {
            "inputs": {
                "description": "A collection of arguments for invoking getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domain"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGtmDefaultDatacenter.\n",
                "properties": {
                    "datacenter": {
                        "type": "integer"
                    },
                    "datacenterId": {
                        "type": "integer"
                    },
                    "domain": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nickname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "datacenterId",
                    "domain",
                    "nickname",
                    "id"
                ]
            },
            "deprecationMessage": "akamai.trafficmanagement.getGtmDefaultDatacenter has been deprecated in favor of akamai.getGtmDefaultDatacenter"
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "akamai": "Akamai"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing akamai cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/akamai/terraform-provider-akamai)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-akamai` repo](https://github.com/pulumi/pulumi-akamai/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`akamai/terraform-provider-akamai` repo](https://github.com/akamai/terraform-provider-akamai/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}