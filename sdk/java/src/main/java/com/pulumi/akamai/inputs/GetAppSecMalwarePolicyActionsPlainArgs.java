// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAppSecMalwarePolicyActionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAppSecMalwarePolicyActionsPlainArgs Empty = new GetAppSecMalwarePolicyActionsPlainArgs();

    /**
     * . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
     * 
     */
    @Import(name="configId", required=true)
    private Integer configId;

    /**
     * @return . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
     * 
     */
    public Integer configId() {
        return this.configId;
    }

    /**
     * . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
     * 
     */
    @Import(name="malwarePolicyId")
    private @Nullable Integer malwarePolicyId;

    /**
     * @return . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
     * 
     */
    public Optional<Integer> malwarePolicyId() {
        return Optional.ofNullable(this.malwarePolicyId);
    }

    /**
     * . Unique identifier of the security policy associated with the malware policies and malware policy actions.
     * 
     */
    @Import(name="securityPolicyId", required=true)
    private String securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the malware policies and malware policy actions.
     * 
     */
    public String securityPolicyId() {
        return this.securityPolicyId;
    }

    private GetAppSecMalwarePolicyActionsPlainArgs() {}

    private GetAppSecMalwarePolicyActionsPlainArgs(GetAppSecMalwarePolicyActionsPlainArgs $) {
        this.configId = $.configId;
        this.malwarePolicyId = $.malwarePolicyId;
        this.securityPolicyId = $.securityPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppSecMalwarePolicyActionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppSecMalwarePolicyActionsPlainArgs $;

        public Builder() {
            $ = new GetAppSecMalwarePolicyActionsPlainArgs();
        }

        public Builder(GetAppSecMalwarePolicyActionsPlainArgs defaults) {
            $ = new GetAppSecMalwarePolicyActionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configId . Unique identifier of the security configuration associated with the malware policies and malware policy actions.
         * 
         * @return builder
         * 
         */
        public Builder configId(Integer configId) {
            $.configId = configId;
            return this;
        }

        /**
         * @param malwarePolicyId . Unique identifier of the malware policy you want to return action information for. If not included, action information is returned for all malware policies associated with the specified security policy.
         * 
         * @return builder
         * 
         */
        public Builder malwarePolicyId(@Nullable Integer malwarePolicyId) {
            $.malwarePolicyId = malwarePolicyId;
            return this;
        }

        /**
         * @param securityPolicyId . Unique identifier of the security policy associated with the malware policies and malware policy actions.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicyId(String securityPolicyId) {
            $.securityPolicyId = securityPolicyId;
            return this;
        }

        public GetAppSecMalwarePolicyActionsPlainArgs build() {
            $.configId = Objects.requireNonNull($.configId, "expected parameter 'configId' to be non-null");
            $.securityPolicyId = Objects.requireNonNull($.securityPolicyId, "expected parameter 'securityPolicyId' to be non-null");
            return $;
        }
    }

}
