// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.AppSecMalwarePolicyActionArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.AppSecMalwarePolicyActionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * **Scopes**: Malware protection
 * 
 * Creates, modifies, or deletes the actions associated with a malware policy.
 * By default, malware policies take no action when triggered.
 * Note that you must set separate actions for requests that are scanned according to the specified malware policy and those that are unscanned.
 * 
 * ## Example Usage
 * 
 * Basic usage:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.akamai.AkamaiFunctions;
 * import com.pulumi.akamai.inputs.GetAppSecConfigurationArgs;
 * import com.pulumi.akamai.AppSecMalwarePolicy;
 * import com.pulumi.akamai.AppSecMalwarePolicyArgs;
 * import com.pulumi.akamai.AppSecMalwarePolicyAction;
 * import com.pulumi.akamai.AppSecMalwarePolicyActionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var configuration = AkamaiFunctions.getAppSecConfiguration(GetAppSecConfigurationArgs.builder()
 *             .name(&#34;Documentation&#34;)
 *             .build());
 * 
 *         var appsecMalwarePolicy = new AppSecMalwarePolicy(&#34;appsecMalwarePolicy&#34;, AppSecMalwarePolicyArgs.builder()        
 *             .configId(configuration.applyValue(getAppSecConfigurationResult -&gt; getAppSecConfigurationResult.configId()))
 *             .malwarePolicy(Files.readString(Paths.get(String.format(&#34;%s/malware_policy.json&#34;, path.module()))))
 *             .build());
 * 
 *         var appsecMalwarePolicyAction = new AppSecMalwarePolicyAction(&#34;appsecMalwarePolicyAction&#34;, AppSecMalwarePolicyActionArgs.builder()        
 *             .configId(configuration.applyValue(getAppSecConfigurationResult -&gt; getAppSecConfigurationResult.configId()))
 *             .securityPolicyId(&#34;gms1_134637&#34;)
 *             .malwarePolicyId(appsecMalwarePolicy.malwarePolicyId())
 *             .action(&#34;deny&#34;)
 *             .unscannedAction(&#34;deny&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction")
public class AppSecMalwarePolicyAction extends com.pulumi.resources.CustomResource {
    /**
     * . Action to be taken for requests scanned according to the given malware policy. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     * 
     */
    @Export(name="action", type=String.class, parameters={})
    private Output<String> action;

    /**
     * @return . Action to be taken for requests scanned according to the given malware policy. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * - **none**. Take no action.
     * 
     */
    public Output<String> action() {
        return this.action;
    }
    /**
     * . Unique identifier of the security configuration associated with the malware policy action being modified.
     * 
     */
    @Export(name="configId", type=Integer.class, parameters={})
    private Output<Integer> configId;

    /**
     * @return . Unique identifier of the security configuration associated with the malware policy action being modified.
     * 
     */
    public Output<Integer> configId() {
        return this.configId;
    }
    /**
     * . Unique identifier of the malware policy whose action is being modified.
     * 
     */
    @Export(name="malwarePolicyId", type=Integer.class, parameters={})
    private Output<Integer> malwarePolicyId;

    /**
     * @return . Unique identifier of the malware policy whose action is being modified.
     * 
     */
    public Output<Integer> malwarePolicyId() {
        return this.malwarePolicyId;
    }
    /**
     * . Unique identifier of the security policy associated with the malware policy whose action is being modified.
     * 
     */
    @Export(name="securityPolicyId", type=String.class, parameters={})
    private Output<String> securityPolicyId;

    /**
     * @return . Unique identifier of the security policy associated with the malware policy whose action is being modified.
     * 
     */
    public Output<String> securityPolicyId() {
        return this.securityPolicyId;
    }
    /**
     * . Action to be taken for requests not scanned according to the given malware policy. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * 
     */
    @Export(name="unscannedAction", type=String.class, parameters={})
    private Output<String> unscannedAction;

    /**
     * @return . Action to be taken for requests not scanned according to the given malware policy. Allowed actions are:
     * - **alert**. Record the event.
     * - **deny**. Block the request.
     * - **deny_custom{custom_deny_id}**. Take the action specified by the custom deny.
     * 
     */
    public Output<String> unscannedAction() {
        return this.unscannedAction;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppSecMalwarePolicyAction(String name) {
        this(name, AppSecMalwarePolicyActionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppSecMalwarePolicyAction(String name, AppSecMalwarePolicyActionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppSecMalwarePolicyAction(String name, AppSecMalwarePolicyActionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction", name, args == null ? AppSecMalwarePolicyActionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AppSecMalwarePolicyAction(String name, Output<String> id, @Nullable AppSecMalwarePolicyActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/appSecMalwarePolicyAction:AppSecMalwarePolicyAction", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppSecMalwarePolicyAction get(String name, Output<String> id, @Nullable AppSecMalwarePolicyActionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppSecMalwarePolicyAction(name, id, state, options);
    }
}
