// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Properties
{
    /// <summary>
    /// The `akamai.properties.EdgeHostName` provides the resource for configuring a secure edge hostname that determines how requests for your site, app, or content are mapped to Akamai edge servers.
    /// 
    /// An edge hostname is the CNAME target you use when directing your end user traffic to Akamai. In a typical DNS CNAME, your www.customer.com hostname corresponds to an edge hostname of www.customer.com.edgesuite.net.
    /// 
    /// ## Example Usage
    /// ### Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var terraform_demo = new Akamai.Properties.EdgeHostName("terraform-demo", new Akamai.Properties.EdgeHostNameArgs
    ///         {
    ///             Contract = "ctr_####",
    ///             EdgeHostname = "www.example.org.edgesuite.net",
    ///             Group = "grp_####",
    ///             Product = "prd_####",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class EdgeHostName : Pulumi.CustomResource
    {
        /// <summary>
        /// — (Optional) The certificate enrollment ID.
        /// </summary>
        [Output("certificate")]
        public Output<int?> Certificate { get; private set; } = null!;

        /// <summary>
        /// — (Required) The contract ID.
        /// </summary>
        [Output("contract")]
        public Output<string> Contract { get; private set; } = null!;

        /// <summary>
        /// — (Required) One or more edge hostnames (must be &lt;= to the number of public hostnames).
        /// </summary>
        [Output("edgeHostname")]
        public Output<string> EdgeHostname { get; private set; } = null!;

        /// <summary>
        /// — (Required) The group ID.
        /// </summary>
        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        [Output("ipBehavior")]
        public Output<string> IpBehavior { get; private set; } = null!;

        /// <summary>
        /// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        /// </summary>
        [Output("ipv4")]
        public Output<bool?> Ipv4 { get; private set; } = null!;

        /// <summary>
        /// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        /// </summary>
        [Output("ipv6")]
        public Output<bool?> Ipv6 { get; private set; } = null!;

        /// <summary>
        /// — (Required) The product ID.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeHostName resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeHostName(string name, EdgeHostNameArgs args, CustomResourceOptions? options = null)
            : base("akamai:properties/edgeHostName:EdgeHostName", name, args ?? new EdgeHostNameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeHostName(string name, Input<string> id, EdgeHostNameState? state = null, CustomResourceOptions? options = null)
            : base("akamai:properties/edgeHostName:EdgeHostName", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeHostName resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeHostName Get(string name, Input<string> id, EdgeHostNameState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeHostName(name, id, state, options);
        }
    }

    public sealed class EdgeHostNameArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// — (Optional) The certificate enrollment ID.
        /// </summary>
        [Input("certificate")]
        public Input<int>? Certificate { get; set; }

        /// <summary>
        /// — (Required) The contract ID.
        /// </summary>
        [Input("contract", required: true)]
        public Input<string> Contract { get; set; } = null!;

        /// <summary>
        /// — (Required) One or more edge hostnames (must be &lt;= to the number of public hostnames).
        /// </summary>
        [Input("edgeHostname", required: true)]
        public Input<string> EdgeHostname { get; set; } = null!;

        /// <summary>
        /// — (Required) The group ID.
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        /// <summary>
        /// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        /// </summary>
        [Input("ipv4")]
        public Input<bool>? Ipv4 { get; set; }

        /// <summary>
        /// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        /// </summary>
        [Input("ipv6")]
        public Input<bool>? Ipv6 { get; set; }

        /// <summary>
        /// — (Required) The product ID.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        public EdgeHostNameArgs()
        {
        }
    }

    public sealed class EdgeHostNameState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// — (Optional) The certificate enrollment ID.
        /// </summary>
        [Input("certificate")]
        public Input<int>? Certificate { get; set; }

        /// <summary>
        /// — (Required) The contract ID.
        /// </summary>
        [Input("contract")]
        public Input<string>? Contract { get; set; }

        /// <summary>
        /// — (Required) One or more edge hostnames (must be &lt;= to the number of public hostnames).
        /// </summary>
        [Input("edgeHostname")]
        public Input<string>? EdgeHostname { get; set; }

        /// <summary>
        /// — (Required) The group ID.
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("ipBehavior")]
        public Input<string>? IpBehavior { get; set; }

        /// <summary>
        /// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
        /// </summary>
        [Input("ipv4")]
        public Input<bool>? Ipv4 { get; set; }

        /// <summary>
        /// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
        /// </summary>
        [Input("ipv6")]
        public Input<bool>? Ipv6 { get; set; }

        /// <summary>
        /// — (Required) The product ID.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        public EdgeHostNameState()
        {
        }
    }
}
