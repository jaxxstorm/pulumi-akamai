// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai.Properties
{
    public static class GetPropertyRules
    {
        /// <summary>
        /// The `akamai.Properties.PropertyRules` data source allows you to configure a nested block of property rules, criteria, and behaviors. A propertyâ€™s main functionality is encapsulated in its set of rules and rules are composed of the matches and the behavior that applies under those matches.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPropertyRulesResult> InvokeAsync(GetPropertyRulesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPropertyRulesResult>("akamai:Properties/getPropertyRules:getPropertyRules", args ?? new GetPropertyRulesArgs(), options.WithVersion());
    }


    public sealed class GetPropertyRulesArgs : Pulumi.InvokeArgs
    {
        [Input("rules")]
        private List<Inputs.GetPropertyRulesRuleArgs>? _rules;
        public List<Inputs.GetPropertyRulesRuleArgs> Rules
        {
            get => _rules ?? (_rules = new List<Inputs.GetPropertyRulesRuleArgs>());
            set => _rules = value;
        }

        [Input("variables")]
        public string? Variables { get; set; }

        public GetPropertyRulesArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPropertyRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly ImmutableArray<Outputs.GetPropertyRulesRuleResult> Rules;
        public readonly string? Variables;

        [OutputConstructor]
        private GetPropertyRulesResult(
            string id,

            string json,

            ImmutableArray<Outputs.GetPropertyRulesRuleResult> rules,

            string? variables)
        {
            Id = id;
            Json = json;
            Rules = rules;
            Variables = variables;
        }
    }
}
