// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.AppSecEvalGroup` resource to create or modify an evaluation attack group's action, conditions and exceptions. When the conditions are met, the ruleâ€™s actions are ignored and not applied to that specific traffic.
    /// __BETA__ This is Adaptive Security Engine(ASE) related data resource. Please contact your akamai representative if you want to learn more
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.IO;
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
    ///         {
    ///             Name = @var.Security_configuration,
    ///         }));
    ///         var evalAttackGroup = new Akamai.AppSecEvalGroup("evalAttackGroup", new Akamai.AppSecEvalGroupArgs
    ///         {
    ///             ConfigId = configuration.Apply(configuration =&gt; configuration.ConfigId),
    ///             SecurityPolicyId = @var.Security_policy_id,
    ///             AttackGroup = @var.Attack_group,
    ///             AttackGroupAction = @var.Attack_group_action,
    ///             ConditionException = File.ReadAllText($"{path.Module}/condition_exception.json"),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AkamaiResourceType("akamai:index/appSecEvalGroup:AppSecEvalGroup")]
    public partial class AppSecEvalGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The eval attack group to use.
        /// </summary>
        [Output("attackGroup")]
        public Output<string> AttackGroup { get; private set; } = null!;

        /// <summary>
        /// The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.
        /// </summary>
        [Output("attackGroupAction")]
        public Output<string> AttackGroupAction { get; private set; } = null!;

        /// <summary>
        /// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).
        /// </summary>
        [Output("conditionException")]
        public Output<string?> ConditionException { get; private set; } = null!;

        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// The ID of the security policy to use.
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecEvalGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecEvalGroup(string name, AppSecEvalGroupArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecEvalGroup:AppSecEvalGroup", name, args ?? new AppSecEvalGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecEvalGroup(string name, Input<string> id, AppSecEvalGroupState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecEvalGroup:AppSecEvalGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecEvalGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecEvalGroup Get(string name, Input<string> id, AppSecEvalGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecEvalGroup(name, id, state, options);
        }
    }

    public sealed class AppSecEvalGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The eval attack group to use.
        /// </summary>
        [Input("attackGroup", required: true)]
        public Input<string> AttackGroup { get; set; } = null!;

        /// <summary>
        /// The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.
        /// </summary>
        [Input("attackGroupAction", required: true)]
        public Input<string> AttackGroupAction { get; set; } = null!;

        /// <summary>
        /// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).
        /// </summary>
        [Input("conditionException")]
        public Input<string>? ConditionException { get; set; }

        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// The ID of the security policy to use.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        public AppSecEvalGroupArgs()
        {
        }
    }

    public sealed class AppSecEvalGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The eval attack group to use.
        /// </summary>
        [Input("attackGroup")]
        public Input<string>? AttackGroup { get; set; }

        /// <summary>
        /// The action to be taken: `alert` to record the trigger of the event, `deny` to block the request, `deny_custom_{custom_deny_id}` to execute a custom deny action, or `none` to take no action.
        /// </summary>
        [Input("attackGroupAction")]
        public Input<string>? AttackGroupAction { get; set; }

        /// <summary>
        /// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putattackgroupconditionexception)).
        /// </summary>
        [Input("conditionException")]
        public Input<string>? ConditionException { get; set; }

        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// The ID of the security policy to use.
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        public AppSecEvalGroupState()
        {
        }
    }
}
