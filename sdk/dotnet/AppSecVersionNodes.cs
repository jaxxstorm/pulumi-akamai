// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.AppSecVersionNodes` resource to update the version notes for a configuration.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
    ///         {
    ///             Name = @var.Security_configuration,
    ///         }));
    ///         // USE CASE: user wants to update the version notes of the latest version
    ///         var versionNotesAppSecVersionNodes = new Akamai.AppSecVersionNodes("versionNotesAppSecVersionNodes", new Akamai.AppSecVersionNodesArgs
    ///         {
    ///             ConfigId = configuration.Apply(configuration =&gt; configuration.ConfigId),
    ///             Version = configuration.Apply(configuration =&gt; configuration.LatestVersion),
    ///             VersionNotes = @var.Version_notes,
    ///         });
    ///         this.VersionNotes = versionNotesAppSecVersionNodes.OutputText;
    ///     }
    /// 
    ///     [Output("versionNotes")]
    ///     public Output&lt;string&gt; VersionNotes { get; set; }
    /// }
    /// ```
    /// </summary>
    [AkamaiResourceType("akamai:index/appSecVersionNodes:AppSecVersionNodes")]
    public partial class AppSecVersionNodes : Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration ID to use.
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        /// <summary>
        /// A tabular display showing the updated version notes.
        /// </summary>
        [Output("outputText")]
        public Output<string> OutputText { get; private set; } = null!;

        /// <summary>
        /// The version number of the configuration to use.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;

        /// <summary>
        /// A string containing the version notes to be used.
        /// </summary>
        [Output("versionNotes")]
        public Output<string> VersionNotes { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecVersionNodes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecVersionNodes(string name, AppSecVersionNodesArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecVersionNodes:AppSecVersionNodes", name, args ?? new AppSecVersionNodesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecVersionNodes(string name, Input<string> id, AppSecVersionNodesState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecVersionNodes:AppSecVersionNodes", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecVersionNodes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecVersionNodes Get(string name, Input<string> id, AppSecVersionNodesState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecVersionNodes(name, id, state, options);
        }
    }

    public sealed class AppSecVersionNodesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration ID to use.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// The version number of the configuration to use.
        /// </summary>
        [Input("version", required: true)]
        public Input<int> Version { get; set; } = null!;

        /// <summary>
        /// A string containing the version notes to be used.
        /// </summary>
        [Input("versionNotes", required: true)]
        public Input<string> VersionNotes { get; set; } = null!;

        public AppSecVersionNodesArgs()
        {
        }
    }

    public sealed class AppSecVersionNodesState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration ID to use.
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        /// <summary>
        /// A tabular display showing the updated version notes.
        /// </summary>
        [Input("outputText")]
        public Input<string>? OutputText { get; set; }

        /// <summary>
        /// The version number of the configuration to use.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        /// <summary>
        /// A string containing the version notes to be used.
        /// </summary>
        [Input("versionNotes")]
        public Input<string>? VersionNotes { get; set; }

        public AppSecVersionNodesState()
        {
        }
    }
}
