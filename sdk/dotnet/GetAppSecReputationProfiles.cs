// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Akamai
{
    public static class GetAppSecReputationProfiles
    {
        /// <summary>
        /// Use the `akamai.getAppSecReputationProfiles` data source to retrieve details about all reputation profiles, or a specific reputation profiles.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = @var.Security_configuration,
        ///         }));
        ///         var reputationProfiles = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.OutputText);
        ///         this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.Json);
        ///         var reputationProfile = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             ReputationProfileId = @var.Reputation_profile_id,
        ///         })));
        ///         this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.Json);
        ///         this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.OutputText);
        ///     }
        /// 
        ///     [Output("reputationProfilesOutput")]
        ///     public Output&lt;string&gt; ReputationProfilesOutput { get; set; }
        ///     [Output("reputationProfilesJson")]
        ///     public Output&lt;string&gt; ReputationProfilesJson { get; set; }
        ///     [Output("reputationProfileJson")]
        ///     public Output&lt;string&gt; ReputationProfileJson { get; set; }
        ///     [Output("reputationProfileOutput")]
        ///     public Output&lt;string&gt; ReputationProfileOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAppSecReputationProfilesResult> InvokeAsync(GetAppSecReputationProfilesArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecReputationProfilesResult>("akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles", args ?? new GetAppSecReputationProfilesArgs(), options.WithVersion());

        /// <summary>
        /// Use the `akamai.getAppSecReputationProfiles` data source to retrieve details about all reputation profiles, or a specific reputation profiles.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = @var.Security_configuration,
        ///         }));
        ///         var reputationProfiles = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///         })));
        ///         this.ReputationProfilesOutput = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.OutputText);
        ///         this.ReputationProfilesJson = reputationProfiles.Apply(reputationProfiles =&gt; reputationProfiles.Json);
        ///         var reputationProfile = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecReputationProfiles.InvokeAsync(new Akamai.GetAppSecReputationProfilesArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             ReputationProfileId = @var.Reputation_profile_id,
        ///         })));
        ///         this.ReputationProfileJson = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.Json);
        ///         this.ReputationProfileOutput = reputationProfile.Apply(reputationProfile =&gt; reputationProfile.OutputText);
        ///     }
        /// 
        ///     [Output("reputationProfilesOutput")]
        ///     public Output&lt;string&gt; ReputationProfilesOutput { get; set; }
        ///     [Output("reputationProfilesJson")]
        ///     public Output&lt;string&gt; ReputationProfilesJson { get; set; }
        ///     [Output("reputationProfileJson")]
        ///     public Output&lt;string&gt; ReputationProfileJson { get; set; }
        ///     [Output("reputationProfileOutput")]
        ///     public Output&lt;string&gt; ReputationProfileOutput { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAppSecReputationProfilesResult> Invoke(GetAppSecReputationProfilesInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAppSecReputationProfilesResult>("akamai:index/getAppSecReputationProfiles:getAppSecReputationProfiles", args ?? new GetAppSecReputationProfilesInvokeArgs(), options.WithVersion());
    }


    public sealed class GetAppSecReputationProfilesArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// The ID of a given reputation profile. If not supplied, information about all reputation profiles is returned.
        /// </summary>
        [Input("reputationProfileId")]
        public int? ReputationProfileId { get; set; }

        public GetAppSecReputationProfilesArgs()
        {
        }
    }

    public sealed class GetAppSecReputationProfilesInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// The ID of a given reputation profile. If not supplied, information about all reputation profiles is returned.
        /// </summary>
        [Input("reputationProfileId")]
        public Input<int>? ReputationProfileId { get; set; }

        public GetAppSecReputationProfilesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecReputationProfilesResult
    {
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A JSON-formatted display of the details about the indicated reputation profile or profiles.
        /// </summary>
        public readonly string Json;
        /// <summary>
        /// A tabular display of the details about the indicated reputation profile or profiles.
        /// </summary>
        public readonly string OutputText;
        public readonly int? ReputationProfileId;

        [OutputConstructor]
        private GetAppSecReputationProfilesResult(
            int configId,

            string id,

            string json,

            string outputText,

            int? reputationProfileId)
        {
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
            ReputationProfileId = reputationProfileId;
        }
    }
}
