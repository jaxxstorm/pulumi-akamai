// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
    ///         {
    ///             Name = "Documentation",
    ///         }));
    ///         var ruleUpgrade = new Akamai.AppSecRuleUpgrade("ruleUpgrade", new Akamai.AppSecRuleUpgradeArgs
    ///         {
    ///             ConfigId = configuration.Apply(configuration =&gt; configuration.ConfigId),
    ///             SecurityPolicyId = "gms1_134637",
    ///         });
    ///         this.RuleUpgradeCurrentRuleset = ruleUpgrade.CurrentRuleset;
    ///         this.RuleUpgradeMode = ruleUpgrade.Mode;
    ///         this.RuleUpgradeEvalStatus = ruleUpgrade.EvalStatus;
    ///     }
    /// 
    ///     [Output("ruleUpgradeCurrentRuleset")]
    ///     public Output&lt;string&gt; RuleUpgradeCurrentRuleset { get; set; }
    ///     [Output("ruleUpgradeMode")]
    ///     public Output&lt;string&gt; RuleUpgradeMode { get; set; }
    ///     [Output("ruleUpgradeEvalStatus")]
    ///     public Output&lt;string&gt; RuleUpgradeEvalStatus { get; set; }
    /// }
    /// ```
    /// ## Output Options
    /// 
    /// The following options can be used to determine the information returned and how that returned information is formatted:
    /// 
    /// - `current_ruleset`. Versioning information for your current KRS rule set.
    /// - `mode`. Specifies the current upgrade mode type. Valid values are:
    ///   - **KRS**. Rulesets must be manually upgraded.
    ///   
    ///   - **AAG**. Rulesets are automatically upgraded by Akamai.
    ///   
    ///   - **ASE_MANUAL**. Adaptive Security Engine rulesets must be manually upgraded.
    ///   
    ///   - **ASE_AUTO**. Adaptive Security Engine rulesets are automatically updated by Akamai.
    /// 
    /// - `eval_status`. Returns **enabled** if an evaluation is currently in progress; otherwise returns **disabled**.
    /// </summary>
    [AkamaiResourceType("akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade")]
    public partial class AppSecRuleUpgrade : Pulumi.CustomResource
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the ruleset being upgraded.
        /// </summary>
        [Output("configId")]
        public Output<int> ConfigId { get; private set; } = null!;

        [Output("currentRuleset")]
        public Output<string> CurrentRuleset { get; private set; } = null!;

        [Output("evalStatus")]
        public Output<string> EvalStatus { get; private set; } = null!;

        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// . Unique identifier of the security policy associated with the ruleset being upgraded.
        /// - `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
        /// - **ASE_AUTO**. Akamai automatically updates your rulesets.
        /// - **ASE_MANUAL**. Manually updates your rulesets.
        /// </summary>
        [Output("securityPolicyId")]
        public Output<string> SecurityPolicyId { get; private set; } = null!;

        [Output("upgradeMode")]
        public Output<string?> UpgradeMode { get; private set; } = null!;


        /// <summary>
        /// Create a AppSecRuleUpgrade resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppSecRuleUpgrade(string name, AppSecRuleUpgradeArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade", name, args ?? new AppSecRuleUpgradeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppSecRuleUpgrade(string name, Input<string> id, AppSecRuleUpgradeState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/appSecRuleUpgrade:AppSecRuleUpgrade", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppSecRuleUpgrade resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppSecRuleUpgrade Get(string name, Input<string> id, AppSecRuleUpgradeState? state = null, CustomResourceOptions? options = null)
        {
            return new AppSecRuleUpgrade(name, id, state, options);
        }
    }

    public sealed class AppSecRuleUpgradeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the ruleset being upgraded.
        /// </summary>
        [Input("configId", required: true)]
        public Input<int> ConfigId { get; set; } = null!;

        /// <summary>
        /// . Unique identifier of the security policy associated with the ruleset being upgraded.
        /// - `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
        /// - **ASE_AUTO**. Akamai automatically updates your rulesets.
        /// - **ASE_MANUAL**. Manually updates your rulesets.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public Input<string> SecurityPolicyId { get; set; } = null!;

        [Input("upgradeMode")]
        public Input<string>? UpgradeMode { get; set; }

        public AppSecRuleUpgradeArgs()
        {
        }
    }

    public sealed class AppSecRuleUpgradeState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// . Unique identifier of the security configuration associated with the ruleset being upgraded.
        /// </summary>
        [Input("configId")]
        public Input<int>? ConfigId { get; set; }

        [Input("currentRuleset")]
        public Input<string>? CurrentRuleset { get; set; }

        [Input("evalStatus")]
        public Input<string>? EvalStatus { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// . Unique identifier of the security policy associated with the ruleset being upgraded.
        /// - `upgrade_mode`. (Optional). Modifies the upgrade type for organizations running the ASE beta. Allowed values are:
        /// - **ASE_AUTO**. Akamai automatically updates your rulesets.
        /// - **ASE_MANUAL**. Manually updates your rulesets.
        /// </summary>
        [Input("securityPolicyId")]
        public Input<string>? SecurityPolicyId { get; set; }

        [Input("upgradeMode")]
        public Input<string>? UpgradeMode { get; set; }

        public AppSecRuleUpgradeState()
        {
        }
    }
}
