// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    public static class GetAppSecEvalGroups
    {
        /// <summary>
        /// Use the `akamai.getAppSecEvalGroups` data source to list the action and condition-exception information for an evaluation attack
        /// group or groups.
        /// __BETA__ This is Adaptive Security Engine(ASE) related data source. Please contact your akamai representative if you want to learn more
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Basic usage:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Akamai = Pulumi.Akamai;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var configuration = Output.Create(Akamai.GetAppSecConfiguration.InvokeAsync(new Akamai.GetAppSecConfigurationArgs
        ///         {
        ///             Name = @var.Security_configuration,
        ///         }));
        ///         var evalAttackGroup = configuration.Apply(configuration =&gt; Output.Create(Akamai.GetAppSecEvalGroups.InvokeAsync(new Akamai.GetAppSecEvalGroupsArgs
        ///         {
        ///             ConfigId = configuration.ConfigId,
        ///             SecurityPolicyId = @var.Security_policy_id,
        ///             AttackGroup = @var.Attack_group,
        ///         })));
        ///         this.EvalAttackGroupAction = evalAttackGroup.Apply(evalAttackGroup =&gt; evalAttackGroup.AttackGroupAction);
        ///         this.ConditionException = evalAttackGroup.Apply(evalAttackGroup =&gt; evalAttackGroup.ConditionException);
        ///         this.Json = evalAttackGroup.Apply(evalAttackGroup =&gt; evalAttackGroup.Json);
        ///         this.OutputText = evalAttackGroup.Apply(evalAttackGroup =&gt; evalAttackGroup.OutputText);
        ///     }
        /// 
        ///     [Output("evalAttackGroupAction")]
        ///     public Output&lt;string&gt; EvalAttackGroupAction { get; set; }
        ///     [Output("conditionException")]
        ///     public Output&lt;string&gt; ConditionException { get; set; }
        ///     [Output("json")]
        ///     public Output&lt;string&gt; Json { get; set; }
        ///     [Output("outputText")]
        ///     public Output&lt;string&gt; OutputText { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAppSecEvalGroupsResult> InvokeAsync(GetAppSecEvalGroupsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAppSecEvalGroupsResult>("akamai:index/getAppSecEvalGroups:getAppSecEvalGroups", args ?? new GetAppSecEvalGroupsArgs(), options.WithVersion());
    }


    public sealed class GetAppSecEvalGroupsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the eval attack group to use.
        /// </summary>
        [Input("attackGroup")]
        public string? AttackGroup { get; set; }

        /// <summary>
        /// The ID of the security configuration to use.
        /// </summary>
        [Input("configId", required: true)]
        public int ConfigId { get; set; }

        /// <summary>
        /// The ID of the security policy to use.
        /// </summary>
        [Input("securityPolicyId", required: true)]
        public string SecurityPolicyId { get; set; } = null!;

        public GetAppSecEvalGroupsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAppSecEvalGroupsResult
    {
        public readonly string? AttackGroup;
        /// <summary>
        /// The eval attack group's action, either `alert`, `d
        /// </summary>
        public readonly string AttackGroupAction;
        /// <summary>
        /// The eval attack group's conditions and exceptions.
        /// </summary>
        public readonly string ConditionException;
        public readonly int ConfigId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A JSON-formatted list of the action and condition-exception information for the specified eval attack
        /// group. This output is only generated if an attack group is specified.
        /// </summary>
        public readonly string Json;
        /// <summary>
        /// A tabular display showing, for the specified eval attack group or groups, the eval attack group's action and
        /// boolean values indicating whether conditions and exceptions are present.
        /// </summary>
        public readonly string OutputText;
        public readonly string SecurityPolicyId;

        [OutputConstructor]
        private GetAppSecEvalGroupsResult(
            string? attackGroup,

            string attackGroupAction,

            string conditionException,

            int configId,

            string id,

            string json,

            string outputText,

            string securityPolicyId)
        {
            AttackGroup = attackGroup;
            AttackGroupAction = attackGroupAction;
            ConditionException = conditionException;
            ConfigId = configId;
            Id = id;
            Json = json;
            OutputText = outputText;
            SecurityPolicyId = securityPolicyId;
        }
    }
}
