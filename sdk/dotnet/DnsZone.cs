// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Akamai
{
    /// <summary>
    /// Use the `akamai.DnsZone` resource to configure a DNS zone that integrates with your existing DNS infrastructure.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Akamai = Pulumi.Akamai;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var demozone = new Akamai.DnsZone("demozone", new Akamai.DnsZoneArgs
    ///         {
    ///             Comment = "some comment",
    ///             Contract = "ctr_1-AB123",
    ///             Group = "100",
    ///             Masters = 
    ///             {
    ///                 "1.2.3.4",
    ///                 "1.2.3.5",
    ///             },
    ///             SignAndServe = false,
    ///             Type = "secondary",
    ///             Zone = "example.com",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ## Argument reference
    /// 
    /// This resource supports these arguments:
    /// 
    /// * `comment` - (Required) A descriptive comment.
    /// * `contract` - (Required) The contract ID.
    /// * `group` - (Required) The currently selected group ID.
    /// * `zone` - (Required) The domain zone, encapsulating any nested subdomains.
    /// * `type` - (Required) Whether the zone is `primary`, `secondary`, or `alias`.
    /// * `masters` - (Required for `secondary` zones) The names or IP addresses of the nameservers that the zone data should be retrieved from.
    /// * `target` - (Required for `alias` zones) The name of the zone whose configuration this zone will copy.
    /// * `sign_and_serve` - (Optional) Whether DNSSEC Sign and Serve is enabled.
    /// * `sign_and_serve_algorithm` - (Optional) The algorithm used by Sign and Serve.
    /// * `tsig_key` - (Optional) The TSIG Key used in secure zone transfers. If used, requires these arguments:
    ///     * `name` - The key name.
    ///     * `algorithm` - The hashing algorithm.
    ///     * `secret` - String known between transfer endpoints.
    /// * `end_customer_id` - (Optional) A free form identifier for the zone.
    /// </summary>
    [AkamaiResourceType("akamai:index/dnsZone:DnsZone")]
    public partial class DnsZone : Pulumi.CustomResource
    {
        [Output("activationState")]
        public Output<string> ActivationState { get; private set; } = null!;

        [Output("aliasCount")]
        public Output<int> AliasCount { get; private set; } = null!;

        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        [Output("contract")]
        public Output<string> Contract { get; private set; } = null!;

        [Output("endCustomerId")]
        public Output<string?> EndCustomerId { get; private set; } = null!;

        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        [Output("masters")]
        public Output<ImmutableArray<string>> Masters { get; private set; } = null!;

        [Output("signAndServe")]
        public Output<bool?> SignAndServe { get; private set; } = null!;

        [Output("signAndServeAlgorithm")]
        public Output<string?> SignAndServeAlgorithm { get; private set; } = null!;

        [Output("target")]
        public Output<string?> Target { get; private set; } = null!;

        [Output("tsigKey")]
        public Output<Outputs.DnsZoneTsigKey?> TsigKey { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;

        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a DnsZone resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DnsZone(string name, DnsZoneArgs args, CustomResourceOptions? options = null)
            : base("akamai:index/dnsZone:DnsZone", name, args ?? new DnsZoneArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DnsZone(string name, Input<string> id, DnsZoneState? state = null, CustomResourceOptions? options = null)
            : base("akamai:index/dnsZone:DnsZone", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "akamai:edgedns/dnsZone:DnsZone"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DnsZone resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DnsZone Get(string name, Input<string> id, DnsZoneState? state = null, CustomResourceOptions? options = null)
        {
            return new DnsZone(name, id, state, options);
        }
    }

    public sealed class DnsZoneArgs : Pulumi.ResourceArgs
    {
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("contract", required: true)]
        public Input<string> Contract { get; set; } = null!;

        [Input("endCustomerId")]
        public Input<string>? EndCustomerId { get; set; }

        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        [Input("masters")]
        private InputList<string>? _masters;
        public InputList<string> Masters
        {
            get => _masters ?? (_masters = new InputList<string>());
            set => _masters = value;
        }

        [Input("signAndServe")]
        public Input<bool>? SignAndServe { get; set; }

        [Input("signAndServeAlgorithm")]
        public Input<string>? SignAndServeAlgorithm { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("tsigKey")]
        public Input<Inputs.DnsZoneTsigKeyArgs>? TsigKey { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public DnsZoneArgs()
        {
        }
    }

    public sealed class DnsZoneState : Pulumi.ResourceArgs
    {
        [Input("activationState")]
        public Input<string>? ActivationState { get; set; }

        [Input("aliasCount")]
        public Input<int>? AliasCount { get; set; }

        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("contract")]
        public Input<string>? Contract { get; set; }

        [Input("endCustomerId")]
        public Input<string>? EndCustomerId { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("masters")]
        private InputList<string>? _masters;
        public InputList<string> Masters
        {
            get => _masters ?? (_masters = new InputList<string>());
            set => _masters = value;
        }

        [Input("signAndServe")]
        public Input<bool>? SignAndServe { get; set; }

        [Input("signAndServeAlgorithm")]
        public Input<string>? SignAndServeAlgorithm { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        [Input("tsigKey")]
        public Input<Inputs.DnsZoneTsigKeyGetArgs>? TsigKey { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public DnsZoneState()
        {
        }
    }
}
