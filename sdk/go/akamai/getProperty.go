// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `Property` data source to query and list the property ID and rule tree based on the property name.
//
// ## Example Usage
//
// This example returns the property ID and rule tree based on the property name and optional version argument:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := 1
// 		example, err := akamai.LookupProperty(ctx, &akamai.LookupPropertyArgs{
// 			Name:    "terraform-demo",
// 			Version: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("myPropertyID", example)
// 		return nil
// 	})
// }
// ```
// ## Argument reference
//
// This data source supports these arguments:
//
// * `name` - (Required) The property name.
// * `version` - (Optional) The version of the property whose ID you want to list.
//
// ## Attributes reference
//
// This data source returns these attributes:
//
// * `property_ID` - A property's unique identifier, including the `prp_` prefix.
// * `rules` - A JSON-encoded rule tree for a given property.
func LookupProperty(ctx *pulumi.Context, args *LookupPropertyArgs, opts ...pulumi.InvokeOption) (*LookupPropertyResult, error) {
	var rv LookupPropertyResult
	err := ctx.Invoke("akamai:index/getProperty:getProperty", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProperty.
type LookupPropertyArgs struct {
	Name    string `pulumi:"name"`
	Version *int   `pulumi:"version"`
}

// A collection of values returned by getProperty.
type LookupPropertyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	Name    string `pulumi:"name"`
	Rules   string `pulumi:"rules"`
	Version *int   `pulumi:"version"`
}
