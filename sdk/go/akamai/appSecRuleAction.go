// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `AppSecRuleAction` resource to update what action a rule takes when it is triggered.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecRuleAction(ctx, "ruleAction", &akamai.AppSecRuleActionArgs{
// 			ConfigId:         pulumi.Int(configuration.ConfigId),
// 			Version:          pulumi.Int(configuration.LatestVersion),
// 			SecurityPolicyId: pulumi.Any(_var.Security_policy_id),
// 			RuleId:           pulumi.Any(_var.Rule_id),
// 			RuleAction:       pulumi.Any(_var.Action),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecRuleAction struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId   pulumi.IntOutput    `pulumi:"configId"`
	RuleAction pulumi.StringOutput `pulumi:"ruleAction"`
	// The ID of the rule to use.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecRuleAction registers a new resource with the given unique name, arguments, and options.
func NewAppSecRuleAction(ctx *pulumi.Context,
	name string, args *AppSecRuleActionArgs, opts ...pulumi.ResourceOption) (*AppSecRuleAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.RuleAction == nil {
		return nil, errors.New("invalid value for required argument 'RuleAction'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource AppSecRuleAction
	err := ctx.RegisterResource("akamai:index/appSecRuleAction:AppSecRuleAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecRuleAction gets an existing AppSecRuleAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecRuleAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecRuleActionState, opts ...pulumi.ResourceOption) (*AppSecRuleAction, error) {
	var resource AppSecRuleAction
	err := ctx.ReadResource("akamai:index/appSecRuleAction:AppSecRuleAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecRuleAction resources.
type appSecRuleActionState struct {
	// The ID of the security configuration to use.
	ConfigId   *int    `pulumi:"configId"`
	RuleAction *string `pulumi:"ruleAction"`
	// The ID of the rule to use.
	RuleId *int `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version *int `pulumi:"version"`
}

type AppSecRuleActionState struct {
	// The ID of the security configuration to use.
	ConfigId   pulumi.IntPtrInput
	RuleAction pulumi.StringPtrInput
	// The ID of the rule to use.
	RuleId pulumi.IntPtrInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringPtrInput
	// The version number of the security configuration to use.
	Version pulumi.IntPtrInput
}

func (AppSecRuleActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecRuleActionState)(nil)).Elem()
}

type appSecRuleActionArgs struct {
	// The ID of the security configuration to use.
	ConfigId   int    `pulumi:"configId"`
	RuleAction string `pulumi:"ruleAction"`
	// The ID of the rule to use.
	RuleId int `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a AppSecRuleAction resource.
type AppSecRuleActionArgs struct {
	// The ID of the security configuration to use.
	ConfigId   pulumi.IntInput
	RuleAction pulumi.StringInput
	// The ID of the rule to use.
	RuleId pulumi.IntInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringInput
	// The version number of the security configuration to use.
	Version pulumi.IntInput
}

func (AppSecRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecRuleActionArgs)(nil)).Elem()
}

type AppSecRuleActionInput interface {
	pulumi.Input

	ToAppSecRuleActionOutput() AppSecRuleActionOutput
	ToAppSecRuleActionOutputWithContext(ctx context.Context) AppSecRuleActionOutput
}

func (*AppSecRuleAction) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecRuleAction)(nil))
}

func (i *AppSecRuleAction) ToAppSecRuleActionOutput() AppSecRuleActionOutput {
	return i.ToAppSecRuleActionOutputWithContext(context.Background())
}

func (i *AppSecRuleAction) ToAppSecRuleActionOutputWithContext(ctx context.Context) AppSecRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRuleActionOutput)
}

func (i *AppSecRuleAction) ToAppSecRuleActionPtrOutput() AppSecRuleActionPtrOutput {
	return i.ToAppSecRuleActionPtrOutputWithContext(context.Background())
}

func (i *AppSecRuleAction) ToAppSecRuleActionPtrOutputWithContext(ctx context.Context) AppSecRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRuleActionPtrOutput)
}

type AppSecRuleActionPtrInput interface {
	pulumi.Input

	ToAppSecRuleActionPtrOutput() AppSecRuleActionPtrOutput
	ToAppSecRuleActionPtrOutputWithContext(ctx context.Context) AppSecRuleActionPtrOutput
}

type appSecRuleActionPtrType AppSecRuleActionArgs

func (*appSecRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecRuleAction)(nil))
}

func (i *appSecRuleActionPtrType) ToAppSecRuleActionPtrOutput() AppSecRuleActionPtrOutput {
	return i.ToAppSecRuleActionPtrOutputWithContext(context.Background())
}

func (i *appSecRuleActionPtrType) ToAppSecRuleActionPtrOutputWithContext(ctx context.Context) AppSecRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRuleActionPtrOutput)
}

// AppSecRuleActionArrayInput is an input type that accepts AppSecRuleActionArray and AppSecRuleActionArrayOutput values.
// You can construct a concrete instance of `AppSecRuleActionArrayInput` via:
//
//          AppSecRuleActionArray{ AppSecRuleActionArgs{...} }
type AppSecRuleActionArrayInput interface {
	pulumi.Input

	ToAppSecRuleActionArrayOutput() AppSecRuleActionArrayOutput
	ToAppSecRuleActionArrayOutputWithContext(context.Context) AppSecRuleActionArrayOutput
}

type AppSecRuleActionArray []AppSecRuleActionInput

func (AppSecRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecRuleAction)(nil))
}

func (i AppSecRuleActionArray) ToAppSecRuleActionArrayOutput() AppSecRuleActionArrayOutput {
	return i.ToAppSecRuleActionArrayOutputWithContext(context.Background())
}

func (i AppSecRuleActionArray) ToAppSecRuleActionArrayOutputWithContext(ctx context.Context) AppSecRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRuleActionArrayOutput)
}

// AppSecRuleActionMapInput is an input type that accepts AppSecRuleActionMap and AppSecRuleActionMapOutput values.
// You can construct a concrete instance of `AppSecRuleActionMapInput` via:
//
//          AppSecRuleActionMap{ "key": AppSecRuleActionArgs{...} }
type AppSecRuleActionMapInput interface {
	pulumi.Input

	ToAppSecRuleActionMapOutput() AppSecRuleActionMapOutput
	ToAppSecRuleActionMapOutputWithContext(context.Context) AppSecRuleActionMapOutput
}

type AppSecRuleActionMap map[string]AppSecRuleActionInput

func (AppSecRuleActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecRuleAction)(nil))
}

func (i AppSecRuleActionMap) ToAppSecRuleActionMapOutput() AppSecRuleActionMapOutput {
	return i.ToAppSecRuleActionMapOutputWithContext(context.Background())
}

func (i AppSecRuleActionMap) ToAppSecRuleActionMapOutputWithContext(ctx context.Context) AppSecRuleActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecRuleActionMapOutput)
}

type AppSecRuleActionOutput struct {
	*pulumi.OutputState
}

func (AppSecRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecRuleAction)(nil))
}

func (o AppSecRuleActionOutput) ToAppSecRuleActionOutput() AppSecRuleActionOutput {
	return o
}

func (o AppSecRuleActionOutput) ToAppSecRuleActionOutputWithContext(ctx context.Context) AppSecRuleActionOutput {
	return o
}

func (o AppSecRuleActionOutput) ToAppSecRuleActionPtrOutput() AppSecRuleActionPtrOutput {
	return o.ToAppSecRuleActionPtrOutputWithContext(context.Background())
}

func (o AppSecRuleActionOutput) ToAppSecRuleActionPtrOutputWithContext(ctx context.Context) AppSecRuleActionPtrOutput {
	return o.ApplyT(func(v AppSecRuleAction) *AppSecRuleAction {
		return &v
	}).(AppSecRuleActionPtrOutput)
}

type AppSecRuleActionPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecRuleAction)(nil))
}

func (o AppSecRuleActionPtrOutput) ToAppSecRuleActionPtrOutput() AppSecRuleActionPtrOutput {
	return o
}

func (o AppSecRuleActionPtrOutput) ToAppSecRuleActionPtrOutputWithContext(ctx context.Context) AppSecRuleActionPtrOutput {
	return o
}

type AppSecRuleActionArrayOutput struct{ *pulumi.OutputState }

func (AppSecRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecRuleAction)(nil))
}

func (o AppSecRuleActionArrayOutput) ToAppSecRuleActionArrayOutput() AppSecRuleActionArrayOutput {
	return o
}

func (o AppSecRuleActionArrayOutput) ToAppSecRuleActionArrayOutputWithContext(ctx context.Context) AppSecRuleActionArrayOutput {
	return o
}

func (o AppSecRuleActionArrayOutput) Index(i pulumi.IntInput) AppSecRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecRuleAction {
		return vs[0].([]AppSecRuleAction)[vs[1].(int)]
	}).(AppSecRuleActionOutput)
}

type AppSecRuleActionMapOutput struct{ *pulumi.OutputState }

func (AppSecRuleActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecRuleAction)(nil))
}

func (o AppSecRuleActionMapOutput) ToAppSecRuleActionMapOutput() AppSecRuleActionMapOutput {
	return o
}

func (o AppSecRuleActionMapOutput) ToAppSecRuleActionMapOutputWithContext(ctx context.Context) AppSecRuleActionMapOutput {
	return o
}

func (o AppSecRuleActionMapOutput) MapIndex(k pulumi.StringInput) AppSecRuleActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecRuleAction {
		return vs[0].(map[string]AppSecRuleAction)[vs[1].(string)]
	}).(AppSecRuleActionOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecRuleActionOutput{})
	pulumi.RegisterOutputType(AppSecRuleActionPtrOutput{})
	pulumi.RegisterOutputType(AppSecRuleActionArrayOutput{})
	pulumi.RegisterOutputType(AppSecRuleActionMapOutput{})
}
