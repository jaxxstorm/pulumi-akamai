// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use `AppSecThreatIntel` resource to update threat intelligence setting for a policy. Only applies to ASE Manual rulesets. Allowed values are on and off
// __BETA__ This is Adaptive Security Engine(ASE) related data resource. Please contact your akamai representative if you want to learn more
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecThreatIntel(ctx, "threatIntel", &akamai.AppSecThreatIntelArgs{
// 			ConfigId:         pulumi.Int(configuration.ConfigId),
// 			SecurityPolicyId: pulumi.Any(_var.Security_policy_id),
// 			ThreatIntel:      pulumi.Any(_var.Threat_intel),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecThreatIntel struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// threat_intel - "on" or "off"
	ThreatIntel pulumi.StringOutput `pulumi:"threatIntel"`
}

// NewAppSecThreatIntel registers a new resource with the given unique name, arguments, and options.
func NewAppSecThreatIntel(ctx *pulumi.Context,
	name string, args *AppSecThreatIntelArgs, opts ...pulumi.ResourceOption) (*AppSecThreatIntel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.ThreatIntel == nil {
		return nil, errors.New("invalid value for required argument 'ThreatIntel'")
	}
	var resource AppSecThreatIntel
	err := ctx.RegisterResource("akamai:index/appSecThreatIntel:AppSecThreatIntel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecThreatIntel gets an existing AppSecThreatIntel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecThreatIntel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecThreatIntelState, opts ...pulumi.ResourceOption) (*AppSecThreatIntel, error) {
	var resource AppSecThreatIntel
	err := ctx.ReadResource("akamai:index/appSecThreatIntel:AppSecThreatIntel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecThreatIntel resources.
type appSecThreatIntelState struct {
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The ID of the security policy to use.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// threat_intel - "on" or "off"
	ThreatIntel *string `pulumi:"threatIntel"`
}

type AppSecThreatIntelState struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringPtrInput
	// threat_intel - "on" or "off"
	ThreatIntel pulumi.StringPtrInput
}

func (AppSecThreatIntelState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecThreatIntelState)(nil)).Elem()
}

type appSecThreatIntelArgs struct {
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The ID of the security policy to use.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// threat_intel - "on" or "off"
	ThreatIntel string `pulumi:"threatIntel"`
}

// The set of arguments for constructing a AppSecThreatIntel resource.
type AppSecThreatIntelArgs struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringInput
	// threat_intel - "on" or "off"
	ThreatIntel pulumi.StringInput
}

func (AppSecThreatIntelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecThreatIntelArgs)(nil)).Elem()
}

type AppSecThreatIntelInput interface {
	pulumi.Input

	ToAppSecThreatIntelOutput() AppSecThreatIntelOutput
	ToAppSecThreatIntelOutputWithContext(ctx context.Context) AppSecThreatIntelOutput
}

func (*AppSecThreatIntel) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecThreatIntel)(nil))
}

func (i *AppSecThreatIntel) ToAppSecThreatIntelOutput() AppSecThreatIntelOutput {
	return i.ToAppSecThreatIntelOutputWithContext(context.Background())
}

func (i *AppSecThreatIntel) ToAppSecThreatIntelOutputWithContext(ctx context.Context) AppSecThreatIntelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecThreatIntelOutput)
}

func (i *AppSecThreatIntel) ToAppSecThreatIntelPtrOutput() AppSecThreatIntelPtrOutput {
	return i.ToAppSecThreatIntelPtrOutputWithContext(context.Background())
}

func (i *AppSecThreatIntel) ToAppSecThreatIntelPtrOutputWithContext(ctx context.Context) AppSecThreatIntelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecThreatIntelPtrOutput)
}

type AppSecThreatIntelPtrInput interface {
	pulumi.Input

	ToAppSecThreatIntelPtrOutput() AppSecThreatIntelPtrOutput
	ToAppSecThreatIntelPtrOutputWithContext(ctx context.Context) AppSecThreatIntelPtrOutput
}

type appSecThreatIntelPtrType AppSecThreatIntelArgs

func (*appSecThreatIntelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecThreatIntel)(nil))
}

func (i *appSecThreatIntelPtrType) ToAppSecThreatIntelPtrOutput() AppSecThreatIntelPtrOutput {
	return i.ToAppSecThreatIntelPtrOutputWithContext(context.Background())
}

func (i *appSecThreatIntelPtrType) ToAppSecThreatIntelPtrOutputWithContext(ctx context.Context) AppSecThreatIntelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecThreatIntelPtrOutput)
}

// AppSecThreatIntelArrayInput is an input type that accepts AppSecThreatIntelArray and AppSecThreatIntelArrayOutput values.
// You can construct a concrete instance of `AppSecThreatIntelArrayInput` via:
//
//          AppSecThreatIntelArray{ AppSecThreatIntelArgs{...} }
type AppSecThreatIntelArrayInput interface {
	pulumi.Input

	ToAppSecThreatIntelArrayOutput() AppSecThreatIntelArrayOutput
	ToAppSecThreatIntelArrayOutputWithContext(context.Context) AppSecThreatIntelArrayOutput
}

type AppSecThreatIntelArray []AppSecThreatIntelInput

func (AppSecThreatIntelArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecThreatIntel)(nil))
}

func (i AppSecThreatIntelArray) ToAppSecThreatIntelArrayOutput() AppSecThreatIntelArrayOutput {
	return i.ToAppSecThreatIntelArrayOutputWithContext(context.Background())
}

func (i AppSecThreatIntelArray) ToAppSecThreatIntelArrayOutputWithContext(ctx context.Context) AppSecThreatIntelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecThreatIntelArrayOutput)
}

// AppSecThreatIntelMapInput is an input type that accepts AppSecThreatIntelMap and AppSecThreatIntelMapOutput values.
// You can construct a concrete instance of `AppSecThreatIntelMapInput` via:
//
//          AppSecThreatIntelMap{ "key": AppSecThreatIntelArgs{...} }
type AppSecThreatIntelMapInput interface {
	pulumi.Input

	ToAppSecThreatIntelMapOutput() AppSecThreatIntelMapOutput
	ToAppSecThreatIntelMapOutputWithContext(context.Context) AppSecThreatIntelMapOutput
}

type AppSecThreatIntelMap map[string]AppSecThreatIntelInput

func (AppSecThreatIntelMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecThreatIntel)(nil))
}

func (i AppSecThreatIntelMap) ToAppSecThreatIntelMapOutput() AppSecThreatIntelMapOutput {
	return i.ToAppSecThreatIntelMapOutputWithContext(context.Background())
}

func (i AppSecThreatIntelMap) ToAppSecThreatIntelMapOutputWithContext(ctx context.Context) AppSecThreatIntelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecThreatIntelMapOutput)
}

type AppSecThreatIntelOutput struct {
	*pulumi.OutputState
}

func (AppSecThreatIntelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecThreatIntel)(nil))
}

func (o AppSecThreatIntelOutput) ToAppSecThreatIntelOutput() AppSecThreatIntelOutput {
	return o
}

func (o AppSecThreatIntelOutput) ToAppSecThreatIntelOutputWithContext(ctx context.Context) AppSecThreatIntelOutput {
	return o
}

func (o AppSecThreatIntelOutput) ToAppSecThreatIntelPtrOutput() AppSecThreatIntelPtrOutput {
	return o.ToAppSecThreatIntelPtrOutputWithContext(context.Background())
}

func (o AppSecThreatIntelOutput) ToAppSecThreatIntelPtrOutputWithContext(ctx context.Context) AppSecThreatIntelPtrOutput {
	return o.ApplyT(func(v AppSecThreatIntel) *AppSecThreatIntel {
		return &v
	}).(AppSecThreatIntelPtrOutput)
}

type AppSecThreatIntelPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecThreatIntelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecThreatIntel)(nil))
}

func (o AppSecThreatIntelPtrOutput) ToAppSecThreatIntelPtrOutput() AppSecThreatIntelPtrOutput {
	return o
}

func (o AppSecThreatIntelPtrOutput) ToAppSecThreatIntelPtrOutputWithContext(ctx context.Context) AppSecThreatIntelPtrOutput {
	return o
}

type AppSecThreatIntelArrayOutput struct{ *pulumi.OutputState }

func (AppSecThreatIntelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecThreatIntel)(nil))
}

func (o AppSecThreatIntelArrayOutput) ToAppSecThreatIntelArrayOutput() AppSecThreatIntelArrayOutput {
	return o
}

func (o AppSecThreatIntelArrayOutput) ToAppSecThreatIntelArrayOutputWithContext(ctx context.Context) AppSecThreatIntelArrayOutput {
	return o
}

func (o AppSecThreatIntelArrayOutput) Index(i pulumi.IntInput) AppSecThreatIntelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecThreatIntel {
		return vs[0].([]AppSecThreatIntel)[vs[1].(int)]
	}).(AppSecThreatIntelOutput)
}

type AppSecThreatIntelMapOutput struct{ *pulumi.OutputState }

func (AppSecThreatIntelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecThreatIntel)(nil))
}

func (o AppSecThreatIntelMapOutput) ToAppSecThreatIntelMapOutput() AppSecThreatIntelMapOutput {
	return o
}

func (o AppSecThreatIntelMapOutput) ToAppSecThreatIntelMapOutputWithContext(ctx context.Context) AppSecThreatIntelMapOutput {
	return o
}

func (o AppSecThreatIntelMapOutput) MapIndex(k pulumi.StringInput) AppSecThreatIntelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecThreatIntel {
		return vs[0].(map[string]AppSecThreatIntel)[vs[1].(string)]
	}).(AppSecThreatIntelOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecThreatIntelOutput{})
	pulumi.RegisterOutputType(AppSecThreatIntelPtrOutput{})
	pulumi.RegisterOutputType(AppSecThreatIntelArrayOutput{})
	pulumi.RegisterOutputType(AppSecThreatIntelMapOutput{})
}
