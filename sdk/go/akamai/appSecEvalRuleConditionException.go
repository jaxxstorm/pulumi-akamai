// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `AppSecEvalRuleConditionException` resource to create or modify an eval rule's conditions and exceptions.
type AppSecEvalRuleConditionException struct {
	pulumi.CustomResourceState

	// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))
	ConditionException pulumi.StringOutput `pulumi:"conditionException"`
	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The ID of the eval rule to use.
	RuleId pulumi.IntOutput `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecEvalRuleConditionException registers a new resource with the given unique name, arguments, and options.
func NewAppSecEvalRuleConditionException(ctx *pulumi.Context,
	name string, args *AppSecEvalRuleConditionExceptionArgs, opts ...pulumi.ResourceOption) (*AppSecEvalRuleConditionException, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConditionException == nil {
		return nil, errors.New("invalid value for required argument 'ConditionException'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.RuleId == nil {
		return nil, errors.New("invalid value for required argument 'RuleId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource AppSecEvalRuleConditionException
	err := ctx.RegisterResource("akamai:index/appSecEvalRuleConditionException:AppSecEvalRuleConditionException", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecEvalRuleConditionException gets an existing AppSecEvalRuleConditionException resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecEvalRuleConditionException(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecEvalRuleConditionExceptionState, opts ...pulumi.ResourceOption) (*AppSecEvalRuleConditionException, error) {
	var resource AppSecEvalRuleConditionException
	err := ctx.ReadResource("akamai:index/appSecEvalRuleConditionException:AppSecEvalRuleConditionException", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecEvalRuleConditionException resources.
type appSecEvalRuleConditionExceptionState struct {
	// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))
	ConditionException *string `pulumi:"conditionException"`
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The ID of the eval rule to use.
	RuleId *int `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version *int `pulumi:"version"`
}

type AppSecEvalRuleConditionExceptionState struct {
	// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))
	ConditionException pulumi.StringPtrInput
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// The ID of the eval rule to use.
	RuleId pulumi.IntPtrInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringPtrInput
	// The version number of the security configuration to use.
	Version pulumi.IntPtrInput
}

func (AppSecEvalRuleConditionExceptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleConditionExceptionState)(nil)).Elem()
}

type appSecEvalRuleConditionExceptionArgs struct {
	// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))
	ConditionException string `pulumi:"conditionException"`
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The ID of the eval rule to use.
	RuleId int `pulumi:"ruleId"`
	// The ID of the security policy to use.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a AppSecEvalRuleConditionException resource.
type AppSecEvalRuleConditionExceptionArgs struct {
	// The name of a file containing a JSON-formatted description of the conditions and exceptions to use ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putevalconditionsexceptions))
	ConditionException pulumi.StringInput
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// The ID of the eval rule to use.
	RuleId pulumi.IntInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringInput
	// The version number of the security configuration to use.
	Version pulumi.IntInput
}

func (AppSecEvalRuleConditionExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalRuleConditionExceptionArgs)(nil)).Elem()
}

type AppSecEvalRuleConditionExceptionInput interface {
	pulumi.Input

	ToAppSecEvalRuleConditionExceptionOutput() AppSecEvalRuleConditionExceptionOutput
	ToAppSecEvalRuleConditionExceptionOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionOutput
}

func (*AppSecEvalRuleConditionException) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalRuleConditionException)(nil))
}

func (i *AppSecEvalRuleConditionException) ToAppSecEvalRuleConditionExceptionOutput() AppSecEvalRuleConditionExceptionOutput {
	return i.ToAppSecEvalRuleConditionExceptionOutputWithContext(context.Background())
}

func (i *AppSecEvalRuleConditionException) ToAppSecEvalRuleConditionExceptionOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleConditionExceptionOutput)
}

func (i *AppSecEvalRuleConditionException) ToAppSecEvalRuleConditionExceptionPtrOutput() AppSecEvalRuleConditionExceptionPtrOutput {
	return i.ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(context.Background())
}

func (i *AppSecEvalRuleConditionException) ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleConditionExceptionPtrOutput)
}

type AppSecEvalRuleConditionExceptionPtrInput interface {
	pulumi.Input

	ToAppSecEvalRuleConditionExceptionPtrOutput() AppSecEvalRuleConditionExceptionPtrOutput
	ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionPtrOutput
}

type appSecEvalRuleConditionExceptionPtrType AppSecEvalRuleConditionExceptionArgs

func (*appSecEvalRuleConditionExceptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRuleConditionException)(nil))
}

func (i *appSecEvalRuleConditionExceptionPtrType) ToAppSecEvalRuleConditionExceptionPtrOutput() AppSecEvalRuleConditionExceptionPtrOutput {
	return i.ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(context.Background())
}

func (i *appSecEvalRuleConditionExceptionPtrType) ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleConditionExceptionPtrOutput)
}

// AppSecEvalRuleConditionExceptionArrayInput is an input type that accepts AppSecEvalRuleConditionExceptionArray and AppSecEvalRuleConditionExceptionArrayOutput values.
// You can construct a concrete instance of `AppSecEvalRuleConditionExceptionArrayInput` via:
//
//          AppSecEvalRuleConditionExceptionArray{ AppSecEvalRuleConditionExceptionArgs{...} }
type AppSecEvalRuleConditionExceptionArrayInput interface {
	pulumi.Input

	ToAppSecEvalRuleConditionExceptionArrayOutput() AppSecEvalRuleConditionExceptionArrayOutput
	ToAppSecEvalRuleConditionExceptionArrayOutputWithContext(context.Context) AppSecEvalRuleConditionExceptionArrayOutput
}

type AppSecEvalRuleConditionExceptionArray []AppSecEvalRuleConditionExceptionInput

func (AppSecEvalRuleConditionExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecEvalRuleConditionException)(nil))
}

func (i AppSecEvalRuleConditionExceptionArray) ToAppSecEvalRuleConditionExceptionArrayOutput() AppSecEvalRuleConditionExceptionArrayOutput {
	return i.ToAppSecEvalRuleConditionExceptionArrayOutputWithContext(context.Background())
}

func (i AppSecEvalRuleConditionExceptionArray) ToAppSecEvalRuleConditionExceptionArrayOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleConditionExceptionArrayOutput)
}

// AppSecEvalRuleConditionExceptionMapInput is an input type that accepts AppSecEvalRuleConditionExceptionMap and AppSecEvalRuleConditionExceptionMapOutput values.
// You can construct a concrete instance of `AppSecEvalRuleConditionExceptionMapInput` via:
//
//          AppSecEvalRuleConditionExceptionMap{ "key": AppSecEvalRuleConditionExceptionArgs{...} }
type AppSecEvalRuleConditionExceptionMapInput interface {
	pulumi.Input

	ToAppSecEvalRuleConditionExceptionMapOutput() AppSecEvalRuleConditionExceptionMapOutput
	ToAppSecEvalRuleConditionExceptionMapOutputWithContext(context.Context) AppSecEvalRuleConditionExceptionMapOutput
}

type AppSecEvalRuleConditionExceptionMap map[string]AppSecEvalRuleConditionExceptionInput

func (AppSecEvalRuleConditionExceptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecEvalRuleConditionException)(nil))
}

func (i AppSecEvalRuleConditionExceptionMap) ToAppSecEvalRuleConditionExceptionMapOutput() AppSecEvalRuleConditionExceptionMapOutput {
	return i.ToAppSecEvalRuleConditionExceptionMapOutputWithContext(context.Background())
}

func (i AppSecEvalRuleConditionExceptionMap) ToAppSecEvalRuleConditionExceptionMapOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalRuleConditionExceptionMapOutput)
}

type AppSecEvalRuleConditionExceptionOutput struct {
	*pulumi.OutputState
}

func (AppSecEvalRuleConditionExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalRuleConditionException)(nil))
}

func (o AppSecEvalRuleConditionExceptionOutput) ToAppSecEvalRuleConditionExceptionOutput() AppSecEvalRuleConditionExceptionOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionOutput) ToAppSecEvalRuleConditionExceptionOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionOutput) ToAppSecEvalRuleConditionExceptionPtrOutput() AppSecEvalRuleConditionExceptionPtrOutput {
	return o.ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(context.Background())
}

func (o AppSecEvalRuleConditionExceptionOutput) ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionPtrOutput {
	return o.ApplyT(func(v AppSecEvalRuleConditionException) *AppSecEvalRuleConditionException {
		return &v
	}).(AppSecEvalRuleConditionExceptionPtrOutput)
}

type AppSecEvalRuleConditionExceptionPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecEvalRuleConditionExceptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalRuleConditionException)(nil))
}

func (o AppSecEvalRuleConditionExceptionPtrOutput) ToAppSecEvalRuleConditionExceptionPtrOutput() AppSecEvalRuleConditionExceptionPtrOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionPtrOutput) ToAppSecEvalRuleConditionExceptionPtrOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionPtrOutput {
	return o
}

type AppSecEvalRuleConditionExceptionArrayOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleConditionExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecEvalRuleConditionException)(nil))
}

func (o AppSecEvalRuleConditionExceptionArrayOutput) ToAppSecEvalRuleConditionExceptionArrayOutput() AppSecEvalRuleConditionExceptionArrayOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionArrayOutput) ToAppSecEvalRuleConditionExceptionArrayOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionArrayOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionArrayOutput) Index(i pulumi.IntInput) AppSecEvalRuleConditionExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecEvalRuleConditionException {
		return vs[0].([]AppSecEvalRuleConditionException)[vs[1].(int)]
	}).(AppSecEvalRuleConditionExceptionOutput)
}

type AppSecEvalRuleConditionExceptionMapOutput struct{ *pulumi.OutputState }

func (AppSecEvalRuleConditionExceptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecEvalRuleConditionException)(nil))
}

func (o AppSecEvalRuleConditionExceptionMapOutput) ToAppSecEvalRuleConditionExceptionMapOutput() AppSecEvalRuleConditionExceptionMapOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionMapOutput) ToAppSecEvalRuleConditionExceptionMapOutputWithContext(ctx context.Context) AppSecEvalRuleConditionExceptionMapOutput {
	return o
}

func (o AppSecEvalRuleConditionExceptionMapOutput) MapIndex(k pulumi.StringInput) AppSecEvalRuleConditionExceptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecEvalRuleConditionException {
		return vs[0].(map[string]AppSecEvalRuleConditionException)[vs[1].(string)]
	}).(AppSecEvalRuleConditionExceptionOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecEvalRuleConditionExceptionOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleConditionExceptionPtrOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleConditionExceptionArrayOutput{})
	pulumi.RegisterOutputType(AppSecEvalRuleConditionExceptionMapOutput{})
}
