// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `resourceAkamaiAppsecAdvancedSettingsPrefetch` resource allows you to enable inspection of internal requests (those between your origin and Akamaiâ€™s servers) for file types that you specify. You can also apply rate controls to prefetch requests. This operation applies at the configuration level.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecAdvancedSettingsPrefetch(ctx, "prefetch", &akamai.AppSecAdvancedSettingsPrefetchArgs{
// 			ConfigId:           pulumi.Int(configuration.ConfigId),
// 			Version:            pulumi.Int(configuration.LatestVersion),
// 			EnableAppLayer:     pulumi.Bool(false),
// 			AllExtensions:      pulumi.Bool(true),
// 			EnableRateControls: pulumi.Bool(false),
// 			Extensions:         _var.Extensions,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecAdvancedSettingsPrefetch struct {
	pulumi.CustomResourceState

	// Whether to enable prefetch requests for all extensions.
	AllExtensions pulumi.BoolOutput `pulumi:"allExtensions"`
	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// Whether to enable prefetch requests.
	EnableAppLayer pulumi.BoolOutput `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls.
	EnableRateControls pulumi.BoolOutput `pulumi:"enableRateControls"`
	// The specific extensions for which to enable prefetch requests. If `allExtensions` is True, `extensions` must be an empty list.
	Extensions pulumi.StringArrayOutput `pulumi:"extensions"`
	// The version number of the security configuration to use.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecAdvancedSettingsPrefetch registers a new resource with the given unique name, arguments, and options.
func NewAppSecAdvancedSettingsPrefetch(ctx *pulumi.Context,
	name string, args *AppSecAdvancedSettingsPrefetchArgs, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsPrefetch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AllExtensions == nil {
		return nil, errors.New("invalid value for required argument 'AllExtensions'")
	}
	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.EnableAppLayer == nil {
		return nil, errors.New("invalid value for required argument 'EnableAppLayer'")
	}
	if args.EnableRateControls == nil {
		return nil, errors.New("invalid value for required argument 'EnableRateControls'")
	}
	if args.Extensions == nil {
		return nil, errors.New("invalid value for required argument 'Extensions'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource AppSecAdvancedSettingsPrefetch
	err := ctx.RegisterResource("akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecAdvancedSettingsPrefetch gets an existing AppSecAdvancedSettingsPrefetch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecAdvancedSettingsPrefetch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecAdvancedSettingsPrefetchState, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsPrefetch, error) {
	var resource AppSecAdvancedSettingsPrefetch
	err := ctx.ReadResource("akamai:index/appSecAdvancedSettingsPrefetch:AppSecAdvancedSettingsPrefetch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecAdvancedSettingsPrefetch resources.
type appSecAdvancedSettingsPrefetchState struct {
	// Whether to enable prefetch requests for all extensions.
	AllExtensions *bool `pulumi:"allExtensions"`
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// Whether to enable prefetch requests.
	EnableAppLayer *bool `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls.
	EnableRateControls *bool `pulumi:"enableRateControls"`
	// The specific extensions for which to enable prefetch requests. If `allExtensions` is True, `extensions` must be an empty list.
	Extensions []string `pulumi:"extensions"`
	// The version number of the security configuration to use.
	Version *int `pulumi:"version"`
}

type AppSecAdvancedSettingsPrefetchState struct {
	// Whether to enable prefetch requests for all extensions.
	AllExtensions pulumi.BoolPtrInput
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// Whether to enable prefetch requests.
	EnableAppLayer pulumi.BoolPtrInput
	// Whether to enable prefetch requests for rate controls.
	EnableRateControls pulumi.BoolPtrInput
	// The specific extensions for which to enable prefetch requests. If `allExtensions` is True, `extensions` must be an empty list.
	Extensions pulumi.StringArrayInput
	// The version number of the security configuration to use.
	Version pulumi.IntPtrInput
}

func (AppSecAdvancedSettingsPrefetchState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsPrefetchState)(nil)).Elem()
}

type appSecAdvancedSettingsPrefetchArgs struct {
	// Whether to enable prefetch requests for all extensions.
	AllExtensions bool `pulumi:"allExtensions"`
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// Whether to enable prefetch requests.
	EnableAppLayer bool `pulumi:"enableAppLayer"`
	// Whether to enable prefetch requests for rate controls.
	EnableRateControls bool `pulumi:"enableRateControls"`
	// The specific extensions for which to enable prefetch requests. If `allExtensions` is True, `extensions` must be an empty list.
	Extensions []string `pulumi:"extensions"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a AppSecAdvancedSettingsPrefetch resource.
type AppSecAdvancedSettingsPrefetchArgs struct {
	// Whether to enable prefetch requests for all extensions.
	AllExtensions pulumi.BoolInput
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// Whether to enable prefetch requests.
	EnableAppLayer pulumi.BoolInput
	// Whether to enable prefetch requests for rate controls.
	EnableRateControls pulumi.BoolInput
	// The specific extensions for which to enable prefetch requests. If `allExtensions` is True, `extensions` must be an empty list.
	Extensions pulumi.StringArrayInput
	// The version number of the security configuration to use.
	Version pulumi.IntInput
}

func (AppSecAdvancedSettingsPrefetchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsPrefetchArgs)(nil)).Elem()
}

type AppSecAdvancedSettingsPrefetchInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput
	ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput
}

func (*AppSecAdvancedSettingsPrefetch) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecAdvancedSettingsPrefetch)(nil))
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput {
	return i.ToAppSecAdvancedSettingsPrefetchOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchOutput)
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchPtrOutput() AppSecAdvancedSettingsPrefetchPtrOutput {
	return i.ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsPrefetch) ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchPtrOutput)
}

type AppSecAdvancedSettingsPrefetchPtrInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchPtrOutput() AppSecAdvancedSettingsPrefetchPtrOutput
	ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchPtrOutput
}

type appSecAdvancedSettingsPrefetchPtrType AppSecAdvancedSettingsPrefetchArgs

func (*appSecAdvancedSettingsPrefetchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsPrefetch)(nil))
}

func (i *appSecAdvancedSettingsPrefetchPtrType) ToAppSecAdvancedSettingsPrefetchPtrOutput() AppSecAdvancedSettingsPrefetchPtrOutput {
	return i.ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(context.Background())
}

func (i *appSecAdvancedSettingsPrefetchPtrType) ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchPtrOutput)
}

// AppSecAdvancedSettingsPrefetchArrayInput is an input type that accepts AppSecAdvancedSettingsPrefetchArray and AppSecAdvancedSettingsPrefetchArrayOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsPrefetchArrayInput` via:
//
//          AppSecAdvancedSettingsPrefetchArray{ AppSecAdvancedSettingsPrefetchArgs{...} }
type AppSecAdvancedSettingsPrefetchArrayInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput
	ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(context.Context) AppSecAdvancedSettingsPrefetchArrayOutput
}

type AppSecAdvancedSettingsPrefetchArray []AppSecAdvancedSettingsPrefetchInput

func (AppSecAdvancedSettingsPrefetchArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecAdvancedSettingsPrefetch)(nil))
}

func (i AppSecAdvancedSettingsPrefetchArray) ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput {
	return i.ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsPrefetchArray) ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchArrayOutput)
}

// AppSecAdvancedSettingsPrefetchMapInput is an input type that accepts AppSecAdvancedSettingsPrefetchMap and AppSecAdvancedSettingsPrefetchMapOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsPrefetchMapInput` via:
//
//          AppSecAdvancedSettingsPrefetchMap{ "key": AppSecAdvancedSettingsPrefetchArgs{...} }
type AppSecAdvancedSettingsPrefetchMapInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput
	ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(context.Context) AppSecAdvancedSettingsPrefetchMapOutput
}

type AppSecAdvancedSettingsPrefetchMap map[string]AppSecAdvancedSettingsPrefetchInput

func (AppSecAdvancedSettingsPrefetchMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecAdvancedSettingsPrefetch)(nil))
}

func (i AppSecAdvancedSettingsPrefetchMap) ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput {
	return i.ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsPrefetchMap) ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsPrefetchMapOutput)
}

type AppSecAdvancedSettingsPrefetchOutput struct {
	*pulumi.OutputState
}

func (AppSecAdvancedSettingsPrefetchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecAdvancedSettingsPrefetch)(nil))
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchOutput() AppSecAdvancedSettingsPrefetchOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchPtrOutput() AppSecAdvancedSettingsPrefetchPtrOutput {
	return o.ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(context.Background())
}

func (o AppSecAdvancedSettingsPrefetchOutput) ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchPtrOutput {
	return o.ApplyT(func(v AppSecAdvancedSettingsPrefetch) *AppSecAdvancedSettingsPrefetch {
		return &v
	}).(AppSecAdvancedSettingsPrefetchPtrOutput)
}

type AppSecAdvancedSettingsPrefetchPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecAdvancedSettingsPrefetchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsPrefetch)(nil))
}

func (o AppSecAdvancedSettingsPrefetchPtrOutput) ToAppSecAdvancedSettingsPrefetchPtrOutput() AppSecAdvancedSettingsPrefetchPtrOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchPtrOutput) ToAppSecAdvancedSettingsPrefetchPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchPtrOutput {
	return o
}

type AppSecAdvancedSettingsPrefetchArrayOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsPrefetchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecAdvancedSettingsPrefetch)(nil))
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) ToAppSecAdvancedSettingsPrefetchArrayOutput() AppSecAdvancedSettingsPrefetchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) ToAppSecAdvancedSettingsPrefetchArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchArrayOutput) Index(i pulumi.IntInput) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecAdvancedSettingsPrefetch {
		return vs[0].([]AppSecAdvancedSettingsPrefetch)[vs[1].(int)]
	}).(AppSecAdvancedSettingsPrefetchOutput)
}

type AppSecAdvancedSettingsPrefetchMapOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsPrefetchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecAdvancedSettingsPrefetch)(nil))
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) ToAppSecAdvancedSettingsPrefetchMapOutput() AppSecAdvancedSettingsPrefetchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) ToAppSecAdvancedSettingsPrefetchMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsPrefetchMapOutput {
	return o
}

func (o AppSecAdvancedSettingsPrefetchMapOutput) MapIndex(k pulumi.StringInput) AppSecAdvancedSettingsPrefetchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecAdvancedSettingsPrefetch {
		return vs[0].(map[string]AppSecAdvancedSettingsPrefetch)[vs[1].(string)]
	}).(AppSecAdvancedSettingsPrefetchOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchPtrOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchArrayOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsPrefetchMapOutput{})
}
