// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PropertyVariables struct {
	pulumi.CustomResourceState

	// JSON variables representation
	Json pulumi.StringOutput `pulumi:"json"`
	// Deprecated: resource "akamai_property_variables" is no longer supported - See Akamai Terraform Upgrade Guide
	Variables PropertyVariablesVariableArrayOutput `pulumi:"variables"`
}

// NewPropertyVariables registers a new resource with the given unique name, arguments, and options.
func NewPropertyVariables(ctx *pulumi.Context,
	name string, args *PropertyVariablesArgs, opts ...pulumi.ResourceOption) (*PropertyVariables, error) {
	if args == nil {
		args = &PropertyVariablesArgs{}
	}

	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("akamai:properties/propertyVariables:PropertyVariables"),
		},
	})
	opts = append(opts, aliases)
	var resource PropertyVariables
	err := ctx.RegisterResource("akamai:index/propertyVariables:PropertyVariables", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyVariables gets an existing PropertyVariables resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyVariables(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyVariablesState, opts ...pulumi.ResourceOption) (*PropertyVariables, error) {
	var resource PropertyVariables
	err := ctx.ReadResource("akamai:index/propertyVariables:PropertyVariables", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyVariables resources.
type propertyVariablesState struct {
	// JSON variables representation
	Json *string `pulumi:"json"`
	// Deprecated: resource "akamai_property_variables" is no longer supported - See Akamai Terraform Upgrade Guide
	Variables []PropertyVariablesVariable `pulumi:"variables"`
}

type PropertyVariablesState struct {
	// JSON variables representation
	Json pulumi.StringPtrInput
	// Deprecated: resource "akamai_property_variables" is no longer supported - See Akamai Terraform Upgrade Guide
	Variables PropertyVariablesVariableArrayInput
}

func (PropertyVariablesState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyVariablesState)(nil)).Elem()
}

type propertyVariablesArgs struct {
	// Deprecated: resource "akamai_property_variables" is no longer supported - See Akamai Terraform Upgrade Guide
	Variables []PropertyVariablesVariable `pulumi:"variables"`
}

// The set of arguments for constructing a PropertyVariables resource.
type PropertyVariablesArgs struct {
	// Deprecated: resource "akamai_property_variables" is no longer supported - See Akamai Terraform Upgrade Guide
	Variables PropertyVariablesVariableArrayInput
}

func (PropertyVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyVariablesArgs)(nil)).Elem()
}

type PropertyVariablesInput interface {
	pulumi.Input

	ToPropertyVariablesOutput() PropertyVariablesOutput
	ToPropertyVariablesOutputWithContext(ctx context.Context) PropertyVariablesOutput
}

func (PropertyVariables) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariables)(nil)).Elem()
}

func (i PropertyVariables) ToPropertyVariablesOutput() PropertyVariablesOutput {
	return i.ToPropertyVariablesOutputWithContext(context.Background())
}

func (i PropertyVariables) ToPropertyVariablesOutputWithContext(ctx context.Context) PropertyVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesOutput)
}

type PropertyVariablesOutput struct {
	*pulumi.OutputState
}

func (PropertyVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesOutput)(nil)).Elem()
}

func (o PropertyVariablesOutput) ToPropertyVariablesOutput() PropertyVariablesOutput {
	return o
}

func (o PropertyVariablesOutput) ToPropertyVariablesOutputWithContext(ctx context.Context) PropertyVariablesOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PropertyVariablesOutput{})
}
