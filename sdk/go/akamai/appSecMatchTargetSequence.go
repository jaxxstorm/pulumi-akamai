// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `AppSecMatchTargetSequence` resource allows you to specify the order in which match targets are applied within a given security configuration version.
type AppSecMatchTargetSequence struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).
	Json        pulumi.StringPtrOutput `pulumi:"json"`
	SequenceMap pulumi.StringMapOutput `pulumi:"sequenceMap"`
	Type        pulumi.StringOutput    `pulumi:"type"`
	// The version number of the security configuration to use.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecMatchTargetSequence registers a new resource with the given unique name, arguments, and options.
func NewAppSecMatchTargetSequence(ctx *pulumi.Context,
	name string, args *AppSecMatchTargetSequenceArgs, opts ...pulumi.ResourceOption) (*AppSecMatchTargetSequence, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource AppSecMatchTargetSequence
	err := ctx.RegisterResource("akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecMatchTargetSequence gets an existing AppSecMatchTargetSequence resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecMatchTargetSequence(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecMatchTargetSequenceState, opts ...pulumi.ResourceOption) (*AppSecMatchTargetSequence, error) {
	var resource AppSecMatchTargetSequence
	err := ctx.ReadResource("akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecMatchTargetSequence resources.
type appSecMatchTargetSequenceState struct {
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).
	Json        *string           `pulumi:"json"`
	SequenceMap map[string]string `pulumi:"sequenceMap"`
	Type        *string           `pulumi:"type"`
	// The version number of the security configuration to use.
	Version *int `pulumi:"version"`
}

type AppSecMatchTargetSequenceState struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).
	Json        pulumi.StringPtrInput
	SequenceMap pulumi.StringMapInput
	Type        pulumi.StringPtrInput
	// The version number of the security configuration to use.
	Version pulumi.IntPtrInput
}

func (AppSecMatchTargetSequenceState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMatchTargetSequenceState)(nil)).Elem()
}

type appSecMatchTargetSequenceArgs struct {
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).
	Json        *string           `pulumi:"json"`
	SequenceMap map[string]string `pulumi:"sequenceMap"`
	Type        string            `pulumi:"type"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a AppSecMatchTargetSequence resource.
type AppSecMatchTargetSequenceArgs struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// The name of a JSON file containing the sequence of all match targets defined for the specified security configuration version ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putsequence)).
	Json        pulumi.StringPtrInput
	SequenceMap pulumi.StringMapInput
	Type        pulumi.StringInput
	// The version number of the security configuration to use.
	Version pulumi.IntInput
}

func (AppSecMatchTargetSequenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecMatchTargetSequenceArgs)(nil)).Elem()
}

type AppSecMatchTargetSequenceInput interface {
	pulumi.Input

	ToAppSecMatchTargetSequenceOutput() AppSecMatchTargetSequenceOutput
	ToAppSecMatchTargetSequenceOutputWithContext(ctx context.Context) AppSecMatchTargetSequenceOutput
}

func (*AppSecMatchTargetSequence) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecMatchTargetSequence)(nil))
}

func (i *AppSecMatchTargetSequence) ToAppSecMatchTargetSequenceOutput() AppSecMatchTargetSequenceOutput {
	return i.ToAppSecMatchTargetSequenceOutputWithContext(context.Background())
}

func (i *AppSecMatchTargetSequence) ToAppSecMatchTargetSequenceOutputWithContext(ctx context.Context) AppSecMatchTargetSequenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecMatchTargetSequenceOutput)
}

type AppSecMatchTargetSequenceOutput struct {
	*pulumi.OutputState
}

func (AppSecMatchTargetSequenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecMatchTargetSequence)(nil))
}

func (o AppSecMatchTargetSequenceOutput) ToAppSecMatchTargetSequenceOutput() AppSecMatchTargetSequenceOutput {
	return o
}

func (o AppSecMatchTargetSequenceOutput) ToAppSecMatchTargetSequenceOutputWithContext(ctx context.Context) AppSecMatchTargetSequenceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AppSecMatchTargetSequenceOutput{})
}
