// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PropertyRules struct {
	pulumi.CustomResourceState

	// JSON Rule representation
	Json      pulumi.StringOutput          `pulumi:"json"`
	Rules     PropertyRulesRuleArrayOutput `pulumi:"rules"`
	Variables pulumi.StringPtrOutput       `pulumi:"variables"`
}

// NewPropertyRules registers a new resource with the given unique name, arguments, and options.
func NewPropertyRules(ctx *pulumi.Context,
	name string, args *PropertyRulesArgs, opts ...pulumi.ResourceOption) (*PropertyRules, error) {
	if args == nil {
		args = &PropertyRulesArgs{}
	}
	var resource PropertyRules
	err := ctx.RegisterResource("akamai:properties/propertyRules:PropertyRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyRules gets an existing PropertyRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyRulesState, opts ...pulumi.ResourceOption) (*PropertyRules, error) {
	var resource PropertyRules
	err := ctx.ReadResource("akamai:properties/propertyRules:PropertyRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyRules resources.
type propertyRulesState struct {
	// JSON Rule representation
	Json      *string             `pulumi:"json"`
	Rules     []PropertyRulesRule `pulumi:"rules"`
	Variables *string             `pulumi:"variables"`
}

type PropertyRulesState struct {
	// JSON Rule representation
	Json      pulumi.StringPtrInput
	Rules     PropertyRulesRuleArrayInput
	Variables pulumi.StringPtrInput
}

func (PropertyRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyRulesState)(nil)).Elem()
}

type propertyRulesArgs struct {
	Rules     []PropertyRulesRule `pulumi:"rules"`
	Variables *string             `pulumi:"variables"`
}

// The set of arguments for constructing a PropertyRules resource.
type PropertyRulesArgs struct {
	Rules     PropertyRulesRuleArrayInput
	Variables pulumi.StringPtrInput
}

func (PropertyRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyRulesArgs)(nil)).Elem()
}
