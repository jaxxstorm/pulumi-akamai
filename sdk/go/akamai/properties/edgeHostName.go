// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `properties.EdgeHostName` provides the resource for configuring a secure edge hostname that determines how requests for your site, app, or content are mapped to Akamai edge servers.
//
// An edge hostname is the CNAME target you use when directing your end user traffic to Akamai. In a typical DNS CNAME, your www.customer.com hostname corresponds to an edge hostname of www.customer.com.edgesuite.net.
//
// ## Example Usage
// ### Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/go/akamai/properties"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := properties.NewEdgeHostName(ctx, "terraform_demo", &properties.EdgeHostNameArgs{
// 			Contract:     pulumi.String("ctr_####"),
// 			EdgeHostname: pulumi.String("www.example.org.edgesuite.net"),
// 			Group:        pulumi.String("grp_####"),
// 			Product:      pulumi.String("prd_####"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type EdgeHostName struct {
	pulumi.CustomResourceState

	// — (Optional) The certificate enrollment ID.
	Certificate pulumi.IntPtrOutput `pulumi:"certificate"`
	// — (Required) The contract ID.
	Contract pulumi.StringOutput `pulumi:"contract"`
	// — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
	EdgeHostname pulumi.StringOutput `pulumi:"edgeHostname"`
	// — (Required) The group ID.
	Group      pulumi.StringOutput `pulumi:"group"`
	IpBehavior pulumi.StringOutput `pulumi:"ipBehavior"`
	// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
	Ipv4 pulumi.BoolPtrOutput `pulumi:"ipv4"`
	// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
	Ipv6 pulumi.BoolPtrOutput `pulumi:"ipv6"`
	// — (Required) The product ID.
	Product pulumi.StringOutput `pulumi:"product"`
}

// NewEdgeHostName registers a new resource with the given unique name, arguments, and options.
func NewEdgeHostName(ctx *pulumi.Context,
	name string, args *EdgeHostNameArgs, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	if args == nil || args.Contract == nil {
		return nil, errors.New("missing required argument 'Contract'")
	}
	if args == nil || args.EdgeHostname == nil {
		return nil, errors.New("missing required argument 'EdgeHostname'")
	}
	if args == nil || args.Group == nil {
		return nil, errors.New("missing required argument 'Group'")
	}
	if args == nil || args.Product == nil {
		return nil, errors.New("missing required argument 'Product'")
	}
	if args == nil {
		args = &EdgeHostNameArgs{}
	}
	var resource EdgeHostName
	err := ctx.RegisterResource("akamai:properties/edgeHostName:EdgeHostName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEdgeHostName gets an existing EdgeHostName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEdgeHostName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EdgeHostNameState, opts ...pulumi.ResourceOption) (*EdgeHostName, error) {
	var resource EdgeHostName
	err := ctx.ReadResource("akamai:properties/edgeHostName:EdgeHostName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EdgeHostName resources.
type edgeHostNameState struct {
	// — (Optional) The certificate enrollment ID.
	Certificate *int `pulumi:"certificate"`
	// — (Required) The contract ID.
	Contract *string `pulumi:"contract"`
	// — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
	EdgeHostname *string `pulumi:"edgeHostname"`
	// — (Required) The group ID.
	Group      *string `pulumi:"group"`
	IpBehavior *string `pulumi:"ipBehavior"`
	// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
	Ipv4 *bool `pulumi:"ipv4"`
	// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
	Ipv6 *bool `pulumi:"ipv6"`
	// — (Required) The product ID.
	Product *string `pulumi:"product"`
}

type EdgeHostNameState struct {
	// — (Optional) The certificate enrollment ID.
	Certificate pulumi.IntPtrInput
	// — (Required) The contract ID.
	Contract pulumi.StringPtrInput
	// — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
	EdgeHostname pulumi.StringPtrInput
	// — (Required) The group ID.
	Group      pulumi.StringPtrInput
	IpBehavior pulumi.StringPtrInput
	// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
	Ipv4 pulumi.BoolPtrInput
	// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
	Ipv6 pulumi.BoolPtrInput
	// — (Required) The product ID.
	Product pulumi.StringPtrInput
}

func (EdgeHostNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameState)(nil)).Elem()
}

type edgeHostNameArgs struct {
	// — (Optional) The certificate enrollment ID.
	Certificate *int `pulumi:"certificate"`
	// — (Required) The contract ID.
	Contract string `pulumi:"contract"`
	// — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
	EdgeHostname string `pulumi:"edgeHostname"`
	// — (Required) The group ID.
	Group string `pulumi:"group"`
	// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
	Ipv4 *bool `pulumi:"ipv4"`
	// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
	Ipv6 *bool `pulumi:"ipv6"`
	// — (Required) The product ID.
	Product string `pulumi:"product"`
}

// The set of arguments for constructing a EdgeHostName resource.
type EdgeHostNameArgs struct {
	// — (Optional) The certificate enrollment ID.
	Certificate pulumi.IntPtrInput
	// — (Required) The contract ID.
	Contract pulumi.StringInput
	// — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
	EdgeHostname pulumi.StringInput
	// — (Required) The group ID.
	Group pulumi.StringInput
	// — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
	Ipv4 pulumi.BoolPtrInput
	// —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
	Ipv6 pulumi.BoolPtrInput
	// — (Required) The product ID.
	Product pulumi.StringInput
}

func (EdgeHostNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*edgeHostNameArgs)(nil)).Elem()
}
