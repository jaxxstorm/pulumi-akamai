// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PropertyOrigin struct {
	CacheKeyHostname   *string `pulumi:"cacheKeyHostname"`
	Compress           *bool   `pulumi:"compress"`
	EnableTrueClientIp *bool   `pulumi:"enableTrueClientIp"`
	ForwardHostname    *string `pulumi:"forwardHostname"`
	Hostname           *string `pulumi:"hostname"`
	Port               *int    `pulumi:"port"`
}

// PropertyOriginInput is an input type that accepts PropertyOriginArgs and PropertyOriginOutput values.
// You can construct a concrete instance of `PropertyOriginInput` via:
//
//          PropertyOriginArgs{...}
type PropertyOriginInput interface {
	pulumi.Input

	ToPropertyOriginOutput() PropertyOriginOutput
	ToPropertyOriginOutputWithContext(context.Context) PropertyOriginOutput
}

type PropertyOriginArgs struct {
	CacheKeyHostname   pulumi.StringPtrInput `pulumi:"cacheKeyHostname"`
	Compress           pulumi.BoolPtrInput   `pulumi:"compress"`
	EnableTrueClientIp pulumi.BoolPtrInput   `pulumi:"enableTrueClientIp"`
	ForwardHostname    pulumi.StringPtrInput `pulumi:"forwardHostname"`
	Hostname           pulumi.StringPtrInput `pulumi:"hostname"`
	Port               pulumi.IntPtrInput    `pulumi:"port"`
}

func (PropertyOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyOrigin)(nil)).Elem()
}

func (i PropertyOriginArgs) ToPropertyOriginOutput() PropertyOriginOutput {
	return i.ToPropertyOriginOutputWithContext(context.Background())
}

func (i PropertyOriginArgs) ToPropertyOriginOutputWithContext(ctx context.Context) PropertyOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOriginOutput)
}

// PropertyOriginArrayInput is an input type that accepts PropertyOriginArray and PropertyOriginArrayOutput values.
// You can construct a concrete instance of `PropertyOriginArrayInput` via:
//
//          PropertyOriginArray{ PropertyOriginArgs{...} }
type PropertyOriginArrayInput interface {
	pulumi.Input

	ToPropertyOriginArrayOutput() PropertyOriginArrayOutput
	ToPropertyOriginArrayOutputWithContext(context.Context) PropertyOriginArrayOutput
}

type PropertyOriginArray []PropertyOriginInput

func (PropertyOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyOrigin)(nil)).Elem()
}

func (i PropertyOriginArray) ToPropertyOriginArrayOutput() PropertyOriginArrayOutput {
	return i.ToPropertyOriginArrayOutputWithContext(context.Background())
}

func (i PropertyOriginArray) ToPropertyOriginArrayOutputWithContext(ctx context.Context) PropertyOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOriginArrayOutput)
}

type PropertyOriginOutput struct{ *pulumi.OutputState }

func (PropertyOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyOrigin)(nil)).Elem()
}

func (o PropertyOriginOutput) ToPropertyOriginOutput() PropertyOriginOutput {
	return o
}

func (o PropertyOriginOutput) ToPropertyOriginOutputWithContext(ctx context.Context) PropertyOriginOutput {
	return o
}

func (o PropertyOriginOutput) CacheKeyHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *string { return v.CacheKeyHostname }).(pulumi.StringPtrOutput)
}

func (o PropertyOriginOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

func (o PropertyOriginOutput) EnableTrueClientIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *bool { return v.EnableTrueClientIp }).(pulumi.BoolPtrOutput)
}

func (o PropertyOriginOutput) ForwardHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *string { return v.ForwardHostname }).(pulumi.StringPtrOutput)
}

func (o PropertyOriginOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o PropertyOriginOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type PropertyOriginArrayOutput struct{ *pulumi.OutputState }

func (PropertyOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyOrigin)(nil)).Elem()
}

func (o PropertyOriginArrayOutput) ToPropertyOriginArrayOutput() PropertyOriginArrayOutput {
	return o
}

func (o PropertyOriginArrayOutput) ToPropertyOriginArrayOutputWithContext(ctx context.Context) PropertyOriginArrayOutput {
	return o
}

func (o PropertyOriginArrayOutput) Index(i pulumi.IntInput) PropertyOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyOrigin {
		return vs[0].([]PropertyOrigin)[vs[1].(int)]
	}).(PropertyOriginOutput)
}

type PropertyRuleError struct {
	BehaviorName  *string `pulumi:"behaviorName"`
	Detail        *string `pulumi:"detail"`
	ErrorLocation *string `pulumi:"errorLocation"`
	Instance      *string `pulumi:"instance"`
	StatusCode    *int    `pulumi:"statusCode"`
	Title         *string `pulumi:"title"`
	Type          *string `pulumi:"type"`
}

// PropertyRuleErrorInput is an input type that accepts PropertyRuleErrorArgs and PropertyRuleErrorOutput values.
// You can construct a concrete instance of `PropertyRuleErrorInput` via:
//
//          PropertyRuleErrorArgs{...}
type PropertyRuleErrorInput interface {
	pulumi.Input

	ToPropertyRuleErrorOutput() PropertyRuleErrorOutput
	ToPropertyRuleErrorOutputWithContext(context.Context) PropertyRuleErrorOutput
}

type PropertyRuleErrorArgs struct {
	BehaviorName  pulumi.StringPtrInput `pulumi:"behaviorName"`
	Detail        pulumi.StringPtrInput `pulumi:"detail"`
	ErrorLocation pulumi.StringPtrInput `pulumi:"errorLocation"`
	Instance      pulumi.StringPtrInput `pulumi:"instance"`
	StatusCode    pulumi.IntPtrInput    `pulumi:"statusCode"`
	Title         pulumi.StringPtrInput `pulumi:"title"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (PropertyRuleErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleError)(nil)).Elem()
}

func (i PropertyRuleErrorArgs) ToPropertyRuleErrorOutput() PropertyRuleErrorOutput {
	return i.ToPropertyRuleErrorOutputWithContext(context.Background())
}

func (i PropertyRuleErrorArgs) ToPropertyRuleErrorOutputWithContext(ctx context.Context) PropertyRuleErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleErrorOutput)
}

// PropertyRuleErrorArrayInput is an input type that accepts PropertyRuleErrorArray and PropertyRuleErrorArrayOutput values.
// You can construct a concrete instance of `PropertyRuleErrorArrayInput` via:
//
//          PropertyRuleErrorArray{ PropertyRuleErrorArgs{...} }
type PropertyRuleErrorArrayInput interface {
	pulumi.Input

	ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput
	ToPropertyRuleErrorArrayOutputWithContext(context.Context) PropertyRuleErrorArrayOutput
}

type PropertyRuleErrorArray []PropertyRuleErrorInput

func (PropertyRuleErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleError)(nil)).Elem()
}

func (i PropertyRuleErrorArray) ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput {
	return i.ToPropertyRuleErrorArrayOutputWithContext(context.Background())
}

func (i PropertyRuleErrorArray) ToPropertyRuleErrorArrayOutputWithContext(ctx context.Context) PropertyRuleErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleErrorArrayOutput)
}

type PropertyRuleErrorOutput struct{ *pulumi.OutputState }

func (PropertyRuleErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleError)(nil)).Elem()
}

func (o PropertyRuleErrorOutput) ToPropertyRuleErrorOutput() PropertyRuleErrorOutput {
	return o
}

func (o PropertyRuleErrorOutput) ToPropertyRuleErrorOutputWithContext(ctx context.Context) PropertyRuleErrorOutput {
	return o
}

func (o PropertyRuleErrorOutput) BehaviorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.BehaviorName }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Detail }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) ErrorLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.ErrorLocation }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

func (o PropertyRuleErrorOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleErrorOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleError) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PropertyRuleErrorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRuleErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleError)(nil)).Elem()
}

func (o PropertyRuleErrorArrayOutput) ToPropertyRuleErrorArrayOutput() PropertyRuleErrorArrayOutput {
	return o
}

func (o PropertyRuleErrorArrayOutput) ToPropertyRuleErrorArrayOutputWithContext(ctx context.Context) PropertyRuleErrorArrayOutput {
	return o
}

func (o PropertyRuleErrorArrayOutput) Index(i pulumi.IntInput) PropertyRuleErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRuleError {
		return vs[0].([]PropertyRuleError)[vs[1].(int)]
	}).(PropertyRuleErrorOutput)
}

type PropertyRuleWarning struct {
	BehaviorName  *string `pulumi:"behaviorName"`
	Detail        *string `pulumi:"detail"`
	ErrorLocation *string `pulumi:"errorLocation"`
	Instance      *string `pulumi:"instance"`
	StatusCode    *int    `pulumi:"statusCode"`
	Title         *string `pulumi:"title"`
	Type          *string `pulumi:"type"`
}

// PropertyRuleWarningInput is an input type that accepts PropertyRuleWarningArgs and PropertyRuleWarningOutput values.
// You can construct a concrete instance of `PropertyRuleWarningInput` via:
//
//          PropertyRuleWarningArgs{...}
type PropertyRuleWarningInput interface {
	pulumi.Input

	ToPropertyRuleWarningOutput() PropertyRuleWarningOutput
	ToPropertyRuleWarningOutputWithContext(context.Context) PropertyRuleWarningOutput
}

type PropertyRuleWarningArgs struct {
	BehaviorName  pulumi.StringPtrInput `pulumi:"behaviorName"`
	Detail        pulumi.StringPtrInput `pulumi:"detail"`
	ErrorLocation pulumi.StringPtrInput `pulumi:"errorLocation"`
	Instance      pulumi.StringPtrInput `pulumi:"instance"`
	StatusCode    pulumi.IntPtrInput    `pulumi:"statusCode"`
	Title         pulumi.StringPtrInput `pulumi:"title"`
	Type          pulumi.StringPtrInput `pulumi:"type"`
}

func (PropertyRuleWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleWarning)(nil)).Elem()
}

func (i PropertyRuleWarningArgs) ToPropertyRuleWarningOutput() PropertyRuleWarningOutput {
	return i.ToPropertyRuleWarningOutputWithContext(context.Background())
}

func (i PropertyRuleWarningArgs) ToPropertyRuleWarningOutputWithContext(ctx context.Context) PropertyRuleWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleWarningOutput)
}

// PropertyRuleWarningArrayInput is an input type that accepts PropertyRuleWarningArray and PropertyRuleWarningArrayOutput values.
// You can construct a concrete instance of `PropertyRuleWarningArrayInput` via:
//
//          PropertyRuleWarningArray{ PropertyRuleWarningArgs{...} }
type PropertyRuleWarningArrayInput interface {
	pulumi.Input

	ToPropertyRuleWarningArrayOutput() PropertyRuleWarningArrayOutput
	ToPropertyRuleWarningArrayOutputWithContext(context.Context) PropertyRuleWarningArrayOutput
}

type PropertyRuleWarningArray []PropertyRuleWarningInput

func (PropertyRuleWarningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleWarning)(nil)).Elem()
}

func (i PropertyRuleWarningArray) ToPropertyRuleWarningArrayOutput() PropertyRuleWarningArrayOutput {
	return i.ToPropertyRuleWarningArrayOutputWithContext(context.Background())
}

func (i PropertyRuleWarningArray) ToPropertyRuleWarningArrayOutputWithContext(ctx context.Context) PropertyRuleWarningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRuleWarningArrayOutput)
}

type PropertyRuleWarningOutput struct{ *pulumi.OutputState }

func (PropertyRuleWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRuleWarning)(nil)).Elem()
}

func (o PropertyRuleWarningOutput) ToPropertyRuleWarningOutput() PropertyRuleWarningOutput {
	return o
}

func (o PropertyRuleWarningOutput) ToPropertyRuleWarningOutputWithContext(ctx context.Context) PropertyRuleWarningOutput {
	return o
}

func (o PropertyRuleWarningOutput) BehaviorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.BehaviorName }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleWarningOutput) Detail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.Detail }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleWarningOutput) ErrorLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.ErrorLocation }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleWarningOutput) Instance() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.Instance }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleWarningOutput) StatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *int { return v.StatusCode }).(pulumi.IntPtrOutput)
}

func (o PropertyRuleWarningOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o PropertyRuleWarningOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRuleWarning) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PropertyRuleWarningArrayOutput struct{ *pulumi.OutputState }

func (PropertyRuleWarningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRuleWarning)(nil)).Elem()
}

func (o PropertyRuleWarningArrayOutput) ToPropertyRuleWarningArrayOutput() PropertyRuleWarningArrayOutput {
	return o
}

func (o PropertyRuleWarningArrayOutput) ToPropertyRuleWarningArrayOutputWithContext(ctx context.Context) PropertyRuleWarningArrayOutput {
	return o
}

func (o PropertyRuleWarningArrayOutput) Index(i pulumi.IntInput) PropertyRuleWarningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRuleWarning {
		return vs[0].([]PropertyRuleWarning)[vs[1].(int)]
	}).(PropertyRuleWarningOutput)
}

type PropertyVariablesVariable struct {
	Variables []PropertyVariablesVariableVariable `pulumi:"variables"`
}

// PropertyVariablesVariableInput is an input type that accepts PropertyVariablesVariableArgs and PropertyVariablesVariableOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableInput` via:
//
//          PropertyVariablesVariableArgs{...}
type PropertyVariablesVariableInput interface {
	pulumi.Input

	ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput
	ToPropertyVariablesVariableOutputWithContext(context.Context) PropertyVariablesVariableOutput
}

type PropertyVariablesVariableArgs struct {
	Variables PropertyVariablesVariableVariableArrayInput `pulumi:"variables"`
}

func (PropertyVariablesVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableArgs) ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput {
	return i.ToPropertyVariablesVariableOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableArgs) ToPropertyVariablesVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableOutput)
}

// PropertyVariablesVariableArrayInput is an input type that accepts PropertyVariablesVariableArray and PropertyVariablesVariableArrayOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableArrayInput` via:
//
//          PropertyVariablesVariableArray{ PropertyVariablesVariableArgs{...} }
type PropertyVariablesVariableArrayInput interface {
	pulumi.Input

	ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput
	ToPropertyVariablesVariableArrayOutputWithContext(context.Context) PropertyVariablesVariableArrayOutput
}

type PropertyVariablesVariableArray []PropertyVariablesVariableInput

func (PropertyVariablesVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableArray) ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput {
	return i.ToPropertyVariablesVariableArrayOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableArray) ToPropertyVariablesVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableArrayOutput)
}

type PropertyVariablesVariableOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableOutput) ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput {
	return o
}

func (o PropertyVariablesVariableOutput) ToPropertyVariablesVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableOutput {
	return o
}

func (o PropertyVariablesVariableOutput) Variables() PropertyVariablesVariableVariableArrayOutput {
	return o.ApplyT(func(v PropertyVariablesVariable) []PropertyVariablesVariableVariable { return v.Variables }).(PropertyVariablesVariableVariableArrayOutput)
}

type PropertyVariablesVariableArrayOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableArrayOutput) ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableArrayOutput) ToPropertyVariablesVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableArrayOutput) Index(i pulumi.IntInput) PropertyVariablesVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyVariablesVariable {
		return vs[0].([]PropertyVariablesVariable)[vs[1].(int)]
	}).(PropertyVariablesVariableOutput)
}

type PropertyVariablesVariableVariable struct {
	Description *string `pulumi:"description"`
	Hidden      bool    `pulumi:"hidden"`
	Name        string  `pulumi:"name"`
	Sensitive   bool    `pulumi:"sensitive"`
	Value       *string `pulumi:"value"`
}

// PropertyVariablesVariableVariableInput is an input type that accepts PropertyVariablesVariableVariableArgs and PropertyVariablesVariableVariableOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableVariableInput` via:
//
//          PropertyVariablesVariableVariableArgs{...}
type PropertyVariablesVariableVariableInput interface {
	pulumi.Input

	ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput
	ToPropertyVariablesVariableVariableOutputWithContext(context.Context) PropertyVariablesVariableVariableOutput
}

type PropertyVariablesVariableVariableArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Hidden      pulumi.BoolInput      `pulumi:"hidden"`
	Name        pulumi.StringInput    `pulumi:"name"`
	Sensitive   pulumi.BoolInput      `pulumi:"sensitive"`
	Value       pulumi.StringPtrInput `pulumi:"value"`
}

func (PropertyVariablesVariableVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariableVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableVariableArgs) ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput {
	return i.ToPropertyVariablesVariableVariableOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableVariableArgs) ToPropertyVariablesVariableVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableVariableOutput)
}

// PropertyVariablesVariableVariableArrayInput is an input type that accepts PropertyVariablesVariableVariableArray and PropertyVariablesVariableVariableArrayOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableVariableArrayInput` via:
//
//          PropertyVariablesVariableVariableArray{ PropertyVariablesVariableVariableArgs{...} }
type PropertyVariablesVariableVariableArrayInput interface {
	pulumi.Input

	ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput
	ToPropertyVariablesVariableVariableArrayOutputWithContext(context.Context) PropertyVariablesVariableVariableArrayOutput
}

type PropertyVariablesVariableVariableArray []PropertyVariablesVariableVariableInput

func (PropertyVariablesVariableVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariableVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableVariableArray) ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput {
	return i.ToPropertyVariablesVariableVariableArrayOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableVariableArray) ToPropertyVariablesVariableVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableVariableArrayOutput)
}

type PropertyVariablesVariableVariableOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariableVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableVariableOutput) ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput {
	return o
}

func (o PropertyVariablesVariableVariableOutput) ToPropertyVariablesVariableVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableOutput {
	return o
}

func (o PropertyVariablesVariableVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PropertyVariablesVariableVariableOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) bool { return v.Hidden }).(pulumi.BoolOutput)
}

func (o PropertyVariablesVariableVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyVariablesVariableVariableOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

func (o PropertyVariablesVariableVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PropertyVariablesVariableVariableArrayOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariableVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableVariableArrayOutput) ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableVariableArrayOutput) ToPropertyVariablesVariableVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableVariableArrayOutput) Index(i pulumi.IntInput) PropertyVariablesVariableVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyVariablesVariableVariable {
		return vs[0].([]PropertyVariablesVariableVariable)[vs[1].(int)]
	}).(PropertyVariablesVariableVariableOutput)
}

func init() {
	pulumi.RegisterOutputType(PropertyOriginOutput{})
	pulumi.RegisterOutputType(PropertyOriginArrayOutput{})
	pulumi.RegisterOutputType(PropertyRuleErrorOutput{})
	pulumi.RegisterOutputType(PropertyRuleErrorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRuleWarningOutput{})
	pulumi.RegisterOutputType(PropertyRuleWarningArrayOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableArrayOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableVariableOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableVariableArrayOutput{})
}
