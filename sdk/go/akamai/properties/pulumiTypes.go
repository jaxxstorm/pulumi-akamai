// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package properties

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type PropertyOrigin struct {
	// — (Optional) The hostname uses for the cache key. (default: `ORIGIN_HOSTNAME`).
	CacheKeyHostname *string `pulumi:"cacheKeyHostname"`
	// — (Optional, boolean) Whether origin supports gzip compression (default: `false`).
	Compress *bool `pulumi:"compress"`
	// — (Optional, boolean) Whether the X-True-Client-IP header should be sent to origin (default: `false`).
	EnableTrueClientIp *bool `pulumi:"enableTrueClientIp"`
	// — (Optional) The value for the Hostname header sent to origin. (default: `ORIGIN_HOSTNAME`).
	ForwardHostname *string `pulumi:"forwardHostname"`
	// — (Required) The origin hostname.
	Hostname string `pulumi:"hostname"`
	// — (Optional) The origin port to connect to (default: 80).
	Port *int `pulumi:"port"`
}

// PropertyOriginInput is an input type that accepts PropertyOriginArgs and PropertyOriginOutput values.
// You can construct a concrete instance of `PropertyOriginInput` via:
//
//          PropertyOriginArgs{...}
type PropertyOriginInput interface {
	pulumi.Input

	ToPropertyOriginOutput() PropertyOriginOutput
	ToPropertyOriginOutputWithContext(context.Context) PropertyOriginOutput
}

type PropertyOriginArgs struct {
	// — (Optional) The hostname uses for the cache key. (default: `ORIGIN_HOSTNAME`).
	CacheKeyHostname pulumi.StringPtrInput `pulumi:"cacheKeyHostname"`
	// — (Optional, boolean) Whether origin supports gzip compression (default: `false`).
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// — (Optional, boolean) Whether the X-True-Client-IP header should be sent to origin (default: `false`).
	EnableTrueClientIp pulumi.BoolPtrInput `pulumi:"enableTrueClientIp"`
	// — (Optional) The value for the Hostname header sent to origin. (default: `ORIGIN_HOSTNAME`).
	ForwardHostname pulumi.StringPtrInput `pulumi:"forwardHostname"`
	// — (Required) The origin hostname.
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// — (Optional) The origin port to connect to (default: 80).
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (PropertyOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyOrigin)(nil)).Elem()
}

func (i PropertyOriginArgs) ToPropertyOriginOutput() PropertyOriginOutput {
	return i.ToPropertyOriginOutputWithContext(context.Background())
}

func (i PropertyOriginArgs) ToPropertyOriginOutputWithContext(ctx context.Context) PropertyOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOriginOutput)
}

// PropertyOriginArrayInput is an input type that accepts PropertyOriginArray and PropertyOriginArrayOutput values.
// You can construct a concrete instance of `PropertyOriginArrayInput` via:
//
//          PropertyOriginArray{ PropertyOriginArgs{...} }
type PropertyOriginArrayInput interface {
	pulumi.Input

	ToPropertyOriginArrayOutput() PropertyOriginArrayOutput
	ToPropertyOriginArrayOutputWithContext(context.Context) PropertyOriginArrayOutput
}

type PropertyOriginArray []PropertyOriginInput

func (PropertyOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyOrigin)(nil)).Elem()
}

func (i PropertyOriginArray) ToPropertyOriginArrayOutput() PropertyOriginArrayOutput {
	return i.ToPropertyOriginArrayOutputWithContext(context.Background())
}

func (i PropertyOriginArray) ToPropertyOriginArrayOutputWithContext(ctx context.Context) PropertyOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyOriginArrayOutput)
}

type PropertyOriginOutput struct{ *pulumi.OutputState }

func (PropertyOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyOrigin)(nil)).Elem()
}

func (o PropertyOriginOutput) ToPropertyOriginOutput() PropertyOriginOutput {
	return o
}

func (o PropertyOriginOutput) ToPropertyOriginOutputWithContext(ctx context.Context) PropertyOriginOutput {
	return o
}

// — (Optional) The hostname uses for the cache key. (default: `ORIGIN_HOSTNAME`).
func (o PropertyOriginOutput) CacheKeyHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *string { return v.CacheKeyHostname }).(pulumi.StringPtrOutput)
}

// — (Optional, boolean) Whether origin supports gzip compression (default: `false`).
func (o PropertyOriginOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// — (Optional, boolean) Whether the X-True-Client-IP header should be sent to origin (default: `false`).
func (o PropertyOriginOutput) EnableTrueClientIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *bool { return v.EnableTrueClientIp }).(pulumi.BoolPtrOutput)
}

// — (Optional) The value for the Hostname header sent to origin. (default: `ORIGIN_HOSTNAME`).
func (o PropertyOriginOutput) ForwardHostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *string { return v.ForwardHostname }).(pulumi.StringPtrOutput)
}

// — (Required) The origin hostname.
func (o PropertyOriginOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyOrigin) string { return v.Hostname }).(pulumi.StringOutput)
}

// — (Optional) The origin port to connect to (default: 80).
func (o PropertyOriginOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PropertyOrigin) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type PropertyOriginArrayOutput struct{ *pulumi.OutputState }

func (PropertyOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyOrigin)(nil)).Elem()
}

func (o PropertyOriginArrayOutput) ToPropertyOriginArrayOutput() PropertyOriginArrayOutput {
	return o
}

func (o PropertyOriginArrayOutput) ToPropertyOriginArrayOutputWithContext(ctx context.Context) PropertyOriginArrayOutput {
	return o
}

func (o PropertyOriginArrayOutput) Index(i pulumi.IntInput) PropertyOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyOrigin {
		return vs[0].([]PropertyOrigin)[vs[1].(int)]
	}).(PropertyOriginOutput)
}

type PropertyRulesRule struct {
	Behaviors     []PropertyRulesRuleBehavior `pulumi:"behaviors"`
	CriteriaMatch *string                     `pulumi:"criteriaMatch"`
	IsSecure      *bool                       `pulumi:"isSecure"`
	Rules         []PropertyRulesRuleRule     `pulumi:"rules"`
	Variables     []PropertyRulesRuleVariable `pulumi:"variables"`
}

// PropertyRulesRuleInput is an input type that accepts PropertyRulesRuleArgs and PropertyRulesRuleOutput values.
// You can construct a concrete instance of `PropertyRulesRuleInput` via:
//
//          PropertyRulesRuleArgs{...}
type PropertyRulesRuleInput interface {
	pulumi.Input

	ToPropertyRulesRuleOutput() PropertyRulesRuleOutput
	ToPropertyRulesRuleOutputWithContext(context.Context) PropertyRulesRuleOutput
}

type PropertyRulesRuleArgs struct {
	Behaviors     PropertyRulesRuleBehaviorArrayInput `pulumi:"behaviors"`
	CriteriaMatch pulumi.StringPtrInput               `pulumi:"criteriaMatch"`
	IsSecure      pulumi.BoolPtrInput                 `pulumi:"isSecure"`
	Rules         PropertyRulesRuleRuleArrayInput     `pulumi:"rules"`
	Variables     PropertyRulesRuleVariableArrayInput `pulumi:"variables"`
}

func (PropertyRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRule)(nil)).Elem()
}

func (i PropertyRulesRuleArgs) ToPropertyRulesRuleOutput() PropertyRulesRuleOutput {
	return i.ToPropertyRulesRuleOutputWithContext(context.Background())
}

func (i PropertyRulesRuleArgs) ToPropertyRulesRuleOutputWithContext(ctx context.Context) PropertyRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleOutput)
}

// PropertyRulesRuleArrayInput is an input type that accepts PropertyRulesRuleArray and PropertyRulesRuleArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleArrayInput` via:
//
//          PropertyRulesRuleArray{ PropertyRulesRuleArgs{...} }
type PropertyRulesRuleArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleArrayOutput() PropertyRulesRuleArrayOutput
	ToPropertyRulesRuleArrayOutputWithContext(context.Context) PropertyRulesRuleArrayOutput
}

type PropertyRulesRuleArray []PropertyRulesRuleInput

func (PropertyRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRule)(nil)).Elem()
}

func (i PropertyRulesRuleArray) ToPropertyRulesRuleArrayOutput() PropertyRulesRuleArrayOutput {
	return i.ToPropertyRulesRuleArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleArray) ToPropertyRulesRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleArrayOutput)
}

type PropertyRulesRuleOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRule)(nil)).Elem()
}

func (o PropertyRulesRuleOutput) ToPropertyRulesRuleOutput() PropertyRulesRuleOutput {
	return o
}

func (o PropertyRulesRuleOutput) ToPropertyRulesRuleOutputWithContext(ctx context.Context) PropertyRulesRuleOutput {
	return o
}

func (o PropertyRulesRuleOutput) Behaviors() PropertyRulesRuleBehaviorArrayOutput {
	return o.ApplyT(func(v PropertyRulesRule) []PropertyRulesRuleBehavior { return v.Behaviors }).(PropertyRulesRuleBehaviorArrayOutput)
}

func (o PropertyRulesRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleOutput) IsSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PropertyRulesRule) *bool { return v.IsSecure }).(pulumi.BoolPtrOutput)
}

func (o PropertyRulesRuleOutput) Rules() PropertyRulesRuleRuleArrayOutput {
	return o.ApplyT(func(v PropertyRulesRule) []PropertyRulesRuleRule { return v.Rules }).(PropertyRulesRuleRuleArrayOutput)
}

func (o PropertyRulesRuleOutput) Variables() PropertyRulesRuleVariableArrayOutput {
	return o.ApplyT(func(v PropertyRulesRule) []PropertyRulesRuleVariable { return v.Variables }).(PropertyRulesRuleVariableArrayOutput)
}

type PropertyRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRule)(nil)).Elem()
}

func (o PropertyRulesRuleArrayOutput) ToPropertyRulesRuleArrayOutput() PropertyRulesRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleArrayOutput) ToPropertyRulesRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRule {
		return vs[0].([]PropertyRulesRule)[vs[1].(int)]
	}).(PropertyRulesRuleOutput)
}

type PropertyRulesRuleBehavior struct {
	Name    string                            `pulumi:"name"`
	Options []PropertyRulesRuleBehaviorOption `pulumi:"options"`
}

// PropertyRulesRuleBehaviorInput is an input type that accepts PropertyRulesRuleBehaviorArgs and PropertyRulesRuleBehaviorOutput values.
// You can construct a concrete instance of `PropertyRulesRuleBehaviorInput` via:
//
//          PropertyRulesRuleBehaviorArgs{...}
type PropertyRulesRuleBehaviorInput interface {
	pulumi.Input

	ToPropertyRulesRuleBehaviorOutput() PropertyRulesRuleBehaviorOutput
	ToPropertyRulesRuleBehaviorOutputWithContext(context.Context) PropertyRulesRuleBehaviorOutput
}

type PropertyRulesRuleBehaviorArgs struct {
	Name    pulumi.StringInput                        `pulumi:"name"`
	Options PropertyRulesRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleBehaviorArgs) ToPropertyRulesRuleBehaviorOutput() PropertyRulesRuleBehaviorOutput {
	return i.ToPropertyRulesRuleBehaviorOutputWithContext(context.Background())
}

func (i PropertyRulesRuleBehaviorArgs) ToPropertyRulesRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleBehaviorOutput)
}

// PropertyRulesRuleBehaviorArrayInput is an input type that accepts PropertyRulesRuleBehaviorArray and PropertyRulesRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleBehaviorArrayInput` via:
//
//          PropertyRulesRuleBehaviorArray{ PropertyRulesRuleBehaviorArgs{...} }
type PropertyRulesRuleBehaviorArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleBehaviorArrayOutput() PropertyRulesRuleBehaviorArrayOutput
	ToPropertyRulesRuleBehaviorArrayOutputWithContext(context.Context) PropertyRulesRuleBehaviorArrayOutput
}

type PropertyRulesRuleBehaviorArray []PropertyRulesRuleBehaviorInput

func (PropertyRulesRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleBehaviorArray) ToPropertyRulesRuleBehaviorArrayOutput() PropertyRulesRuleBehaviorArrayOutput {
	return i.ToPropertyRulesRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleBehaviorArray) ToPropertyRulesRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleBehaviorArrayOutput)
}

type PropertyRulesRuleBehaviorOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleBehaviorOutput) ToPropertyRulesRuleBehaviorOutput() PropertyRulesRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOutput) ToPropertyRulesRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleBehaviorOutput) Options() PropertyRulesRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleBehavior) []PropertyRulesRuleBehaviorOption { return v.Options }).(PropertyRulesRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleBehaviorArrayOutput) ToPropertyRulesRuleBehaviorArrayOutput() PropertyRulesRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleBehaviorArrayOutput) ToPropertyRulesRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleBehaviorArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleBehavior {
		return vs[0].([]PropertyRulesRuleBehavior)[vs[1].(int)]
	}).(PropertyRulesRuleBehaviorOutput)
}

type PropertyRulesRuleBehaviorOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleBehaviorOptionInput is an input type that accepts PropertyRulesRuleBehaviorOptionArgs and PropertyRulesRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleBehaviorOptionInput` via:
//
//          PropertyRulesRuleBehaviorOptionArgs{...}
type PropertyRulesRuleBehaviorOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleBehaviorOptionOutput() PropertyRulesRuleBehaviorOptionOutput
	ToPropertyRulesRuleBehaviorOptionOutputWithContext(context.Context) PropertyRulesRuleBehaviorOptionOutput
}

type PropertyRulesRuleBehaviorOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleBehaviorOptionArgs) ToPropertyRulesRuleBehaviorOptionOutput() PropertyRulesRuleBehaviorOptionOutput {
	return i.ToPropertyRulesRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleBehaviorOptionArgs) ToPropertyRulesRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleBehaviorOptionOutput)
}

// PropertyRulesRuleBehaviorOptionArrayInput is an input type that accepts PropertyRulesRuleBehaviorOptionArray and PropertyRulesRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleBehaviorOptionArrayInput` via:
//
//          PropertyRulesRuleBehaviorOptionArray{ PropertyRulesRuleBehaviorOptionArgs{...} }
type PropertyRulesRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleBehaviorOptionArrayOutput() PropertyRulesRuleBehaviorOptionArrayOutput
	ToPropertyRulesRuleBehaviorOptionArrayOutputWithContext(context.Context) PropertyRulesRuleBehaviorOptionArrayOutput
}

type PropertyRulesRuleBehaviorOptionArray []PropertyRulesRuleBehaviorOptionInput

func (PropertyRulesRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleBehaviorOptionArray) ToPropertyRulesRuleBehaviorOptionArrayOutput() PropertyRulesRuleBehaviorOptionArrayOutput {
	return i.ToPropertyRulesRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleBehaviorOptionArray) ToPropertyRulesRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleBehaviorOptionOutput) ToPropertyRulesRuleBehaviorOptionOutput() PropertyRulesRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOptionOutput) ToPropertyRulesRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleBehaviorOptionArrayOutput() PropertyRulesRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleBehaviorOption {
		return vs[0].([]PropertyRulesRuleBehaviorOption)[vs[1].(int)]
	}).(PropertyRulesRuleBehaviorOptionOutput)
}

type PropertyRulesRuleRule struct {
	Behaviors     []PropertyRulesRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                         `pulumi:"comment"`
	CriteriaMatch *string                         `pulumi:"criteriaMatch"`
	Criterias     []PropertyRulesRuleRuleCriteria `pulumi:"criterias"`
	Name          string                          `pulumi:"name"`
	Rules         []PropertyRulesRuleRuleRule     `pulumi:"rules"`
}

// PropertyRulesRuleRuleInput is an input type that accepts PropertyRulesRuleRuleArgs and PropertyRulesRuleRuleOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleInput` via:
//
//          PropertyRulesRuleRuleArgs{...}
type PropertyRulesRuleRuleInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleOutput() PropertyRulesRuleRuleOutput
	ToPropertyRulesRuleRuleOutputWithContext(context.Context) PropertyRulesRuleRuleOutput
}

type PropertyRulesRuleRuleArgs struct {
	Behaviors     PropertyRulesRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                   `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                   `pulumi:"criteriaMatch"`
	Criterias     PropertyRulesRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	Name          pulumi.StringInput                      `pulumi:"name"`
	Rules         PropertyRulesRuleRuleRuleArrayInput     `pulumi:"rules"`
}

func (PropertyRulesRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleArgs) ToPropertyRulesRuleRuleOutput() PropertyRulesRuleRuleOutput {
	return i.ToPropertyRulesRuleRuleOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleArgs) ToPropertyRulesRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleOutput)
}

// PropertyRulesRuleRuleArrayInput is an input type that accepts PropertyRulesRuleRuleArray and PropertyRulesRuleRuleArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleArrayInput` via:
//
//          PropertyRulesRuleRuleArray{ PropertyRulesRuleRuleArgs{...} }
type PropertyRulesRuleRuleArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleArrayOutput() PropertyRulesRuleRuleArrayOutput
	ToPropertyRulesRuleRuleArrayOutputWithContext(context.Context) PropertyRulesRuleRuleArrayOutput
}

type PropertyRulesRuleRuleArray []PropertyRulesRuleRuleInput

func (PropertyRulesRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleArray) ToPropertyRulesRuleRuleArrayOutput() PropertyRulesRuleRuleArrayOutput {
	return i.ToPropertyRulesRuleRuleArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleArray) ToPropertyRulesRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleOutput) ToPropertyRulesRuleRuleOutput() PropertyRulesRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleOutput) ToPropertyRulesRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleOutput) Behaviors() PropertyRulesRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) []PropertyRulesRuleRuleBehavior { return v.Behaviors }).(PropertyRulesRuleRuleBehaviorArrayOutput)
}

func (o PropertyRulesRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleOutput) Criterias() PropertyRulesRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) []PropertyRulesRuleRuleCriteria { return v.Criterias }).(PropertyRulesRuleRuleCriteriaArrayOutput)
}

func (o PropertyRulesRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleOutput) Rules() PropertyRulesRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRule) []PropertyRulesRuleRuleRule { return v.Rules }).(PropertyRulesRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleArrayOutput) ToPropertyRulesRuleRuleArrayOutput() PropertyRulesRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleArrayOutput) ToPropertyRulesRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRule {
		return vs[0].([]PropertyRulesRuleRule)[vs[1].(int)]
	}).(PropertyRulesRuleRuleOutput)
}

type PropertyRulesRuleRuleBehavior struct {
	Name    string                                `pulumi:"name"`
	Options []PropertyRulesRuleRuleBehaviorOption `pulumi:"options"`
}

// PropertyRulesRuleRuleBehaviorInput is an input type that accepts PropertyRulesRuleRuleBehaviorArgs and PropertyRulesRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleBehaviorInput` via:
//
//          PropertyRulesRuleRuleBehaviorArgs{...}
type PropertyRulesRuleRuleBehaviorInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleBehaviorOutput() PropertyRulesRuleRuleBehaviorOutput
	ToPropertyRulesRuleRuleBehaviorOutputWithContext(context.Context) PropertyRulesRuleRuleBehaviorOutput
}

type PropertyRulesRuleRuleBehaviorArgs struct {
	Name    pulumi.StringInput                            `pulumi:"name"`
	Options PropertyRulesRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleBehaviorOutput() PropertyRulesRuleRuleBehaviorOutput {
	return i.ToPropertyRulesRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleBehaviorOutput)
}

// PropertyRulesRuleRuleBehaviorArrayInput is an input type that accepts PropertyRulesRuleRuleBehaviorArray and PropertyRulesRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleBehaviorArrayInput` via:
//
//          PropertyRulesRuleRuleBehaviorArray{ PropertyRulesRuleRuleBehaviorArgs{...} }
type PropertyRulesRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleBehaviorArrayOutput
	ToPropertyRulesRuleRuleBehaviorArrayOutputWithContext(context.Context) PropertyRulesRuleRuleBehaviorArrayOutput
}

type PropertyRulesRuleRuleBehaviorArray []PropertyRulesRuleRuleBehaviorInput

func (PropertyRulesRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleBehaviorArray) ToPropertyRulesRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleBehaviorArrayOutput {
	return i.ToPropertyRulesRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleBehaviorArray) ToPropertyRulesRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleBehaviorArrayOutput)
}

type PropertyRulesRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleBehaviorOutput() PropertyRulesRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleBehaviorOutput) Options() PropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleBehavior) []PropertyRulesRuleRuleBehaviorOption { return v.Options }).(PropertyRulesRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleBehavior {
		return vs[0].([]PropertyRulesRuleRuleBehavior)[vs[1].(int)]
	}).(PropertyRulesRuleRuleBehaviorOutput)
}

type PropertyRulesRuleRuleBehaviorOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleBehaviorOptionInput is an input type that accepts PropertyRulesRuleRuleBehaviorOptionArgs and PropertyRulesRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleBehaviorOptionInput` via:
//
//          PropertyRulesRuleRuleBehaviorOptionArgs{...}
type PropertyRulesRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleBehaviorOptionOutput
	ToPropertyRulesRuleRuleBehaviorOptionOutputWithContext(context.Context) PropertyRulesRuleRuleBehaviorOptionOutput
}

type PropertyRulesRuleRuleBehaviorOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleBehaviorOptionOutput {
	return i.ToPropertyRulesRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleBehaviorOptionOutput)
}

// PropertyRulesRuleRuleBehaviorOptionArrayInput is an input type that accepts PropertyRulesRuleRuleBehaviorOptionArray and PropertyRulesRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleBehaviorOptionArrayInput` via:
//
//          PropertyRulesRuleRuleBehaviorOptionArray{ PropertyRulesRuleRuleBehaviorOptionArgs{...} }
type PropertyRulesRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleBehaviorOptionArrayOutput
	ToPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleBehaviorOptionArrayOutput
}

type PropertyRulesRuleRuleBehaviorOptionArray []PropertyRulesRuleRuleBehaviorOptionInput

func (PropertyRulesRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleBehaviorOption {
		return vs[0].([]PropertyRulesRuleRuleBehaviorOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleBehaviorOptionOutput)
}

type PropertyRulesRuleRuleCriteria struct {
	Name    string                                `pulumi:"name"`
	Options []PropertyRulesRuleRuleCriteriaOption `pulumi:"options"`
}

// PropertyRulesRuleRuleCriteriaInput is an input type that accepts PropertyRulesRuleRuleCriteriaArgs and PropertyRulesRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleCriteriaInput` via:
//
//          PropertyRulesRuleRuleCriteriaArgs{...}
type PropertyRulesRuleRuleCriteriaInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleCriteriaOutput() PropertyRulesRuleRuleCriteriaOutput
	ToPropertyRulesRuleRuleCriteriaOutputWithContext(context.Context) PropertyRulesRuleRuleCriteriaOutput
}

type PropertyRulesRuleRuleCriteriaArgs struct {
	Name    pulumi.StringInput                            `pulumi:"name"`
	Options PropertyRulesRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleCriteriaOutput() PropertyRulesRuleRuleCriteriaOutput {
	return i.ToPropertyRulesRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleCriteriaOutput)
}

// PropertyRulesRuleRuleCriteriaArrayInput is an input type that accepts PropertyRulesRuleRuleCriteriaArray and PropertyRulesRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleCriteriaArrayInput` via:
//
//          PropertyRulesRuleRuleCriteriaArray{ PropertyRulesRuleRuleCriteriaArgs{...} }
type PropertyRulesRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleCriteriaArrayOutput
	ToPropertyRulesRuleRuleCriteriaArrayOutputWithContext(context.Context) PropertyRulesRuleRuleCriteriaArrayOutput
}

type PropertyRulesRuleRuleCriteriaArray []PropertyRulesRuleRuleCriteriaInput

func (PropertyRulesRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleCriteriaArray) ToPropertyRulesRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleCriteriaArrayOutput {
	return i.ToPropertyRulesRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleCriteriaArray) ToPropertyRulesRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleCriteriaArrayOutput)
}

type PropertyRulesRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleCriteriaOutput() PropertyRulesRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleCriteriaOutput) Options() PropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleCriteria) []PropertyRulesRuleRuleCriteriaOption { return v.Options }).(PropertyRulesRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleCriteria {
		return vs[0].([]PropertyRulesRuleRuleCriteria)[vs[1].(int)]
	}).(PropertyRulesRuleRuleCriteriaOutput)
}

type PropertyRulesRuleRuleCriteriaOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleCriteriaOptionInput is an input type that accepts PropertyRulesRuleRuleCriteriaOptionArgs and PropertyRulesRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleCriteriaOptionInput` via:
//
//          PropertyRulesRuleRuleCriteriaOptionArgs{...}
type PropertyRulesRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleCriteriaOptionOutput
	ToPropertyRulesRuleRuleCriteriaOptionOutputWithContext(context.Context) PropertyRulesRuleRuleCriteriaOptionOutput
}

type PropertyRulesRuleRuleCriteriaOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleCriteriaOptionOutput {
	return i.ToPropertyRulesRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleCriteriaOptionOutput)
}

// PropertyRulesRuleRuleCriteriaOptionArrayInput is an input type that accepts PropertyRulesRuleRuleCriteriaOptionArray and PropertyRulesRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleCriteriaOptionArrayInput` via:
//
//          PropertyRulesRuleRuleCriteriaOptionArray{ PropertyRulesRuleRuleCriteriaOptionArgs{...} }
type PropertyRulesRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleCriteriaOptionArrayOutput
	ToPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleCriteriaOptionArrayOutput
}

type PropertyRulesRuleRuleCriteriaOptionArray []PropertyRulesRuleRuleCriteriaOptionInput

func (PropertyRulesRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleCriteriaOption {
		return vs[0].([]PropertyRulesRuleRuleCriteriaOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleCriteriaOptionOutput)
}

type PropertyRulesRuleRuleRule struct {
	Behaviors     []PropertyRulesRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                             `pulumi:"comment"`
	CriteriaMatch *string                             `pulumi:"criteriaMatch"`
	Criterias     []PropertyRulesRuleRuleRuleCriteria `pulumi:"criterias"`
	Name          string                              `pulumi:"name"`
	Rules         []PropertyRulesRuleRuleRuleRule     `pulumi:"rules"`
}

// PropertyRulesRuleRuleRuleInput is an input type that accepts PropertyRulesRuleRuleRuleArgs and PropertyRulesRuleRuleRuleOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleInput` via:
//
//          PropertyRulesRuleRuleRuleArgs{...}
type PropertyRulesRuleRuleRuleInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleOutput() PropertyRulesRuleRuleRuleOutput
	ToPropertyRulesRuleRuleRuleOutputWithContext(context.Context) PropertyRulesRuleRuleRuleOutput
}

type PropertyRulesRuleRuleRuleArgs struct {
	Behaviors     PropertyRulesRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                       `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                       `pulumi:"criteriaMatch"`
	Criterias     PropertyRulesRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	Name          pulumi.StringInput                          `pulumi:"name"`
	Rules         PropertyRulesRuleRuleRuleRuleArrayInput     `pulumi:"rules"`
}

func (PropertyRulesRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleOutput() PropertyRulesRuleRuleRuleOutput {
	return i.ToPropertyRulesRuleRuleRuleOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleOutput)
}

// PropertyRulesRuleRuleRuleArrayInput is an input type that accepts PropertyRulesRuleRuleRuleArray and PropertyRulesRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleArrayInput` via:
//
//          PropertyRulesRuleRuleRuleArray{ PropertyRulesRuleRuleRuleArgs{...} }
type PropertyRulesRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleArrayOutput
	ToPropertyRulesRuleRuleRuleArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleArrayOutput
}

type PropertyRulesRuleRuleRuleArray []PropertyRulesRuleRuleRuleInput

func (PropertyRulesRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleOutput() PropertyRulesRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleOutput) Behaviors() PropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) []PropertyRulesRuleRuleRuleBehavior { return v.Behaviors }).(PropertyRulesRuleRuleRuleBehaviorArrayOutput)
}

func (o PropertyRulesRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleOutput) Criterias() PropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) []PropertyRulesRuleRuleRuleCriteria { return v.Criterias }).(PropertyRulesRuleRuleRuleCriteriaArrayOutput)
}

func (o PropertyRulesRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleOutput) Rules() PropertyRulesRuleRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRule) []PropertyRulesRuleRuleRuleRule { return v.Rules }).(PropertyRulesRuleRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRule {
		return vs[0].([]PropertyRulesRuleRuleRule)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleOutput)
}

type PropertyRulesRuleRuleRuleBehavior struct {
	Name    string                                    `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleBehaviorInput is an input type that accepts PropertyRulesRuleRuleRuleBehaviorArgs and PropertyRulesRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleBehaviorInput` via:
//
//          PropertyRulesRuleRuleRuleBehaviorArgs{...}
type PropertyRulesRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleBehaviorOutput
	ToPropertyRulesRuleRuleRuleBehaviorOutputWithContext(context.Context) PropertyRulesRuleRuleRuleBehaviorOutput
}

type PropertyRulesRuleRuleRuleBehaviorArgs struct {
	Name    pulumi.StringInput                                `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleBehaviorOutput {
	return i.ToPropertyRulesRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleBehaviorOutput)
}

// PropertyRulesRuleRuleRuleBehaviorArrayInput is an input type that accepts PropertyRulesRuleRuleRuleBehaviorArray and PropertyRulesRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleBehaviorArrayInput` via:
//
//          PropertyRulesRuleRuleRuleBehaviorArray{ PropertyRulesRuleRuleRuleBehaviorArgs{...} }
type PropertyRulesRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleBehaviorArrayOutput
	ToPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleBehaviorArrayOutput
}

type PropertyRulesRuleRuleRuleBehaviorArray []PropertyRulesRuleRuleRuleBehaviorInput

func (PropertyRulesRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleBehaviorArrayOutput)
}

type PropertyRulesRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleBehaviorOutput) Options() PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleBehavior) []PropertyRulesRuleRuleRuleBehaviorOption { return v.Options }).(PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleBehavior {
		return vs[0].([]PropertyRulesRuleRuleRuleBehavior)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleBehaviorOutput)
}

type PropertyRulesRuleRuleRuleBehaviorOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleBehaviorOptionInput is an input type that accepts PropertyRulesRuleRuleRuleBehaviorOptionArgs and PropertyRulesRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleBehaviorOptionInput` via:
//
//          PropertyRulesRuleRuleRuleBehaviorOptionArgs{...}
type PropertyRulesRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleBehaviorOptionOutput
	ToPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleBehaviorOptionOutput
}

type PropertyRulesRuleRuleRuleBehaviorOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleBehaviorOptionOutput)
}

// PropertyRulesRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleBehaviorOptionArray and PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleBehaviorOptionArray{ PropertyRulesRuleRuleRuleBehaviorOptionArgs{...} }
type PropertyRulesRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput
	ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput
}

type PropertyRulesRuleRuleRuleBehaviorOptionArray []PropertyRulesRuleRuleRuleBehaviorOptionInput

func (PropertyRulesRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleBehaviorOption {
		return vs[0].([]PropertyRulesRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleBehaviorOptionOutput)
}

type PropertyRulesRuleRuleRuleCriteria struct {
	Name    string                                    `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleCriteriaInput is an input type that accepts PropertyRulesRuleRuleRuleCriteriaArgs and PropertyRulesRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleCriteriaInput` via:
//
//          PropertyRulesRuleRuleRuleCriteriaArgs{...}
type PropertyRulesRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleCriteriaOutput
	ToPropertyRulesRuleRuleRuleCriteriaOutputWithContext(context.Context) PropertyRulesRuleRuleRuleCriteriaOutput
}

type PropertyRulesRuleRuleRuleCriteriaArgs struct {
	Name    pulumi.StringInput                                `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleCriteriaOutput {
	return i.ToPropertyRulesRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleCriteriaOutput)
}

// PropertyRulesRuleRuleRuleCriteriaArrayInput is an input type that accepts PropertyRulesRuleRuleRuleCriteriaArray and PropertyRulesRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleCriteriaArrayInput` via:
//
//          PropertyRulesRuleRuleRuleCriteriaArray{ PropertyRulesRuleRuleRuleCriteriaArgs{...} }
type PropertyRulesRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleCriteriaArrayOutput
	ToPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleCriteriaArrayOutput
}

type PropertyRulesRuleRuleRuleCriteriaArray []PropertyRulesRuleRuleRuleCriteriaInput

func (PropertyRulesRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleCriteriaArrayOutput)
}

type PropertyRulesRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleCriteriaOutput) Options() PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleCriteria) []PropertyRulesRuleRuleRuleCriteriaOption { return v.Options }).(PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleCriteria {
		return vs[0].([]PropertyRulesRuleRuleRuleCriteria)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleCriteriaOutput)
}

type PropertyRulesRuleRuleRuleCriteriaOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleCriteriaOptionInput is an input type that accepts PropertyRulesRuleRuleRuleCriteriaOptionArgs and PropertyRulesRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleCriteriaOptionInput` via:
//
//          PropertyRulesRuleRuleRuleCriteriaOptionArgs{...}
type PropertyRulesRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleCriteriaOptionOutput
	ToPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleCriteriaOptionOutput
}

type PropertyRulesRuleRuleRuleCriteriaOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleCriteriaOptionOutput)
}

// PropertyRulesRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleCriteriaOptionArray and PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleCriteriaOptionArray{ PropertyRulesRuleRuleRuleCriteriaOptionArgs{...} }
type PropertyRulesRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput
	ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput
}

type PropertyRulesRuleRuleRuleCriteriaOptionArray []PropertyRulesRuleRuleRuleCriteriaOptionInput

func (PropertyRulesRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleCriteriaOption {
		return vs[0].([]PropertyRulesRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleCriteriaOptionOutput)
}

type PropertyRulesRuleRuleRuleRule struct {
	Behaviors     []PropertyRulesRuleRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                                 `pulumi:"comment"`
	CriteriaMatch *string                                 `pulumi:"criteriaMatch"`
	Criterias     []PropertyRulesRuleRuleRuleRuleCriteria `pulumi:"criterias"`
	Name          string                                  `pulumi:"name"`
	Rules         []PropertyRulesRuleRuleRuleRuleRule     `pulumi:"rules"`
}

// PropertyRulesRuleRuleRuleRuleInput is an input type that accepts PropertyRulesRuleRuleRuleRuleArgs and PropertyRulesRuleRuleRuleRuleOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleInput` via:
//
//          PropertyRulesRuleRuleRuleRuleArgs{...}
type PropertyRulesRuleRuleRuleRuleInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleOutput
	ToPropertyRulesRuleRuleRuleRuleOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleOutput
}

type PropertyRulesRuleRuleRuleRuleArgs struct {
	Behaviors     PropertyRulesRuleRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                           `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                           `pulumi:"criteriaMatch"`
	Criterias     PropertyRulesRuleRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	Name          pulumi.StringInput                              `pulumi:"name"`
	Rules         PropertyRulesRuleRuleRuleRuleRuleArrayInput     `pulumi:"rules"`
}

func (PropertyRulesRuleRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleOutput)
}

// PropertyRulesRuleRuleRuleRuleArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleArray and PropertyRulesRuleRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleArray{ PropertyRulesRuleRuleRuleRuleArgs{...} }
type PropertyRulesRuleRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleArrayOutput
	ToPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleArrayOutput
}

type PropertyRulesRuleRuleRuleRuleArray []PropertyRulesRuleRuleRuleRuleInput

func (PropertyRulesRuleRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleOutput) Behaviors() PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) []PropertyRulesRuleRuleRuleRuleBehavior { return v.Behaviors }).(PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput)
}

func (o PropertyRulesRuleRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleOutput) Criterias() PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) []PropertyRulesRuleRuleRuleRuleCriteria { return v.Criterias }).(PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput)
}

func (o PropertyRulesRuleRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleOutput) Rules() PropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRule) []PropertyRulesRuleRuleRuleRuleRule { return v.Rules }).(PropertyRulesRuleRuleRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRule {
		return vs[0].([]PropertyRulesRuleRuleRuleRule)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleOutput)
}

type PropertyRulesRuleRuleRuleRuleBehavior struct {
	Name    string                                        `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleRuleBehaviorInput is an input type that accepts PropertyRulesRuleRuleRuleRuleBehaviorArgs and PropertyRulesRuleRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleBehaviorInput` via:
//
//          PropertyRulesRuleRuleRuleRuleBehaviorArgs{...}
type PropertyRulesRuleRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleBehaviorOutput
	ToPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOutput
}

type PropertyRulesRuleRuleRuleRuleBehaviorArgs struct {
	Name    pulumi.StringInput                                    `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleBehaviorOutput)
}

// PropertyRulesRuleRuleRuleRuleBehaviorArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleBehaviorArray and PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleBehaviorArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleBehaviorArray{ PropertyRulesRuleRuleRuleRuleBehaviorArgs{...} }
type PropertyRulesRuleRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput
	ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput
}

type PropertyRulesRuleRuleRuleRuleBehaviorArray []PropertyRulesRuleRuleRuleRuleBehaviorInput

func (PropertyRulesRuleRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOutput) Options() PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleBehavior) []PropertyRulesRuleRuleRuleRuleBehaviorOption {
		return v.Options
	}).(PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleBehavior {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleBehavior)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleBehaviorOutput)
}

type PropertyRulesRuleRuleRuleRuleBehaviorOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleRuleBehaviorOptionInput is an input type that accepts PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs and PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleBehaviorOptionInput` via:
//
//          PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs{...}
type PropertyRulesRuleRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput
	ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput
}

type PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput)
}

// PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleBehaviorOptionArray and PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleBehaviorOptionArray{ PropertyRulesRuleRuleRuleRuleBehaviorOptionArgs{...} }
type PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput
	ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput
}

type PropertyRulesRuleRuleRuleRuleBehaviorOptionArray []PropertyRulesRuleRuleRuleRuleBehaviorOptionInput

func (PropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleBehaviorOption {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteria struct {
	Name    string                                        `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleRuleCriteriaInput is an input type that accepts PropertyRulesRuleRuleRuleRuleCriteriaArgs and PropertyRulesRuleRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleCriteriaInput` via:
//
//          PropertyRulesRuleRuleRuleRuleCriteriaArgs{...}
type PropertyRulesRuleRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleCriteriaOutput
	ToPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOutput
}

type PropertyRulesRuleRuleRuleRuleCriteriaArgs struct {
	Name    pulumi.StringInput                                    `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleCriteriaOutput)
}

// PropertyRulesRuleRuleRuleRuleCriteriaArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleCriteriaArray and PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleCriteriaArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleCriteriaArray{ PropertyRulesRuleRuleRuleRuleCriteriaArgs{...} }
type PropertyRulesRuleRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput
	ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput
}

type PropertyRulesRuleRuleRuleRuleCriteriaArray []PropertyRulesRuleRuleRuleRuleCriteriaInput

func (PropertyRulesRuleRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOutput) Options() PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleCriteria) []PropertyRulesRuleRuleRuleRuleCriteriaOption {
		return v.Options
	}).(PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleCriteria {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleCriteria)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleCriteriaOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteriaOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleRuleCriteriaOptionInput is an input type that accepts PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs and PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleCriteriaOptionInput` via:
//
//          PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs{...}
type PropertyRulesRuleRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput
	ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput
}

type PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput)
}

// PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleCriteriaOptionArray and PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleCriteriaOptionArray{ PropertyRulesRuleRuleRuleRuleCriteriaOptionArgs{...} }
type PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput
	ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput
}

type PropertyRulesRuleRuleRuleRuleCriteriaOptionArray []PropertyRulesRuleRuleRuleRuleCriteriaOptionInput

func (PropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleCriteriaOption {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput)
}

type PropertyRulesRuleRuleRuleRuleRule struct {
	Behaviors     []PropertyRulesRuleRuleRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                                     `pulumi:"comment"`
	CriteriaMatch *string                                     `pulumi:"criteriaMatch"`
	Criterias     []PropertyRulesRuleRuleRuleRuleRuleCriteria `pulumi:"criterias"`
	Name          string                                      `pulumi:"name"`
}

// PropertyRulesRuleRuleRuleRuleRuleInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleArgs and PropertyRulesRuleRuleRuleRuleRuleOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleArgs{...}
type PropertyRulesRuleRuleRuleRuleRuleInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleRuleOutput
	ToPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleOutput
}

type PropertyRulesRuleRuleRuleRuleRuleArgs struct {
	Behaviors     PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                               `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                               `pulumi:"criteriaMatch"`
	Criterias     PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	Name          pulumi.StringInput                                  `pulumi:"name"`
}

func (PropertyRulesRuleRuleRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleRuleOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleArgs) ToPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleOutput)
}

// PropertyRulesRuleRuleRuleRuleRuleArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleArray and PropertyRulesRuleRuleRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleArray{ PropertyRulesRuleRuleRuleRuleRuleArgs{...} }
type PropertyRulesRuleRuleRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleRuleArrayOutput
	ToPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleArrayOutput
}

type PropertyRulesRuleRuleRuleRuleRuleArray []PropertyRulesRuleRuleRuleRuleRuleInput

func (PropertyRulesRuleRuleRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleArray) ToPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleRuleRuleOutput() PropertyRulesRuleRuleRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) ToPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) Behaviors() PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRule) []PropertyRulesRuleRuleRuleRuleRuleBehavior {
		return v.Behaviors
	}).(PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) Criterias() PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRule) []PropertyRulesRuleRuleRuleRuleRuleCriteria {
		return v.Criterias
	}).(PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleArrayOutput() PropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleRule {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleRule)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleRuleOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehavior struct {
	Name    string                                            `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleRuleRuleBehaviorInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs and PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleBehaviorInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs{...}
type PropertyRulesRuleRuleRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput
	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs struct {
	Name    pulumi.StringInput                                        `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput)
}

// PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleBehaviorArray and PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleBehaviorArray{ PropertyRulesRuleRuleRuleRuleRuleBehaviorArgs{...} }
type PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput
	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorArray []PropertyRulesRuleRuleRuleRuleRuleBehaviorInput

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) Options() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleBehavior) []PropertyRulesRuleRuleRuleRuleRuleBehaviorOption {
		return v.Options
	}).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleRuleBehavior {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleRuleBehavior)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs and PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs{...}
type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput
	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput)
}

// PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray and PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray{ PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs{...} }
type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput
	ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray []PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleRuleBehaviorOption {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteria struct {
	Name    string                                            `pulumi:"name"`
	Options []PropertyRulesRuleRuleRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// PropertyRulesRuleRuleRuleRuleRuleCriteriaInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs and PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleCriteriaInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs{...}
type PropertyRulesRuleRuleRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput
	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs struct {
	Name    pulumi.StringInput                                        `pulumi:"name"`
	Options PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput)
}

// PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleCriteriaArray and PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleCriteriaArray{ PropertyRulesRuleRuleRuleRuleRuleCriteriaArgs{...} }
type PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput
	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaArray []PropertyRulesRuleRuleRuleRuleRuleCriteriaInput

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) Options() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleCriteria) []PropertyRulesRuleRuleRuleRuleRuleCriteriaOption {
		return v.Options
	}).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleRuleCriteria {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleRuleCriteria)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOption struct {
	Key    string   `pulumi:"key"`
	Value  *string  `pulumi:"value"`
	Values []string `pulumi:"values"`
}

// PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs and PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs{...}
type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput
	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Value  pulumi.StringPtrInput   `pulumi:"value"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput)
}

// PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray and PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray{ PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs{...} }
type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput
	ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray []PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropertyRulesRuleRuleRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ToPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleRuleRuleRuleRuleCriteriaOption {
		return vs[0].([]PropertyRulesRuleRuleRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput)
}

type PropertyRulesRuleVariable struct {
	Description *string `pulumi:"description"`
	Hidden      bool    `pulumi:"hidden"`
	Name        string  `pulumi:"name"`
	Sensitive   bool    `pulumi:"sensitive"`
	Value       *string `pulumi:"value"`
}

// PropertyRulesRuleVariableInput is an input type that accepts PropertyRulesRuleVariableArgs and PropertyRulesRuleVariableOutput values.
// You can construct a concrete instance of `PropertyRulesRuleVariableInput` via:
//
//          PropertyRulesRuleVariableArgs{...}
type PropertyRulesRuleVariableInput interface {
	pulumi.Input

	ToPropertyRulesRuleVariableOutput() PropertyRulesRuleVariableOutput
	ToPropertyRulesRuleVariableOutputWithContext(context.Context) PropertyRulesRuleVariableOutput
}

type PropertyRulesRuleVariableArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Hidden      pulumi.BoolInput      `pulumi:"hidden"`
	Name        pulumi.StringInput    `pulumi:"name"`
	Sensitive   pulumi.BoolInput      `pulumi:"sensitive"`
	Value       pulumi.StringPtrInput `pulumi:"value"`
}

func (PropertyRulesRuleVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleVariable)(nil)).Elem()
}

func (i PropertyRulesRuleVariableArgs) ToPropertyRulesRuleVariableOutput() PropertyRulesRuleVariableOutput {
	return i.ToPropertyRulesRuleVariableOutputWithContext(context.Background())
}

func (i PropertyRulesRuleVariableArgs) ToPropertyRulesRuleVariableOutputWithContext(ctx context.Context) PropertyRulesRuleVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleVariableOutput)
}

// PropertyRulesRuleVariableArrayInput is an input type that accepts PropertyRulesRuleVariableArray and PropertyRulesRuleVariableArrayOutput values.
// You can construct a concrete instance of `PropertyRulesRuleVariableArrayInput` via:
//
//          PropertyRulesRuleVariableArray{ PropertyRulesRuleVariableArgs{...} }
type PropertyRulesRuleVariableArrayInput interface {
	pulumi.Input

	ToPropertyRulesRuleVariableArrayOutput() PropertyRulesRuleVariableArrayOutput
	ToPropertyRulesRuleVariableArrayOutputWithContext(context.Context) PropertyRulesRuleVariableArrayOutput
}

type PropertyRulesRuleVariableArray []PropertyRulesRuleVariableInput

func (PropertyRulesRuleVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleVariable)(nil)).Elem()
}

func (i PropertyRulesRuleVariableArray) ToPropertyRulesRuleVariableArrayOutput() PropertyRulesRuleVariableArrayOutput {
	return i.ToPropertyRulesRuleVariableArrayOutputWithContext(context.Background())
}

func (i PropertyRulesRuleVariableArray) ToPropertyRulesRuleVariableArrayOutputWithContext(ctx context.Context) PropertyRulesRuleVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyRulesRuleVariableArrayOutput)
}

type PropertyRulesRuleVariableOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyRulesRuleVariable)(nil)).Elem()
}

func (o PropertyRulesRuleVariableOutput) ToPropertyRulesRuleVariableOutput() PropertyRulesRuleVariableOutput {
	return o
}

func (o PropertyRulesRuleVariableOutput) ToPropertyRulesRuleVariableOutputWithContext(ctx context.Context) PropertyRulesRuleVariableOutput {
	return o
}

func (o PropertyRulesRuleVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleVariable) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PropertyRulesRuleVariableOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyRulesRuleVariable) bool { return v.Hidden }).(pulumi.BoolOutput)
}

func (o PropertyRulesRuleVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyRulesRuleVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o PropertyRulesRuleVariableOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyRulesRuleVariable) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

func (o PropertyRulesRuleVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyRulesRuleVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PropertyRulesRuleVariableArrayOutput struct{ *pulumi.OutputState }

func (PropertyRulesRuleVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyRulesRuleVariable)(nil)).Elem()
}

func (o PropertyRulesRuleVariableArrayOutput) ToPropertyRulesRuleVariableArrayOutput() PropertyRulesRuleVariableArrayOutput {
	return o
}

func (o PropertyRulesRuleVariableArrayOutput) ToPropertyRulesRuleVariableArrayOutputWithContext(ctx context.Context) PropertyRulesRuleVariableArrayOutput {
	return o
}

func (o PropertyRulesRuleVariableArrayOutput) Index(i pulumi.IntInput) PropertyRulesRuleVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyRulesRuleVariable {
		return vs[0].([]PropertyRulesRuleVariable)[vs[1].(int)]
	}).(PropertyRulesRuleVariableOutput)
}

type PropertyVariablesVariable struct {
	Variables []PropertyVariablesVariableVariable `pulumi:"variables"`
}

// PropertyVariablesVariableInput is an input type that accepts PropertyVariablesVariableArgs and PropertyVariablesVariableOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableInput` via:
//
//          PropertyVariablesVariableArgs{...}
type PropertyVariablesVariableInput interface {
	pulumi.Input

	ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput
	ToPropertyVariablesVariableOutputWithContext(context.Context) PropertyVariablesVariableOutput
}

type PropertyVariablesVariableArgs struct {
	Variables PropertyVariablesVariableVariableArrayInput `pulumi:"variables"`
}

func (PropertyVariablesVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableArgs) ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput {
	return i.ToPropertyVariablesVariableOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableArgs) ToPropertyVariablesVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableOutput)
}

// PropertyVariablesVariableArrayInput is an input type that accepts PropertyVariablesVariableArray and PropertyVariablesVariableArrayOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableArrayInput` via:
//
//          PropertyVariablesVariableArray{ PropertyVariablesVariableArgs{...} }
type PropertyVariablesVariableArrayInput interface {
	pulumi.Input

	ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput
	ToPropertyVariablesVariableArrayOutputWithContext(context.Context) PropertyVariablesVariableArrayOutput
}

type PropertyVariablesVariableArray []PropertyVariablesVariableInput

func (PropertyVariablesVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableArray) ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput {
	return i.ToPropertyVariablesVariableArrayOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableArray) ToPropertyVariablesVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableArrayOutput)
}

type PropertyVariablesVariableOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableOutput) ToPropertyVariablesVariableOutput() PropertyVariablesVariableOutput {
	return o
}

func (o PropertyVariablesVariableOutput) ToPropertyVariablesVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableOutput {
	return o
}

func (o PropertyVariablesVariableOutput) Variables() PropertyVariablesVariableVariableArrayOutput {
	return o.ApplyT(func(v PropertyVariablesVariable) []PropertyVariablesVariableVariable { return v.Variables }).(PropertyVariablesVariableVariableArrayOutput)
}

type PropertyVariablesVariableArrayOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableArrayOutput) ToPropertyVariablesVariableArrayOutput() PropertyVariablesVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableArrayOutput) ToPropertyVariablesVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableArrayOutput) Index(i pulumi.IntInput) PropertyVariablesVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyVariablesVariable {
		return vs[0].([]PropertyVariablesVariable)[vs[1].(int)]
	}).(PropertyVariablesVariableOutput)
}

type PropertyVariablesVariableVariable struct {
	// — (Optional) A human-readable description
	Description *string `pulumi:"description"`
	// — (Required) Whether to hide the variable when debugging requests
	Hidden bool `pulumi:"hidden"`
	// — (Required) The name of the variable.
	Name string `pulumi:"name"`
	// — (Required) Whether to obscure the value when debugging requests
	Sensitive bool `pulumi:"sensitive"`
	// — (Required) The default value to assign to the variable
	Value *string `pulumi:"value"`
}

// PropertyVariablesVariableVariableInput is an input type that accepts PropertyVariablesVariableVariableArgs and PropertyVariablesVariableVariableOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableVariableInput` via:
//
//          PropertyVariablesVariableVariableArgs{...}
type PropertyVariablesVariableVariableInput interface {
	pulumi.Input

	ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput
	ToPropertyVariablesVariableVariableOutputWithContext(context.Context) PropertyVariablesVariableVariableOutput
}

type PropertyVariablesVariableVariableArgs struct {
	// — (Optional) A human-readable description
	Description pulumi.StringPtrInput `pulumi:"description"`
	// — (Required) Whether to hide the variable when debugging requests
	Hidden pulumi.BoolInput `pulumi:"hidden"`
	// — (Required) The name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Required) Whether to obscure the value when debugging requests
	Sensitive pulumi.BoolInput `pulumi:"sensitive"`
	// — (Required) The default value to assign to the variable
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PropertyVariablesVariableVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariableVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableVariableArgs) ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput {
	return i.ToPropertyVariablesVariableVariableOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableVariableArgs) ToPropertyVariablesVariableVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableVariableOutput)
}

// PropertyVariablesVariableVariableArrayInput is an input type that accepts PropertyVariablesVariableVariableArray and PropertyVariablesVariableVariableArrayOutput values.
// You can construct a concrete instance of `PropertyVariablesVariableVariableArrayInput` via:
//
//          PropertyVariablesVariableVariableArray{ PropertyVariablesVariableVariableArgs{...} }
type PropertyVariablesVariableVariableArrayInput interface {
	pulumi.Input

	ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput
	ToPropertyVariablesVariableVariableArrayOutputWithContext(context.Context) PropertyVariablesVariableVariableArrayOutput
}

type PropertyVariablesVariableVariableArray []PropertyVariablesVariableVariableInput

func (PropertyVariablesVariableVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariableVariable)(nil)).Elem()
}

func (i PropertyVariablesVariableVariableArray) ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput {
	return i.ToPropertyVariablesVariableVariableArrayOutputWithContext(context.Background())
}

func (i PropertyVariablesVariableVariableArray) ToPropertyVariablesVariableVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyVariablesVariableVariableArrayOutput)
}

type PropertyVariablesVariableVariableOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyVariablesVariableVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableVariableOutput) ToPropertyVariablesVariableVariableOutput() PropertyVariablesVariableVariableOutput {
	return o
}

func (o PropertyVariablesVariableVariableOutput) ToPropertyVariablesVariableVariableOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableOutput {
	return o
}

// — (Optional) A human-readable description
func (o PropertyVariablesVariableVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// — (Required) Whether to hide the variable when debugging requests
func (o PropertyVariablesVariableVariableOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) bool { return v.Hidden }).(pulumi.BoolOutput)
}

// — (Required) The name of the variable.
func (o PropertyVariablesVariableVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) string { return v.Name }).(pulumi.StringOutput)
}

// — (Required) Whether to obscure the value when debugging requests
func (o PropertyVariablesVariableVariableOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// — (Required) The default value to assign to the variable
func (o PropertyVariablesVariableVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PropertyVariablesVariableVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PropertyVariablesVariableVariableArrayOutput struct{ *pulumi.OutputState }

func (PropertyVariablesVariableVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PropertyVariablesVariableVariable)(nil)).Elem()
}

func (o PropertyVariablesVariableVariableArrayOutput) ToPropertyVariablesVariableVariableArrayOutput() PropertyVariablesVariableVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableVariableArrayOutput) ToPropertyVariablesVariableVariableArrayOutputWithContext(ctx context.Context) PropertyVariablesVariableVariableArrayOutput {
	return o
}

func (o PropertyVariablesVariableVariableArrayOutput) Index(i pulumi.IntInput) PropertyVariablesVariableVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PropertyVariablesVariableVariable {
		return vs[0].([]PropertyVariablesVariableVariable)[vs[1].(int)]
	}).(PropertyVariablesVariableVariableOutput)
}

type GetPropertyRulesRule struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     []GetPropertyRulesRuleBehavior `pulumi:"behaviors"`
	CriteriaMatch *string                        `pulumi:"criteriaMatch"`
	// — (Optional) Whether the property is a secure (Enhanced TLS) property or not (top-level only).
	IsSecure *bool `pulumi:"isSecure"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules     []GetPropertyRulesRuleRule     `pulumi:"rules"`
	Variables []GetPropertyRulesRuleVariable `pulumi:"variables"`
}

// GetPropertyRulesRuleInput is an input type that accepts GetPropertyRulesRuleArgs and GetPropertyRulesRuleOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleInput` via:
//
//          GetPropertyRulesRuleArgs{...}
type GetPropertyRulesRuleInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleOutput() GetPropertyRulesRuleOutput
	ToGetPropertyRulesRuleOutputWithContext(context.Context) GetPropertyRulesRuleOutput
}

type GetPropertyRulesRuleArgs struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     GetPropertyRulesRuleBehaviorArrayInput `pulumi:"behaviors"`
	CriteriaMatch pulumi.StringPtrInput                  `pulumi:"criteriaMatch"`
	// — (Optional) Whether the property is a secure (Enhanced TLS) property or not (top-level only).
	IsSecure pulumi.BoolPtrInput `pulumi:"isSecure"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules     GetPropertyRulesRuleRuleArrayInput     `pulumi:"rules"`
	Variables GetPropertyRulesRuleVariableArrayInput `pulumi:"variables"`
}

func (GetPropertyRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleArgs) ToGetPropertyRulesRuleOutput() GetPropertyRulesRuleOutput {
	return i.ToGetPropertyRulesRuleOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleArgs) ToGetPropertyRulesRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleOutput)
}

// GetPropertyRulesRuleArrayInput is an input type that accepts GetPropertyRulesRuleArray and GetPropertyRulesRuleArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleArrayInput` via:
//
//          GetPropertyRulesRuleArray{ GetPropertyRulesRuleArgs{...} }
type GetPropertyRulesRuleArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleArrayOutput() GetPropertyRulesRuleArrayOutput
	ToGetPropertyRulesRuleArrayOutputWithContext(context.Context) GetPropertyRulesRuleArrayOutput
}

type GetPropertyRulesRuleArray []GetPropertyRulesRuleInput

func (GetPropertyRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleArray) ToGetPropertyRulesRuleArrayOutput() GetPropertyRulesRuleArrayOutput {
	return i.ToGetPropertyRulesRuleArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleArray) ToGetPropertyRulesRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleArrayOutput)
}

type GetPropertyRulesRuleOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleOutput) ToGetPropertyRulesRuleOutput() GetPropertyRulesRuleOutput {
	return o
}

func (o GetPropertyRulesRuleOutput) ToGetPropertyRulesRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleOutput {
	return o
}

// — (Optional) One or more behaviors to apply to requests that match.
func (o GetPropertyRulesRuleOutput) Behaviors() GetPropertyRulesRuleBehaviorArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRule) []GetPropertyRulesRuleBehavior { return v.Behaviors }).(GetPropertyRulesRuleBehaviorArrayOutput)
}

func (o GetPropertyRulesRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

// — (Optional) Whether the property is a secure (Enhanced TLS) property or not (top-level only).
func (o GetPropertyRulesRuleOutput) IsSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRule) *bool { return v.IsSecure }).(pulumi.BoolPtrOutput)
}

// — (Optional) Child rules (may be nested five levels deep).
func (o GetPropertyRulesRuleOutput) Rules() GetPropertyRulesRuleRuleArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRule) []GetPropertyRulesRuleRule { return v.Rules }).(GetPropertyRulesRuleRuleArrayOutput)
}

func (o GetPropertyRulesRuleOutput) Variables() GetPropertyRulesRuleVariableArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRule) []GetPropertyRulesRuleVariable { return v.Variables }).(GetPropertyRulesRuleVariableArrayOutput)
}

type GetPropertyRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleArrayOutput) ToGetPropertyRulesRuleArrayOutput() GetPropertyRulesRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleArrayOutput) ToGetPropertyRulesRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRule {
		return vs[0].([]GetPropertyRulesRule)[vs[1].(int)]
	}).(GetPropertyRulesRuleOutput)
}

type GetPropertyRulesRuleBehavior struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleBehaviorOption `pulumi:"options"`
}

// GetPropertyRulesRuleBehaviorInput is an input type that accepts GetPropertyRulesRuleBehaviorArgs and GetPropertyRulesRuleBehaviorOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleBehaviorInput` via:
//
//          GetPropertyRulesRuleBehaviorArgs{...}
type GetPropertyRulesRuleBehaviorInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleBehaviorOutput() GetPropertyRulesRuleBehaviorOutput
	ToGetPropertyRulesRuleBehaviorOutputWithContext(context.Context) GetPropertyRulesRuleBehaviorOutput
}

type GetPropertyRulesRuleBehaviorArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleBehaviorArgs) ToGetPropertyRulesRuleBehaviorOutput() GetPropertyRulesRuleBehaviorOutput {
	return i.ToGetPropertyRulesRuleBehaviorOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleBehaviorArgs) ToGetPropertyRulesRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleBehaviorOutput)
}

// GetPropertyRulesRuleBehaviorArrayInput is an input type that accepts GetPropertyRulesRuleBehaviorArray and GetPropertyRulesRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleBehaviorArrayInput` via:
//
//          GetPropertyRulesRuleBehaviorArray{ GetPropertyRulesRuleBehaviorArgs{...} }
type GetPropertyRulesRuleBehaviorArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleBehaviorArrayOutput() GetPropertyRulesRuleBehaviorArrayOutput
	ToGetPropertyRulesRuleBehaviorArrayOutputWithContext(context.Context) GetPropertyRulesRuleBehaviorArrayOutput
}

type GetPropertyRulesRuleBehaviorArray []GetPropertyRulesRuleBehaviorInput

func (GetPropertyRulesRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleBehaviorArray) ToGetPropertyRulesRuleBehaviorArrayOutput() GetPropertyRulesRuleBehaviorArrayOutput {
	return i.ToGetPropertyRulesRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleBehaviorArray) ToGetPropertyRulesRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleBehaviorArrayOutput)
}

type GetPropertyRulesRuleBehaviorOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleBehaviorOutput) ToGetPropertyRulesRuleBehaviorOutput() GetPropertyRulesRuleBehaviorOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorOutput) ToGetPropertyRulesRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleBehaviorOutput) Options() GetPropertyRulesRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleBehavior) []GetPropertyRulesRuleBehaviorOption { return v.Options }).(GetPropertyRulesRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleBehaviorArrayOutput) ToGetPropertyRulesRuleBehaviorArrayOutput() GetPropertyRulesRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorArrayOutput) ToGetPropertyRulesRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleBehavior {
		return vs[0].([]GetPropertyRulesRuleBehavior)[vs[1].(int)]
	}).(GetPropertyRulesRuleBehaviorOutput)
}

type GetPropertyRulesRuleBehaviorOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleBehaviorOptionInput is an input type that accepts GetPropertyRulesRuleBehaviorOptionArgs and GetPropertyRulesRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleBehaviorOptionInput` via:
//
//          GetPropertyRulesRuleBehaviorOptionArgs{...}
type GetPropertyRulesRuleBehaviorOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleBehaviorOptionOutput() GetPropertyRulesRuleBehaviorOptionOutput
	ToGetPropertyRulesRuleBehaviorOptionOutputWithContext(context.Context) GetPropertyRulesRuleBehaviorOptionOutput
}

type GetPropertyRulesRuleBehaviorOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleBehaviorOptionArgs) ToGetPropertyRulesRuleBehaviorOptionOutput() GetPropertyRulesRuleBehaviorOptionOutput {
	return i.ToGetPropertyRulesRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleBehaviorOptionArgs) ToGetPropertyRulesRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleBehaviorOptionOutput)
}

// GetPropertyRulesRuleBehaviorOptionArrayInput is an input type that accepts GetPropertyRulesRuleBehaviorOptionArray and GetPropertyRulesRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleBehaviorOptionArrayInput` via:
//
//          GetPropertyRulesRuleBehaviorOptionArray{ GetPropertyRulesRuleBehaviorOptionArgs{...} }
type GetPropertyRulesRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleBehaviorOptionArrayOutput
	ToGetPropertyRulesRuleBehaviorOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleBehaviorOptionArrayOutput
}

type GetPropertyRulesRuleBehaviorOptionArray []GetPropertyRulesRuleBehaviorOptionInput

func (GetPropertyRulesRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleBehaviorOptionArray) ToGetPropertyRulesRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleBehaviorOptionArrayOutput {
	return i.ToGetPropertyRulesRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleBehaviorOptionArray) ToGetPropertyRulesRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleBehaviorOptionOutput) ToGetPropertyRulesRuleBehaviorOptionOutput() GetPropertyRulesRuleBehaviorOptionOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorOptionOutput) ToGetPropertyRulesRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleBehaviorOption {
		return vs[0].([]GetPropertyRulesRuleBehaviorOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleBehaviorOptionOutput)
}

type GetPropertyRulesRuleRule struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     []GetPropertyRulesRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                            `pulumi:"comment"`
	CriteriaMatch *string                            `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias []GetPropertyRulesRuleRuleCriteria `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules []GetPropertyRulesRuleRuleRule `pulumi:"rules"`
}

// GetPropertyRulesRuleRuleInput is an input type that accepts GetPropertyRulesRuleRuleArgs and GetPropertyRulesRuleRuleOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleInput` via:
//
//          GetPropertyRulesRuleRuleArgs{...}
type GetPropertyRulesRuleRuleInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleOutput() GetPropertyRulesRuleRuleOutput
	ToGetPropertyRulesRuleRuleOutputWithContext(context.Context) GetPropertyRulesRuleRuleOutput
}

type GetPropertyRulesRuleRuleArgs struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     GetPropertyRulesRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                      `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                      `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias GetPropertyRulesRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules GetPropertyRulesRuleRuleRuleArrayInput `pulumi:"rules"`
}

func (GetPropertyRulesRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleArgs) ToGetPropertyRulesRuleRuleOutput() GetPropertyRulesRuleRuleOutput {
	return i.ToGetPropertyRulesRuleRuleOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleArgs) ToGetPropertyRulesRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleOutput)
}

// GetPropertyRulesRuleRuleArrayInput is an input type that accepts GetPropertyRulesRuleRuleArray and GetPropertyRulesRuleRuleArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleArrayInput` via:
//
//          GetPropertyRulesRuleRuleArray{ GetPropertyRulesRuleRuleArgs{...} }
type GetPropertyRulesRuleRuleArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleArrayOutput() GetPropertyRulesRuleRuleArrayOutput
	ToGetPropertyRulesRuleRuleArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleArrayOutput
}

type GetPropertyRulesRuleRuleArray []GetPropertyRulesRuleRuleInput

func (GetPropertyRulesRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleArray) ToGetPropertyRulesRuleRuleArrayOutput() GetPropertyRulesRuleRuleArrayOutput {
	return i.ToGetPropertyRulesRuleRuleArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleArray) ToGetPropertyRulesRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleOutput) ToGetPropertyRulesRuleRuleOutput() GetPropertyRulesRuleRuleOutput {
	return o
}

func (o GetPropertyRulesRuleRuleOutput) ToGetPropertyRulesRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleOutput {
	return o
}

// — (Optional) One or more behaviors to apply to requests that match.
func (o GetPropertyRulesRuleRuleOutput) Behaviors() GetPropertyRulesRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) []GetPropertyRulesRuleRuleBehavior { return v.Behaviors }).(GetPropertyRulesRuleRuleBehaviorArrayOutput)
}

func (o GetPropertyRulesRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

// — (Optional) One or more criteria to match requests on.
func (o GetPropertyRulesRuleRuleOutput) Criterias() GetPropertyRulesRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) []GetPropertyRulesRuleRuleCriteria { return v.Criterias }).(GetPropertyRulesRuleRuleCriteriaArrayOutput)
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) Child rules (may be nested five levels deep).
func (o GetPropertyRulesRuleRuleOutput) Rules() GetPropertyRulesRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRule) []GetPropertyRulesRuleRuleRule { return v.Rules }).(GetPropertyRulesRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleArrayOutput() GetPropertyRulesRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRule {
		return vs[0].([]GetPropertyRulesRuleRule)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleOutput)
}

type GetPropertyRulesRuleRuleBehavior struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleBehaviorOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleBehaviorInput is an input type that accepts GetPropertyRulesRuleRuleBehaviorArgs and GetPropertyRulesRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleBehaviorInput` via:
//
//          GetPropertyRulesRuleRuleBehaviorArgs{...}
type GetPropertyRulesRuleRuleBehaviorInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleBehaviorOutput
	ToGetPropertyRulesRuleRuleBehaviorOutputWithContext(context.Context) GetPropertyRulesRuleRuleBehaviorOutput
}

type GetPropertyRulesRuleRuleBehaviorArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleBehaviorOutput {
	return i.ToGetPropertyRulesRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleBehaviorOutput)
}

// GetPropertyRulesRuleRuleBehaviorArrayInput is an input type that accepts GetPropertyRulesRuleRuleBehaviorArray and GetPropertyRulesRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleBehaviorArrayInput` via:
//
//          GetPropertyRulesRuleRuleBehaviorArray{ GetPropertyRulesRuleRuleBehaviorArgs{...} }
type GetPropertyRulesRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleBehaviorArrayOutput
	ToGetPropertyRulesRuleRuleBehaviorArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleBehaviorArrayOutput
}

type GetPropertyRulesRuleRuleBehaviorArray []GetPropertyRulesRuleRuleBehaviorInput

func (GetPropertyRulesRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleBehaviorArrayOutput {
	return i.ToGetPropertyRulesRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleBehaviorArrayOutput)
}

type GetPropertyRulesRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleBehaviorOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleBehaviorOutput) Options() GetPropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleBehavior) []GetPropertyRulesRuleRuleBehaviorOption { return v.Options }).(GetPropertyRulesRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleBehavior {
		return vs[0].([]GetPropertyRulesRuleRuleBehavior)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleBehaviorOutput)
}

type GetPropertyRulesRuleRuleBehaviorOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleBehaviorOptionInput is an input type that accepts GetPropertyRulesRuleRuleBehaviorOptionArgs and GetPropertyRulesRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleBehaviorOptionInput` via:
//
//          GetPropertyRulesRuleRuleBehaviorOptionArgs{...}
type GetPropertyRulesRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleBehaviorOptionOutput
	ToGetPropertyRulesRuleRuleBehaviorOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleBehaviorOptionOutput
}

type GetPropertyRulesRuleRuleBehaviorOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleBehaviorOptionOutput {
	return i.ToGetPropertyRulesRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleBehaviorOptionOutput)
}

// GetPropertyRulesRuleRuleBehaviorOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleBehaviorOptionArray and GetPropertyRulesRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleBehaviorOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleBehaviorOptionArray{ GetPropertyRulesRuleRuleBehaviorOptionArgs{...} }
type GetPropertyRulesRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleBehaviorOptionArrayOutput
	ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleBehaviorOptionArrayOutput
}

type GetPropertyRulesRuleRuleBehaviorOptionArray []GetPropertyRulesRuleRuleBehaviorOptionInput

func (GetPropertyRulesRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleBehaviorOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleBehaviorOption {
		return vs[0].([]GetPropertyRulesRuleRuleBehaviorOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleBehaviorOptionOutput)
}

type GetPropertyRulesRuleRuleCriteria struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleCriteriaOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleCriteriaInput is an input type that accepts GetPropertyRulesRuleRuleCriteriaArgs and GetPropertyRulesRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleCriteriaInput` via:
//
//          GetPropertyRulesRuleRuleCriteriaArgs{...}
type GetPropertyRulesRuleRuleCriteriaInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleCriteriaOutput
	ToGetPropertyRulesRuleRuleCriteriaOutputWithContext(context.Context) GetPropertyRulesRuleRuleCriteriaOutput
}

type GetPropertyRulesRuleRuleCriteriaArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleCriteriaOutput {
	return i.ToGetPropertyRulesRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleCriteriaOutput)
}

// GetPropertyRulesRuleRuleCriteriaArrayInput is an input type that accepts GetPropertyRulesRuleRuleCriteriaArray and GetPropertyRulesRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleCriteriaArrayInput` via:
//
//          GetPropertyRulesRuleRuleCriteriaArray{ GetPropertyRulesRuleRuleCriteriaArgs{...} }
type GetPropertyRulesRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleCriteriaArrayOutput
	ToGetPropertyRulesRuleRuleCriteriaArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleCriteriaArrayOutput
}

type GetPropertyRulesRuleRuleCriteriaArray []GetPropertyRulesRuleRuleCriteriaInput

func (GetPropertyRulesRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleCriteriaArrayOutput {
	return i.ToGetPropertyRulesRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleCriteriaArrayOutput)
}

type GetPropertyRulesRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleCriteriaOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleCriteriaOutput) Options() GetPropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleCriteria) []GetPropertyRulesRuleRuleCriteriaOption { return v.Options }).(GetPropertyRulesRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleCriteria {
		return vs[0].([]GetPropertyRulesRuleRuleCriteria)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleCriteriaOutput)
}

type GetPropertyRulesRuleRuleCriteriaOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleCriteriaOptionInput is an input type that accepts GetPropertyRulesRuleRuleCriteriaOptionArgs and GetPropertyRulesRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleCriteriaOptionInput` via:
//
//          GetPropertyRulesRuleRuleCriteriaOptionArgs{...}
type GetPropertyRulesRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleCriteriaOptionOutput
	ToGetPropertyRulesRuleRuleCriteriaOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleCriteriaOptionOutput
}

type GetPropertyRulesRuleRuleCriteriaOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleCriteriaOptionOutput {
	return i.ToGetPropertyRulesRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleCriteriaOptionOutput)
}

// GetPropertyRulesRuleRuleCriteriaOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleCriteriaOptionArray and GetPropertyRulesRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleCriteriaOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleCriteriaOptionArray{ GetPropertyRulesRuleRuleCriteriaOptionArgs{...} }
type GetPropertyRulesRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleCriteriaOptionArrayOutput
	ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleCriteriaOptionArrayOutput
}

type GetPropertyRulesRuleRuleCriteriaOptionArray []GetPropertyRulesRuleRuleCriteriaOptionInput

func (GetPropertyRulesRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleCriteriaOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleCriteriaOption {
		return vs[0].([]GetPropertyRulesRuleRuleCriteriaOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleCriteriaOptionOutput)
}

type GetPropertyRulesRuleRuleRule struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     []GetPropertyRulesRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                                `pulumi:"comment"`
	CriteriaMatch *string                                `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias []GetPropertyRulesRuleRuleRuleCriteria `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules []GetPropertyRulesRuleRuleRuleRule `pulumi:"rules"`
}

// GetPropertyRulesRuleRuleRuleInput is an input type that accepts GetPropertyRulesRuleRuleRuleArgs and GetPropertyRulesRuleRuleRuleOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleInput` via:
//
//          GetPropertyRulesRuleRuleRuleArgs{...}
type GetPropertyRulesRuleRuleRuleInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleOutput
	ToGetPropertyRulesRuleRuleRuleOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleOutput
}

type GetPropertyRulesRuleRuleRuleArgs struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     GetPropertyRulesRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                          `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                          `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias GetPropertyRulesRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules GetPropertyRulesRuleRuleRuleRuleArrayInput `pulumi:"rules"`
}

func (GetPropertyRulesRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleOutput {
	return i.ToGetPropertyRulesRuleRuleRuleOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleOutput)
}

// GetPropertyRulesRuleRuleRuleArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleArray and GetPropertyRulesRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleArray{ GetPropertyRulesRuleRuleRuleArgs{...} }
type GetPropertyRulesRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleArrayOutput
	ToGetPropertyRulesRuleRuleRuleArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleArrayOutput
}

type GetPropertyRulesRuleRuleRuleArray []GetPropertyRulesRuleRuleRuleInput

func (GetPropertyRulesRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleOutput {
	return o
}

// — (Optional) One or more behaviors to apply to requests that match.
func (o GetPropertyRulesRuleRuleRuleOutput) Behaviors() GetPropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) []GetPropertyRulesRuleRuleRuleBehavior { return v.Behaviors }).(GetPropertyRulesRuleRuleRuleBehaviorArrayOutput)
}

func (o GetPropertyRulesRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

// — (Optional) One or more criteria to match requests on.
func (o GetPropertyRulesRuleRuleRuleOutput) Criterias() GetPropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) []GetPropertyRulesRuleRuleRuleCriteria { return v.Criterias }).(GetPropertyRulesRuleRuleRuleCriteriaArrayOutput)
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) Child rules (may be nested five levels deep).
func (o GetPropertyRulesRuleRuleRuleOutput) Rules() GetPropertyRulesRuleRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRule) []GetPropertyRulesRuleRuleRuleRule { return v.Rules }).(GetPropertyRulesRuleRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRule {
		return vs[0].([]GetPropertyRulesRuleRuleRule)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleOutput)
}

type GetPropertyRulesRuleRuleRuleBehavior struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleBehaviorInput is an input type that accepts GetPropertyRulesRuleRuleRuleBehaviorArgs and GetPropertyRulesRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleBehaviorInput` via:
//
//          GetPropertyRulesRuleRuleRuleBehaviorArgs{...}
type GetPropertyRulesRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleBehaviorOutput
	ToGetPropertyRulesRuleRuleRuleBehaviorOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleBehaviorOutput
}

type GetPropertyRulesRuleRuleRuleBehaviorArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleBehaviorOutput {
	return i.ToGetPropertyRulesRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleBehaviorOutput)
}

// GetPropertyRulesRuleRuleRuleBehaviorArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleBehaviorArray and GetPropertyRulesRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleBehaviorArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleBehaviorArray{ GetPropertyRulesRuleRuleRuleBehaviorArgs{...} }
type GetPropertyRulesRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorArrayOutput
	ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleBehaviorArrayOutput
}

type GetPropertyRulesRuleRuleRuleBehaviorArray []GetPropertyRulesRuleRuleRuleBehaviorInput

func (GetPropertyRulesRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleBehaviorArrayOutput)
}

type GetPropertyRulesRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleBehaviorOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleBehaviorOutput) Options() GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleBehavior) []GetPropertyRulesRuleRuleRuleBehaviorOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleBehavior {
		return vs[0].([]GetPropertyRulesRuleRuleRuleBehavior)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleBehaviorOutput)
}

type GetPropertyRulesRuleRuleRuleBehaviorOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleBehaviorOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleBehaviorOptionArgs and GetPropertyRulesRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleBehaviorOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleBehaviorOptionArgs{...}
type GetPropertyRulesRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionOutput
	ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionOutput
}

type GetPropertyRulesRuleRuleRuleBehaviorOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleBehaviorOptionOutput)
}

// GetPropertyRulesRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleBehaviorOptionArray and GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleBehaviorOptionArray{ GetPropertyRulesRuleRuleRuleBehaviorOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleBehaviorOptionArray []GetPropertyRulesRuleRuleRuleBehaviorOptionInput

func (GetPropertyRulesRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleBehaviorOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleBehaviorOptionOutput)
}

type GetPropertyRulesRuleRuleRuleCriteria struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleCriteriaInput is an input type that accepts GetPropertyRulesRuleRuleRuleCriteriaArgs and GetPropertyRulesRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleCriteriaInput` via:
//
//          GetPropertyRulesRuleRuleRuleCriteriaArgs{...}
type GetPropertyRulesRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleCriteriaOutput
	ToGetPropertyRulesRuleRuleRuleCriteriaOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleCriteriaOutput
}

type GetPropertyRulesRuleRuleRuleCriteriaArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleCriteriaOutput {
	return i.ToGetPropertyRulesRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleCriteriaOutput)
}

// GetPropertyRulesRuleRuleRuleCriteriaArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleCriteriaArray and GetPropertyRulesRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleCriteriaArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleCriteriaArray{ GetPropertyRulesRuleRuleRuleCriteriaArgs{...} }
type GetPropertyRulesRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaArrayOutput
	ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleCriteriaArrayOutput
}

type GetPropertyRulesRuleRuleRuleCriteriaArray []GetPropertyRulesRuleRuleRuleCriteriaInput

func (GetPropertyRulesRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleCriteriaArrayOutput)
}

type GetPropertyRulesRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleCriteriaOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleCriteriaOutput) Options() GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleCriteria) []GetPropertyRulesRuleRuleRuleCriteriaOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleCriteria {
		return vs[0].([]GetPropertyRulesRuleRuleRuleCriteria)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleCriteriaOutput)
}

type GetPropertyRulesRuleRuleRuleCriteriaOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleCriteriaOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleCriteriaOptionArgs and GetPropertyRulesRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleCriteriaOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleCriteriaOptionArgs{...}
type GetPropertyRulesRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionOutput
	ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionOutput
}

type GetPropertyRulesRuleRuleRuleCriteriaOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleCriteriaOptionOutput)
}

// GetPropertyRulesRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleCriteriaOptionArray and GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleCriteriaOptionArray{ GetPropertyRulesRuleRuleRuleCriteriaOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleCriteriaOptionArray []GetPropertyRulesRuleRuleRuleCriteriaOptionInput

func (GetPropertyRulesRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleCriteriaOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleCriteriaOptionOutput)
}

type GetPropertyRulesRuleRuleRuleRule struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     []GetPropertyRulesRuleRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                                    `pulumi:"comment"`
	CriteriaMatch *string                                    `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias []GetPropertyRulesRuleRuleRuleRuleCriteria `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules []GetPropertyRulesRuleRuleRuleRuleRule `pulumi:"rules"`
}

// GetPropertyRulesRuleRuleRuleRuleInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleArgs and GetPropertyRulesRuleRuleRuleRuleOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleArgs{...}
type GetPropertyRulesRuleRuleRuleRuleInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleOutput
	ToGetPropertyRulesRuleRuleRuleRuleOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleOutput
}

type GetPropertyRulesRuleRuleRuleRuleArgs struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     GetPropertyRulesRuleRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                              `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                              `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias GetPropertyRulesRuleRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) Child rules (may be nested five levels deep).
	Rules GetPropertyRulesRuleRuleRuleRuleRuleArrayInput `pulumi:"rules"`
}

func (GetPropertyRulesRuleRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleOutput)
}

// GetPropertyRulesRuleRuleRuleRuleArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleArray and GetPropertyRulesRuleRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleArray{ GetPropertyRulesRuleRuleRuleRuleArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleArray []GetPropertyRulesRuleRuleRuleRuleInput

func (GetPropertyRulesRuleRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleOutput {
	return o
}

// — (Optional) One or more behaviors to apply to requests that match.
func (o GetPropertyRulesRuleRuleRuleRuleOutput) Behaviors() GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) []GetPropertyRulesRuleRuleRuleRuleBehavior {
		return v.Behaviors
	}).(GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput)
}

func (o GetPropertyRulesRuleRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesRuleRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

// — (Optional) One or more criteria to match requests on.
func (o GetPropertyRulesRuleRuleRuleRuleOutput) Criterias() GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) []GetPropertyRulesRuleRuleRuleRuleCriteria {
		return v.Criterias
	}).(GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput)
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) Child rules (may be nested five levels deep).
func (o GetPropertyRulesRuleRuleRuleRuleOutput) Rules() GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRule) []GetPropertyRulesRuleRuleRuleRuleRule { return v.Rules }).(GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRule {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRule)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehavior struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleRuleBehaviorInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleBehaviorArgs and GetPropertyRulesRuleRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleBehaviorInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleBehaviorArgs{...}
type GetPropertyRulesRuleRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOutput
	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOutput
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleBehaviorOutput)
}

// GetPropertyRulesRuleRuleRuleRuleBehaviorArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleBehaviorArray and GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleBehaviorArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleBehaviorArray{ GetPropertyRulesRuleRuleRuleRuleBehaviorArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorArray []GetPropertyRulesRuleRuleRuleRuleBehaviorInput

func (GetPropertyRulesRuleRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOutput) Options() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleBehavior) []GetPropertyRulesRuleRuleRuleRuleBehaviorOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleBehavior {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleBehavior)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleBehaviorOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleRuleBehaviorOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs and GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleBehaviorOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs{...}
type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput
	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput)
}

// GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray and GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray{ GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray []GetPropertyRulesRuleRuleRuleRuleBehaviorOptionInput

func (GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleBehaviorOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteria struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleRuleCriteriaInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleCriteriaArgs and GetPropertyRulesRuleRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleCriteriaInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleCriteriaArgs{...}
type GetPropertyRulesRuleRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOutput
	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOutput
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleCriteriaOutput)
}

// GetPropertyRulesRuleRuleRuleRuleCriteriaArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleCriteriaArray and GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleCriteriaArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleCriteriaArray{ GetPropertyRulesRuleRuleRuleRuleCriteriaArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaArray []GetPropertyRulesRuleRuleRuleRuleCriteriaInput

func (GetPropertyRulesRuleRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOutput) Options() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleCriteria) []GetPropertyRulesRuleRuleRuleRuleCriteriaOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleCriteria {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleCriteria)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleCriteriaOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleRuleCriteriaOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs and GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleCriteriaOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs{...}
type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput
	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput)
}

// GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray and GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray{ GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray []GetPropertyRulesRuleRuleRuleRuleCriteriaOptionInput

func (GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleCriteriaOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRule struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     []GetPropertyRulesRuleRuleRuleRuleRuleBehavior `pulumi:"behaviors"`
	Comment       *string                                        `pulumi:"comment"`
	CriteriaMatch *string                                        `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias []GetPropertyRulesRuleRuleRuleRuleRuleCriteria `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
}

// GetPropertyRulesRuleRuleRuleRuleRuleInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleArgs and GetPropertyRulesRuleRuleRuleRuleRuleOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleArgs{...}
type GetPropertyRulesRuleRuleRuleRuleRuleInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleRuleOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleArgs struct {
	// — (Optional) One or more behaviors to apply to requests that match.
	Behaviors     GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput `pulumi:"behaviors"`
	Comment       pulumi.StringPtrInput                                  `pulumi:"comment"`
	CriteriaMatch pulumi.StringPtrInput                                  `pulumi:"criteriaMatch"`
	// — (Optional) One or more criteria to match requests on.
	Criterias GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput `pulumi:"criterias"`
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPropertyRulesRuleRuleRuleRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleRuleOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleOutput)
}

// GetPropertyRulesRuleRuleRuleRuleRuleArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleArray and GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleArray{ GetPropertyRulesRuleRuleRuleRuleRuleArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleRuleArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleArray []GetPropertyRulesRuleRuleRuleRuleRuleInput

func (GetPropertyRulesRuleRuleRuleRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleArray) ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleOutput() GetPropertyRulesRuleRuleRuleRuleRuleOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleOutput {
	return o
}

// — (Optional) One or more behaviors to apply to requests that match.
func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) Behaviors() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRule) []GetPropertyRulesRuleRuleRuleRuleRuleBehavior {
		return v.Behaviors
	}).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput)
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRule) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) CriteriaMatch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRule) *string { return v.CriteriaMatch }).(pulumi.StringPtrOutput)
}

// — (Optional) One or more criteria to match requests on.
func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) Criterias() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRule) []GetPropertyRulesRuleRuleRuleRuleRuleCriteria {
		return v.Criterias
	}).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput)
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRule) string { return v.Name }).(pulumi.StringOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRule)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleRule {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleRule)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleRuleOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehavior struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleRuleRuleBehaviorInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs and GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleBehaviorInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs{...}
type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput)
}

// GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray and GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray{ GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray []GetPropertyRulesRuleRuleRuleRuleRuleBehaviorInput

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArray) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleBehavior) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput) Options() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleBehavior) []GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleBehavior)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleRuleBehavior {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleRuleBehavior)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs and GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs{...}
type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput)
}

// GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray and GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray{ GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray []GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionInput

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArray) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteria struct {
	// — (Required) The name of the behavior.
	Name string `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options []GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption `pulumi:"options"`
}

// GetPropertyRulesRuleRuleRuleRuleRuleCriteriaInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs and GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleCriteriaInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs{...}
type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs struct {
	// — (Required) The name of the behavior.
	Name pulumi.StringInput `pulumi:"name"`
	// — (Optional) One or more options for the behavior.
	Options GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput `pulumi:"options"`
}

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput)
}

// GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray and GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray{ GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray []GetPropertyRulesRuleRuleRuleRuleRuleCriteriaInput

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArray) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return o
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleCriteria) string { return v.Name }).(pulumi.StringOutput)
}

// — (Optional) One or more options for the behavior.
func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput) Options() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleCriteria) []GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption {
		return v.Options
	}).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleCriteria)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleRuleCriteria {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleRuleCriteria)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption struct {
	// — (Required) The option name.
	Key string `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values []string `pulumi:"values"`
}

// GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs and GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs{...}
type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs struct {
	// — (Required) The option name.
	Key pulumi.StringInput `pulumi:"key"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// — (Optional) An array of values for the option.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput)
}

// GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput is an input type that accepts GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray and GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput` via:
//
//          GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray{ GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArgs{...} }
type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput
	ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray []GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionInput

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return i.ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArray) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return o
}

// — (Required) The option name.
func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption) string { return v.Key }).(pulumi.StringOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// — (Optional) An array of values for the option.
func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption)(nil)).Elem()
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput() GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) ToGetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput {
	return o
}

func (o GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption {
		return vs[0].([]GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOption)[vs[1].(int)]
	}).(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput)
}

type GetPropertyRulesRuleVariable struct {
	Description *string `pulumi:"description"`
	Hidden      bool    `pulumi:"hidden"`
	// — (Required) The name of the behavior.
	Name      string `pulumi:"name"`
	Sensitive bool   `pulumi:"sensitive"`
	// — (Optional) A single value for the option.
	Value *string `pulumi:"value"`
}

// GetPropertyRulesRuleVariableInput is an input type that accepts GetPropertyRulesRuleVariableArgs and GetPropertyRulesRuleVariableOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleVariableInput` via:
//
//          GetPropertyRulesRuleVariableArgs{...}
type GetPropertyRulesRuleVariableInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleVariableOutput() GetPropertyRulesRuleVariableOutput
	ToGetPropertyRulesRuleVariableOutputWithContext(context.Context) GetPropertyRulesRuleVariableOutput
}

type GetPropertyRulesRuleVariableArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Hidden      pulumi.BoolInput      `pulumi:"hidden"`
	// — (Required) The name of the behavior.
	Name      pulumi.StringInput `pulumi:"name"`
	Sensitive pulumi.BoolInput   `pulumi:"sensitive"`
	// — (Optional) A single value for the option.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetPropertyRulesRuleVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleVariable)(nil)).Elem()
}

func (i GetPropertyRulesRuleVariableArgs) ToGetPropertyRulesRuleVariableOutput() GetPropertyRulesRuleVariableOutput {
	return i.ToGetPropertyRulesRuleVariableOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleVariableArgs) ToGetPropertyRulesRuleVariableOutputWithContext(ctx context.Context) GetPropertyRulesRuleVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleVariableOutput)
}

// GetPropertyRulesRuleVariableArrayInput is an input type that accepts GetPropertyRulesRuleVariableArray and GetPropertyRulesRuleVariableArrayOutput values.
// You can construct a concrete instance of `GetPropertyRulesRuleVariableArrayInput` via:
//
//          GetPropertyRulesRuleVariableArray{ GetPropertyRulesRuleVariableArgs{...} }
type GetPropertyRulesRuleVariableArrayInput interface {
	pulumi.Input

	ToGetPropertyRulesRuleVariableArrayOutput() GetPropertyRulesRuleVariableArrayOutput
	ToGetPropertyRulesRuleVariableArrayOutputWithContext(context.Context) GetPropertyRulesRuleVariableArrayOutput
}

type GetPropertyRulesRuleVariableArray []GetPropertyRulesRuleVariableInput

func (GetPropertyRulesRuleVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleVariable)(nil)).Elem()
}

func (i GetPropertyRulesRuleVariableArray) ToGetPropertyRulesRuleVariableArrayOutput() GetPropertyRulesRuleVariableArrayOutput {
	return i.ToGetPropertyRulesRuleVariableArrayOutputWithContext(context.Background())
}

func (i GetPropertyRulesRuleVariableArray) ToGetPropertyRulesRuleVariableArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPropertyRulesRuleVariableArrayOutput)
}

type GetPropertyRulesRuleVariableOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPropertyRulesRuleVariable)(nil)).Elem()
}

func (o GetPropertyRulesRuleVariableOutput) ToGetPropertyRulesRuleVariableOutput() GetPropertyRulesRuleVariableOutput {
	return o
}

func (o GetPropertyRulesRuleVariableOutput) ToGetPropertyRulesRuleVariableOutputWithContext(ctx context.Context) GetPropertyRulesRuleVariableOutput {
	return o
}

func (o GetPropertyRulesRuleVariableOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleVariable) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetPropertyRulesRuleVariableOutput) Hidden() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleVariable) bool { return v.Hidden }).(pulumi.BoolOutput)
}

// — (Required) The name of the behavior.
func (o GetPropertyRulesRuleVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPropertyRulesRuleVariableOutput) Sensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleVariable) bool { return v.Sensitive }).(pulumi.BoolOutput)
}

// — (Optional) A single value for the option.
func (o GetPropertyRulesRuleVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPropertyRulesRuleVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetPropertyRulesRuleVariableArrayOutput struct{ *pulumi.OutputState }

func (GetPropertyRulesRuleVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPropertyRulesRuleVariable)(nil)).Elem()
}

func (o GetPropertyRulesRuleVariableArrayOutput) ToGetPropertyRulesRuleVariableArrayOutput() GetPropertyRulesRuleVariableArrayOutput {
	return o
}

func (o GetPropertyRulesRuleVariableArrayOutput) ToGetPropertyRulesRuleVariableArrayOutputWithContext(ctx context.Context) GetPropertyRulesRuleVariableArrayOutput {
	return o
}

func (o GetPropertyRulesRuleVariableArrayOutput) Index(i pulumi.IntInput) GetPropertyRulesRuleVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPropertyRulesRuleVariable {
		return vs[0].([]GetPropertyRulesRuleVariable)[vs[1].(int)]
	}).(GetPropertyRulesRuleVariableOutput)
}

func init() {
	pulumi.RegisterOutputType(PropertyOriginOutput{})
	pulumi.RegisterOutputType(PropertyOriginArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleBehaviorOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleVariableOutput{})
	pulumi.RegisterOutputType(PropertyRulesRuleVariableArrayOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableArrayOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableVariableOutput{})
	pulumi.RegisterOutputType(PropertyVariablesVariableVariableArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleBehaviorOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleBehaviorOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleRuleRuleRuleRuleCriteriaOptionArrayOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleVariableOutput{})
	pulumi.RegisterOutputType(GetPropertyRulesRuleVariableArrayOutput{})
}
