// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getAppSecHostnameCoverageOverlapping` data source to retrieve information about the configuration versions that contain a hostname also included in the current configuration version. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#gethostnamecoverageoverlapping).
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := akamai.GetAppSecHostnameCoverageOverlapping(ctx, &GetAppSecHostnameCoverageOverlappingArgs{
// 			ConfigId: 43253,
// 			Hostname: "example.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetAppSecHostnameCoverageOverlapping(ctx *pulumi.Context, args *GetAppSecHostnameCoverageOverlappingArgs, opts ...pulumi.InvokeOption) (*GetAppSecHostnameCoverageOverlappingResult, error) {
	var rv GetAppSecHostnameCoverageOverlappingResult
	err := ctx.Invoke("akamai:index/getAppSecHostnameCoverageOverlapping:getAppSecHostnameCoverageOverlapping", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.
type GetAppSecHostnameCoverageOverlappingArgs struct {
	// The configuration ID.
	ConfigId int `pulumi:"configId"`
	// The hostname for which to retrieve information.
	Hostname string `pulumi:"hostname"`
}

// A collection of values returned by getAppSecHostnameCoverageOverlapping.
type GetAppSecHostnameCoverageOverlappingResult struct {
	ConfigId int    `pulumi:"configId"`
	Hostname string `pulumi:"hostname"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A JSON-formatted list of the overlap information.
	Json string `pulumi:"json"`
	// A tabular display of the overlap information.
	OutputText string `pulumi:"outputText"`
}

func GetAppSecHostnameCoverageOverlappingOutput(ctx *pulumi.Context, args GetAppSecHostnameCoverageOverlappingOutputArgs, opts ...pulumi.InvokeOption) GetAppSecHostnameCoverageOverlappingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecHostnameCoverageOverlappingResult, error) {
			args := v.(GetAppSecHostnameCoverageOverlappingArgs)
			r, err := GetAppSecHostnameCoverageOverlapping(ctx, &args, opts...)
			return *r, err
		}).(GetAppSecHostnameCoverageOverlappingResultOutput)
}

// A collection of arguments for invoking getAppSecHostnameCoverageOverlapping.
type GetAppSecHostnameCoverageOverlappingOutputArgs struct {
	// The configuration ID.
	ConfigId pulumi.IntInput `pulumi:"configId"`
	// The hostname for which to retrieve information.
	Hostname pulumi.StringInput `pulumi:"hostname"`
}

func (GetAppSecHostnameCoverageOverlappingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecHostnameCoverageOverlappingArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecHostnameCoverageOverlapping.
type GetAppSecHostnameCoverageOverlappingResultOutput struct{ *pulumi.OutputState }

func (GetAppSecHostnameCoverageOverlappingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecHostnameCoverageOverlappingResult)(nil)).Elem()
}

func (o GetAppSecHostnameCoverageOverlappingResultOutput) ToGetAppSecHostnameCoverageOverlappingResultOutput() GetAppSecHostnameCoverageOverlappingResultOutput {
	return o
}

func (o GetAppSecHostnameCoverageOverlappingResultOutput) ToGetAppSecHostnameCoverageOverlappingResultOutputWithContext(ctx context.Context) GetAppSecHostnameCoverageOverlappingResultOutput {
	return o
}

func (o GetAppSecHostnameCoverageOverlappingResultOutput) ConfigId() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSecHostnameCoverageOverlappingResult) int { return v.ConfigId }).(pulumi.IntOutput)
}

func (o GetAppSecHostnameCoverageOverlappingResultOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecHostnameCoverageOverlappingResult) string { return v.Hostname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecHostnameCoverageOverlappingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecHostnameCoverageOverlappingResult) string { return v.Id }).(pulumi.StringOutput)
}

// A JSON-formatted list of the overlap information.
func (o GetAppSecHostnameCoverageOverlappingResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecHostnameCoverageOverlappingResult) string { return v.Json }).(pulumi.StringOutput)
}

// A tabular display of the overlap information.
func (o GetAppSecHostnameCoverageOverlappingResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecHostnameCoverageOverlappingResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecHostnameCoverageOverlappingResultOutput{})
}
