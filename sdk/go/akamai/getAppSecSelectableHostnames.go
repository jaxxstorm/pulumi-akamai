// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getAppSecSelectableHostnames` data source to retrieve the list of hostnames that may be protected under a given security configuration. You can specify the list to be retrieved either by supplying the name of a security configuration, or by supplying a group ID and contract ID.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &GetAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := configuration.ConfigId
// 		selectableHostnamesAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, &GetAppSecSelectableHostnamesArgs{
// 			ConfigId: &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("selectableHostnames", selectableHostnamesAppSecSelectableHostnames.Hostnames)
// 		ctx.Export("selectableHostnamesJson", selectableHostnamesAppSecSelectableHostnames.HostnamesJson)
// 		ctx.Export("selectableHostnamesOutputText", selectableHostnamesAppSecSelectableHostnames.OutputText)
// 		opt2 := _var.Contractid
// 		opt3 := _var.Groupid
// 		selectableHostnamesForCreateConfigurationAppSecSelectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, &GetAppSecSelectableHostnamesArgs{
// 			Contractid: &opt2,
// 			Groupid:    &opt3,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("selectableHostnamesForCreateConfiguration", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.Hostnames)
// 		ctx.Export("selectableHostnamesForCreateConfigurationJson", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.HostnamesJson)
// 		ctx.Export("selectableHostnamesForCreateConfigurationOutputText", selectableHostnamesForCreateConfigurationAppSecSelectableHostnames.OutputText)
// 		return nil
// 	})
// }
// ```
func GetAppSecSelectableHostnames(ctx *pulumi.Context, args *GetAppSecSelectableHostnamesArgs, opts ...pulumi.InvokeOption) (*GetAppSecSelectableHostnamesResult, error) {
	var rv GetAppSecSelectableHostnamesResult
	err := ctx.Invoke("akamai:index/getAppSecSelectableHostnames:getAppSecSelectableHostnames", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecSelectableHostnames.
type GetAppSecSelectableHostnamesArgs struct {
	ActiveInProduction *bool `pulumi:"activeInProduction"`
	ActiveInStaging    *bool `pulumi:"activeInStaging"`
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The ID of the contract to use.
	Contractid *string `pulumi:"contractid"`
	// The ID of the group to use.
	Groupid *int `pulumi:"groupid"`
}

// A collection of values returned by getAppSecSelectableHostnames.
type GetAppSecSelectableHostnamesResult struct {
	ActiveInProduction *bool   `pulumi:"activeInProduction"`
	ActiveInStaging    *bool   `pulumi:"activeInStaging"`
	ConfigId           *int    `pulumi:"configId"`
	Contractid         *string `pulumi:"contractid"`
	Groupid            *int    `pulumi:"groupid"`
	// The list of selectable hostnames.
	Hostnames []string `pulumi:"hostnames"`
	// The list of selectable hostnames in json format.
	HostnamesJson string `pulumi:"hostnamesJson"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A tabular display of the selectable hostnames showing the name and configId of the security configuration under which the host is protected in production, or '-' if the host is not protected in production.
	OutputText string `pulumi:"outputText"`
}

func GetAppSecSelectableHostnamesOutput(ctx *pulumi.Context, args GetAppSecSelectableHostnamesOutputArgs, opts ...pulumi.InvokeOption) GetAppSecSelectableHostnamesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAppSecSelectableHostnamesResult, error) {
			args := v.(GetAppSecSelectableHostnamesArgs)
			r, err := GetAppSecSelectableHostnames(ctx, &args, opts...)
			return *r, err
		}).(GetAppSecSelectableHostnamesResultOutput)
}

// A collection of arguments for invoking getAppSecSelectableHostnames.
type GetAppSecSelectableHostnamesOutputArgs struct {
	ActiveInProduction pulumi.BoolPtrInput `pulumi:"activeInProduction"`
	ActiveInStaging    pulumi.BoolPtrInput `pulumi:"activeInStaging"`
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput `pulumi:"configId"`
	// The ID of the contract to use.
	Contractid pulumi.StringPtrInput `pulumi:"contractid"`
	// The ID of the group to use.
	Groupid pulumi.IntPtrInput `pulumi:"groupid"`
}

func (GetAppSecSelectableHostnamesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecSelectableHostnamesArgs)(nil)).Elem()
}

// A collection of values returned by getAppSecSelectableHostnames.
type GetAppSecSelectableHostnamesResultOutput struct{ *pulumi.OutputState }

func (GetAppSecSelectableHostnamesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSecSelectableHostnamesResult)(nil)).Elem()
}

func (o GetAppSecSelectableHostnamesResultOutput) ToGetAppSecSelectableHostnamesResultOutput() GetAppSecSelectableHostnamesResultOutput {
	return o
}

func (o GetAppSecSelectableHostnamesResultOutput) ToGetAppSecSelectableHostnamesResultOutputWithContext(ctx context.Context) GetAppSecSelectableHostnamesResultOutput {
	return o
}

func (o GetAppSecSelectableHostnamesResultOutput) ActiveInProduction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) *bool { return v.ActiveInProduction }).(pulumi.BoolPtrOutput)
}

func (o GetAppSecSelectableHostnamesResultOutput) ActiveInStaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) *bool { return v.ActiveInStaging }).(pulumi.BoolPtrOutput)
}

func (o GetAppSecSelectableHostnamesResultOutput) ConfigId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) *int { return v.ConfigId }).(pulumi.IntPtrOutput)
}

func (o GetAppSecSelectableHostnamesResultOutput) Contractid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) *string { return v.Contractid }).(pulumi.StringPtrOutput)
}

func (o GetAppSecSelectableHostnamesResultOutput) Groupid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) *int { return v.Groupid }).(pulumi.IntPtrOutput)
}

// The list of selectable hostnames.
func (o GetAppSecSelectableHostnamesResultOutput) Hostnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) []string { return v.Hostnames }).(pulumi.StringArrayOutput)
}

// The list of selectable hostnames in json format.
func (o GetAppSecSelectableHostnamesResultOutput) HostnamesJson() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) string { return v.HostnamesJson }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAppSecSelectableHostnamesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A tabular display of the selectable hostnames showing the name and configId of the security configuration under which the host is protected in production, or '-' if the host is not protected in production.
func (o GetAppSecSelectableHostnamesResultOutput) OutputText() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSecSelectableHostnamesResult) string { return v.OutputText }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAppSecSelectableHostnamesResultOutput{})
}
