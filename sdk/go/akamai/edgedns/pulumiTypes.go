// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package edgedns

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DnsZoneTsigKey struct {
	Algorithm string `pulumi:"algorithm"`
	// key name
	// * `algorithm`
	// * `secret`
	Name   string `pulumi:"name"`
	Secret string `pulumi:"secret"`
}

// DnsZoneTsigKeyInput is an input type that accepts DnsZoneTsigKeyArgs and DnsZoneTsigKeyOutput values.
// You can construct a concrete instance of `DnsZoneTsigKeyInput` via:
//
//          DnsZoneTsigKeyArgs{...}
type DnsZoneTsigKeyInput interface {
	pulumi.Input

	ToDnsZoneTsigKeyOutput() DnsZoneTsigKeyOutput
	ToDnsZoneTsigKeyOutputWithContext(context.Context) DnsZoneTsigKeyOutput
}

type DnsZoneTsigKeyArgs struct {
	Algorithm pulumi.StringInput `pulumi:"algorithm"`
	// key name
	// * `algorithm`
	// * `secret`
	Name   pulumi.StringInput `pulumi:"name"`
	Secret pulumi.StringInput `pulumi:"secret"`
}

func (DnsZoneTsigKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneTsigKey)(nil)).Elem()
}

func (i DnsZoneTsigKeyArgs) ToDnsZoneTsigKeyOutput() DnsZoneTsigKeyOutput {
	return i.ToDnsZoneTsigKeyOutputWithContext(context.Background())
}

func (i DnsZoneTsigKeyArgs) ToDnsZoneTsigKeyOutputWithContext(ctx context.Context) DnsZoneTsigKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsZoneTsigKeyOutput)
}

func (i DnsZoneTsigKeyArgs) ToDnsZoneTsigKeyPtrOutput() DnsZoneTsigKeyPtrOutput {
	return i.ToDnsZoneTsigKeyPtrOutputWithContext(context.Background())
}

func (i DnsZoneTsigKeyArgs) ToDnsZoneTsigKeyPtrOutputWithContext(ctx context.Context) DnsZoneTsigKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsZoneTsigKeyOutput).ToDnsZoneTsigKeyPtrOutputWithContext(ctx)
}

// DnsZoneTsigKeyPtrInput is an input type that accepts DnsZoneTsigKeyArgs, DnsZoneTsigKeyPtr and DnsZoneTsigKeyPtrOutput values.
// You can construct a concrete instance of `DnsZoneTsigKeyPtrInput` via:
//
//          DnsZoneTsigKeyArgs{...}
//
//  or:
//
//          nil
type DnsZoneTsigKeyPtrInput interface {
	pulumi.Input

	ToDnsZoneTsigKeyPtrOutput() DnsZoneTsigKeyPtrOutput
	ToDnsZoneTsigKeyPtrOutputWithContext(context.Context) DnsZoneTsigKeyPtrOutput
}

type dnsZoneTsigKeyPtrType DnsZoneTsigKeyArgs

func DnsZoneTsigKeyPtr(v *DnsZoneTsigKeyArgs) DnsZoneTsigKeyPtrInput {
	return (*dnsZoneTsigKeyPtrType)(v)
}

func (*dnsZoneTsigKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsZoneTsigKey)(nil)).Elem()
}

func (i *dnsZoneTsigKeyPtrType) ToDnsZoneTsigKeyPtrOutput() DnsZoneTsigKeyPtrOutput {
	return i.ToDnsZoneTsigKeyPtrOutputWithContext(context.Background())
}

func (i *dnsZoneTsigKeyPtrType) ToDnsZoneTsigKeyPtrOutputWithContext(ctx context.Context) DnsZoneTsigKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsZoneTsigKeyPtrOutput)
}

type DnsZoneTsigKeyOutput struct{ *pulumi.OutputState }

func (DnsZoneTsigKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsZoneTsigKey)(nil)).Elem()
}

func (o DnsZoneTsigKeyOutput) ToDnsZoneTsigKeyOutput() DnsZoneTsigKeyOutput {
	return o
}

func (o DnsZoneTsigKeyOutput) ToDnsZoneTsigKeyOutputWithContext(ctx context.Context) DnsZoneTsigKeyOutput {
	return o
}

func (o DnsZoneTsigKeyOutput) ToDnsZoneTsigKeyPtrOutput() DnsZoneTsigKeyPtrOutput {
	return o.ToDnsZoneTsigKeyPtrOutputWithContext(context.Background())
}

func (o DnsZoneTsigKeyOutput) ToDnsZoneTsigKeyPtrOutputWithContext(ctx context.Context) DnsZoneTsigKeyPtrOutput {
	return o.ApplyT(func(v DnsZoneTsigKey) *DnsZoneTsigKey {
		return &v
	}).(DnsZoneTsigKeyPtrOutput)
}
func (o DnsZoneTsigKeyOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v DnsZoneTsigKey) string { return v.Algorithm }).(pulumi.StringOutput)
}

// key name
// * `algorithm`
// * `secret`
func (o DnsZoneTsigKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DnsZoneTsigKey) string { return v.Name }).(pulumi.StringOutput)
}

func (o DnsZoneTsigKeyOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v DnsZoneTsigKey) string { return v.Secret }).(pulumi.StringOutput)
}

type DnsZoneTsigKeyPtrOutput struct{ *pulumi.OutputState }

func (DnsZoneTsigKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsZoneTsigKey)(nil)).Elem()
}

func (o DnsZoneTsigKeyPtrOutput) ToDnsZoneTsigKeyPtrOutput() DnsZoneTsigKeyPtrOutput {
	return o
}

func (o DnsZoneTsigKeyPtrOutput) ToDnsZoneTsigKeyPtrOutputWithContext(ctx context.Context) DnsZoneTsigKeyPtrOutput {
	return o
}

func (o DnsZoneTsigKeyPtrOutput) Elem() DnsZoneTsigKeyOutput {
	return o.ApplyT(func(v *DnsZoneTsigKey) DnsZoneTsigKey { return *v }).(DnsZoneTsigKeyOutput)
}

func (o DnsZoneTsigKeyPtrOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsZoneTsigKey) *string {
		if v == nil {
			return nil
		}
		return &v.Algorithm
	}).(pulumi.StringPtrOutput)
}

// key name
// * `algorithm`
// * `secret`
func (o DnsZoneTsigKeyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsZoneTsigKey) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o DnsZoneTsigKeyPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsZoneTsigKey) *string {
		if v == nil {
			return nil
		}
		return &v.Secret
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DnsZoneTsigKeyOutput{})
	pulumi.RegisterOutputType(DnsZoneTsigKeyPtrOutput{})
}
