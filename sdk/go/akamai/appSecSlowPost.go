// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `AppSecSlowPost` data source to update the slow post protection settings for a given security configuration version and policy.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecSlowPost(ctx, "slowPost", &akamai.AppSecSlowPostArgs{
// 			ConfigId:                 pulumi.Int(configuration.ConfigId),
// 			Version:                  pulumi.Int(configuration.LatestVersion),
// 			SecurityPolicyId:         pulumi.Any(_var.Security_policy_id),
// 			SlowRateAction:           pulumi.String("alert"),
// 			SlowRateThresholdRate:    pulumi.Int(10),
// 			SlowRateThresholdPeriod:  pulumi.Int(30),
// 			DurationThresholdTimeout: pulumi.Int(20),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecSlowPost struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.
	DurationThresholdTimeout pulumi.IntPtrOutput `pulumi:"durationThresholdTimeout"`
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringOutput `pulumi:"securityPolicyId"`
	// The action that the rule should trigger (either `alert` or `abort`).
	SlowRateAction pulumi.StringOutput `pulumi:"slowRateAction"`
	// The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.
	SlowRateThresholdPeriod pulumi.IntOutput `pulumi:"slowRateThresholdPeriod"`
	// The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.
	SlowRateThresholdRate pulumi.IntOutput `pulumi:"slowRateThresholdRate"`
	// The version number of the security configuration to use.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecSlowPost registers a new resource with the given unique name, arguments, and options.
func NewAppSecSlowPost(ctx *pulumi.Context,
	name string, args *AppSecSlowPostArgs, opts ...pulumi.ResourceOption) (*AppSecSlowPost, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.SecurityPolicyId == nil {
		return nil, errors.New("invalid value for required argument 'SecurityPolicyId'")
	}
	if args.SlowRateAction == nil {
		return nil, errors.New("invalid value for required argument 'SlowRateAction'")
	}
	if args.SlowRateThresholdPeriod == nil {
		return nil, errors.New("invalid value for required argument 'SlowRateThresholdPeriod'")
	}
	if args.SlowRateThresholdRate == nil {
		return nil, errors.New("invalid value for required argument 'SlowRateThresholdRate'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource AppSecSlowPost
	err := ctx.RegisterResource("akamai:index/appSecSlowPost:AppSecSlowPost", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecSlowPost gets an existing AppSecSlowPost resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecSlowPost(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecSlowPostState, opts ...pulumi.ResourceOption) (*AppSecSlowPost, error) {
	var resource AppSecSlowPost
	err := ctx.ReadResource("akamai:index/appSecSlowPost:AppSecSlowPost", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecSlowPost resources.
type appSecSlowPostState struct {
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.
	DurationThresholdTimeout *int `pulumi:"durationThresholdTimeout"`
	// The ID of the security policy to use.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
	// The action that the rule should trigger (either `alert` or `abort`).
	SlowRateAction *string `pulumi:"slowRateAction"`
	// The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.
	SlowRateThresholdPeriod *int `pulumi:"slowRateThresholdPeriod"`
	// The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.
	SlowRateThresholdRate *int `pulumi:"slowRateThresholdRate"`
	// The version number of the security configuration to use.
	Version *int `pulumi:"version"`
}

type AppSecSlowPostState struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.
	DurationThresholdTimeout pulumi.IntPtrInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringPtrInput
	// The action that the rule should trigger (either `alert` or `abort`).
	SlowRateAction pulumi.StringPtrInput
	// The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.
	SlowRateThresholdPeriod pulumi.IntPtrInput
	// The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.
	SlowRateThresholdRate pulumi.IntPtrInput
	// The version number of the security configuration to use.
	Version pulumi.IntPtrInput
}

func (AppSecSlowPostState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSlowPostState)(nil)).Elem()
}

type appSecSlowPostArgs struct {
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.
	DurationThresholdTimeout *int `pulumi:"durationThresholdTimeout"`
	// The ID of the security policy to use.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The action that the rule should trigger (either `alert` or `abort`).
	SlowRateAction string `pulumi:"slowRateAction"`
	// The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.
	SlowRateThresholdPeriod int `pulumi:"slowRateThresholdPeriod"`
	// The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.
	SlowRateThresholdRate int `pulumi:"slowRateThresholdRate"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// The set of arguments for constructing a AppSecSlowPost resource.
type AppSecSlowPostArgs struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// The time in seconds before the first eight kilobytes of the POST body must be received to avoid triggering the specified `action`.
	DurationThresholdTimeout pulumi.IntPtrInput
	// The ID of the security policy to use.
	SecurityPolicyId pulumi.StringInput
	// The action that the rule should trigger (either `alert` or `abort`).
	SlowRateAction pulumi.StringInput
	// The slow rate period value: the amount of time in seconds that the server should accept a request to determine whether a POST request is too slow.
	SlowRateThresholdPeriod pulumi.IntInput
	// The average rate in bytes per second over the period specified by `period` before the specified `action` is triggered.
	SlowRateThresholdRate pulumi.IntInput
	// The version number of the security configuration to use.
	Version pulumi.IntInput
}

func (AppSecSlowPostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecSlowPostArgs)(nil)).Elem()
}

type AppSecSlowPostInput interface {
	pulumi.Input

	ToAppSecSlowPostOutput() AppSecSlowPostOutput
	ToAppSecSlowPostOutputWithContext(ctx context.Context) AppSecSlowPostOutput
}

func (*AppSecSlowPost) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecSlowPost)(nil))
}

func (i *AppSecSlowPost) ToAppSecSlowPostOutput() AppSecSlowPostOutput {
	return i.ToAppSecSlowPostOutputWithContext(context.Background())
}

func (i *AppSecSlowPost) ToAppSecSlowPostOutputWithContext(ctx context.Context) AppSecSlowPostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSlowPostOutput)
}

func (i *AppSecSlowPost) ToAppSecSlowPostPtrOutput() AppSecSlowPostPtrOutput {
	return i.ToAppSecSlowPostPtrOutputWithContext(context.Background())
}

func (i *AppSecSlowPost) ToAppSecSlowPostPtrOutputWithContext(ctx context.Context) AppSecSlowPostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSlowPostPtrOutput)
}

type AppSecSlowPostPtrInput interface {
	pulumi.Input

	ToAppSecSlowPostPtrOutput() AppSecSlowPostPtrOutput
	ToAppSecSlowPostPtrOutputWithContext(ctx context.Context) AppSecSlowPostPtrOutput
}

type appSecSlowPostPtrType AppSecSlowPostArgs

func (*appSecSlowPostPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSlowPost)(nil))
}

func (i *appSecSlowPostPtrType) ToAppSecSlowPostPtrOutput() AppSecSlowPostPtrOutput {
	return i.ToAppSecSlowPostPtrOutputWithContext(context.Background())
}

func (i *appSecSlowPostPtrType) ToAppSecSlowPostPtrOutputWithContext(ctx context.Context) AppSecSlowPostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSlowPostPtrOutput)
}

// AppSecSlowPostArrayInput is an input type that accepts AppSecSlowPostArray and AppSecSlowPostArrayOutput values.
// You can construct a concrete instance of `AppSecSlowPostArrayInput` via:
//
//          AppSecSlowPostArray{ AppSecSlowPostArgs{...} }
type AppSecSlowPostArrayInput interface {
	pulumi.Input

	ToAppSecSlowPostArrayOutput() AppSecSlowPostArrayOutput
	ToAppSecSlowPostArrayOutputWithContext(context.Context) AppSecSlowPostArrayOutput
}

type AppSecSlowPostArray []AppSecSlowPostInput

func (AppSecSlowPostArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecSlowPost)(nil))
}

func (i AppSecSlowPostArray) ToAppSecSlowPostArrayOutput() AppSecSlowPostArrayOutput {
	return i.ToAppSecSlowPostArrayOutputWithContext(context.Background())
}

func (i AppSecSlowPostArray) ToAppSecSlowPostArrayOutputWithContext(ctx context.Context) AppSecSlowPostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSlowPostArrayOutput)
}

// AppSecSlowPostMapInput is an input type that accepts AppSecSlowPostMap and AppSecSlowPostMapOutput values.
// You can construct a concrete instance of `AppSecSlowPostMapInput` via:
//
//          AppSecSlowPostMap{ "key": AppSecSlowPostArgs{...} }
type AppSecSlowPostMapInput interface {
	pulumi.Input

	ToAppSecSlowPostMapOutput() AppSecSlowPostMapOutput
	ToAppSecSlowPostMapOutputWithContext(context.Context) AppSecSlowPostMapOutput
}

type AppSecSlowPostMap map[string]AppSecSlowPostInput

func (AppSecSlowPostMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecSlowPost)(nil))
}

func (i AppSecSlowPostMap) ToAppSecSlowPostMapOutput() AppSecSlowPostMapOutput {
	return i.ToAppSecSlowPostMapOutputWithContext(context.Background())
}

func (i AppSecSlowPostMap) ToAppSecSlowPostMapOutputWithContext(ctx context.Context) AppSecSlowPostMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecSlowPostMapOutput)
}

type AppSecSlowPostOutput struct {
	*pulumi.OutputState
}

func (AppSecSlowPostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecSlowPost)(nil))
}

func (o AppSecSlowPostOutput) ToAppSecSlowPostOutput() AppSecSlowPostOutput {
	return o
}

func (o AppSecSlowPostOutput) ToAppSecSlowPostOutputWithContext(ctx context.Context) AppSecSlowPostOutput {
	return o
}

func (o AppSecSlowPostOutput) ToAppSecSlowPostPtrOutput() AppSecSlowPostPtrOutput {
	return o.ToAppSecSlowPostPtrOutputWithContext(context.Background())
}

func (o AppSecSlowPostOutput) ToAppSecSlowPostPtrOutputWithContext(ctx context.Context) AppSecSlowPostPtrOutput {
	return o.ApplyT(func(v AppSecSlowPost) *AppSecSlowPost {
		return &v
	}).(AppSecSlowPostPtrOutput)
}

type AppSecSlowPostPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecSlowPostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecSlowPost)(nil))
}

func (o AppSecSlowPostPtrOutput) ToAppSecSlowPostPtrOutput() AppSecSlowPostPtrOutput {
	return o
}

func (o AppSecSlowPostPtrOutput) ToAppSecSlowPostPtrOutputWithContext(ctx context.Context) AppSecSlowPostPtrOutput {
	return o
}

type AppSecSlowPostArrayOutput struct{ *pulumi.OutputState }

func (AppSecSlowPostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecSlowPost)(nil))
}

func (o AppSecSlowPostArrayOutput) ToAppSecSlowPostArrayOutput() AppSecSlowPostArrayOutput {
	return o
}

func (o AppSecSlowPostArrayOutput) ToAppSecSlowPostArrayOutputWithContext(ctx context.Context) AppSecSlowPostArrayOutput {
	return o
}

func (o AppSecSlowPostArrayOutput) Index(i pulumi.IntInput) AppSecSlowPostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecSlowPost {
		return vs[0].([]AppSecSlowPost)[vs[1].(int)]
	}).(AppSecSlowPostOutput)
}

type AppSecSlowPostMapOutput struct{ *pulumi.OutputState }

func (AppSecSlowPostMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecSlowPost)(nil))
}

func (o AppSecSlowPostMapOutput) ToAppSecSlowPostMapOutput() AppSecSlowPostMapOutput {
	return o
}

func (o AppSecSlowPostMapOutput) ToAppSecSlowPostMapOutputWithContext(ctx context.Context) AppSecSlowPostMapOutput {
	return o
}

func (o AppSecSlowPostMapOutput) MapIndex(k pulumi.StringInput) AppSecSlowPostOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecSlowPost {
		return vs[0].(map[string]AppSecSlowPost)[vs[1].(string)]
	}).(AppSecSlowPostOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecSlowPostOutput{})
	pulumi.RegisterOutputType(AppSecSlowPostPtrOutput{})
	pulumi.RegisterOutputType(AppSecSlowPostArrayOutput{})
	pulumi.RegisterOutputType(AppSecSlowPostMapOutput{})
}
