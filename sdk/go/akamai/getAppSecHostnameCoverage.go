// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getAppSecHostnameCoverage` data source to retrieve a list of hostnames in the account with their current protections, activation statuses, and other summary information. The information available is described [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#8eb23096).
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		_, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		hostnameCoverage, err := akamai.GetAppSecHostnameCoverage(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("hostnameCoverageListJson", hostnameCoverage.Json)
// 		ctx.Export("hostnameCoverageListOutput", hostnameCoverage.OutputText)
// 		return nil
// 	})
// }
// ```
func GetAppSecHostnameCoverage(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetAppSecHostnameCoverageResult, error) {
	var rv GetAppSecHostnameCoverageResult
	err := ctx.Invoke("akamai:index/getAppSecHostnameCoverage:getAppSecHostnameCoverage", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getAppSecHostnameCoverage.
type GetAppSecHostnameCoverageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A JSON-formatted list of the hostname coverage information.
	Json string `pulumi:"json"`
	// A tabular display of the hostname coverage information.
	OutputText string `pulumi:"outputText"`
}
