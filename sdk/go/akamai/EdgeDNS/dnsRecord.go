// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package EdgeDNS

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `EdgeDNS.DnsRecord` provides the resource for configuring a dns record to integrate easily with your existing DNS infrastructure to provide a secure, high performance, highly available and scalable solution for DNS hosting.
type DnsRecord struct {
	pulumi.CustomResourceState

	// — (Required,Boolean) Whether the record is active.
	Active          pulumi.BoolOutput      `pulumi:"active"`
	Algorithm       pulumi.IntPtrOutput    `pulumi:"algorithm"`
	Digest          pulumi.StringPtrOutput `pulumi:"digest"`
	DigestType      pulumi.IntPtrOutput    `pulumi:"digestType"`
	Expiration      pulumi.StringPtrOutput `pulumi:"expiration"`
	Fingerprint     pulumi.StringPtrOutput `pulumi:"fingerprint"`
	FingerprintType pulumi.IntPtrOutput    `pulumi:"fingerprintType"`
	Flags           pulumi.IntPtrOutput    `pulumi:"flags"`
	Flagsnaptr      pulumi.StringPtrOutput `pulumi:"flagsnaptr"`
	Hardware        pulumi.StringPtrOutput `pulumi:"hardware"`
	Inception       pulumi.StringPtrOutput `pulumi:"inception"`
	Iterations      pulumi.IntPtrOutput    `pulumi:"iterations"`
	Key             pulumi.StringPtrOutput `pulumi:"key"`
	Keytag          pulumi.IntPtrOutput    `pulumi:"keytag"`
	Labels          pulumi.IntPtrOutput    `pulumi:"labels"`
	Mailbox         pulumi.StringPtrOutput `pulumi:"mailbox"`
	// — (Required) The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.
	Name                pulumi.StringOutput    `pulumi:"name"`
	NextHashedOwnerName pulumi.StringPtrOutput `pulumi:"nextHashedOwnerName"`
	Order               pulumi.IntPtrOutput    `pulumi:"order"`
	OriginalTtl         pulumi.IntPtrOutput    `pulumi:"originalTtl"`
	Port                pulumi.IntPtrOutput    `pulumi:"port"`
	Preference          pulumi.IntPtrOutput    `pulumi:"preference"`
	Priority            pulumi.IntPtrOutput    `pulumi:"priority"`
	PriorityIncrement   pulumi.IntPtrOutput    `pulumi:"priorityIncrement"`
	Protocol            pulumi.IntPtrOutput    `pulumi:"protocol"`
	Recordtype          pulumi.StringOutput    `pulumi:"recordtype"`
	Regexp              pulumi.StringPtrOutput `pulumi:"regexp"`
	Replacement         pulumi.StringPtrOutput `pulumi:"replacement"`
	Salt                pulumi.StringPtrOutput `pulumi:"salt"`
	Service             pulumi.StringPtrOutput `pulumi:"service"`
	Signature           pulumi.StringPtrOutput `pulumi:"signature"`
	Signer              pulumi.StringPtrOutput `pulumi:"signer"`
	Software            pulumi.StringPtrOutput `pulumi:"software"`
	Subtype             pulumi.IntPtrOutput    `pulumi:"subtype"`
	// — (Required) A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.
	Targets pulumi.StringArrayOutput `pulumi:"targets"`
	// — (Required,Boolean) The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. Zero values are interpreted to mean that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.
	Ttl         pulumi.IntOutput       `pulumi:"ttl"`
	Txt         pulumi.StringPtrOutput `pulumi:"txt"`
	TypeBitmaps pulumi.StringPtrOutput `pulumi:"typeBitmaps"`
	TypeCovered pulumi.StringPtrOutput `pulumi:"typeCovered"`
	Weight      pulumi.IntPtrOutput    `pulumi:"weight"`
	// — (Required) Domain zone, encapsulating any nested subdomains.
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewDnsRecord registers a new resource with the given unique name, arguments, and options.
func NewDnsRecord(ctx *pulumi.Context,
	name string, args *DnsRecordArgs, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	if args == nil || args.Active == nil {
		return nil, errors.New("missing required argument 'Active'")
	}
	if args == nil || args.Recordtype == nil {
		return nil, errors.New("missing required argument 'Recordtype'")
	}
	if args == nil || args.Ttl == nil {
		return nil, errors.New("missing required argument 'Ttl'")
	}
	if args == nil || args.Zone == nil {
		return nil, errors.New("missing required argument 'Zone'")
	}
	if args == nil {
		args = &DnsRecordArgs{}
	}
	var resource DnsRecord
	err := ctx.RegisterResource("akamai:EdgeDNS/dnsRecord:DnsRecord", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDnsRecord gets an existing DnsRecord resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDnsRecord(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsRecordState, opts ...pulumi.ResourceOption) (*DnsRecord, error) {
	var resource DnsRecord
	err := ctx.ReadResource("akamai:EdgeDNS/dnsRecord:DnsRecord", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DnsRecord resources.
type dnsRecordState struct {
	// — (Required,Boolean) Whether the record is active.
	Active          *bool   `pulumi:"active"`
	Algorithm       *int    `pulumi:"algorithm"`
	Digest          *string `pulumi:"digest"`
	DigestType      *int    `pulumi:"digestType"`
	Expiration      *string `pulumi:"expiration"`
	Fingerprint     *string `pulumi:"fingerprint"`
	FingerprintType *int    `pulumi:"fingerprintType"`
	Flags           *int    `pulumi:"flags"`
	Flagsnaptr      *string `pulumi:"flagsnaptr"`
	Hardware        *string `pulumi:"hardware"`
	Inception       *string `pulumi:"inception"`
	Iterations      *int    `pulumi:"iterations"`
	Key             *string `pulumi:"key"`
	Keytag          *int    `pulumi:"keytag"`
	Labels          *int    `pulumi:"labels"`
	Mailbox         *string `pulumi:"mailbox"`
	// — (Required) The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.
	Name                *string `pulumi:"name"`
	NextHashedOwnerName *string `pulumi:"nextHashedOwnerName"`
	Order               *int    `pulumi:"order"`
	OriginalTtl         *int    `pulumi:"originalTtl"`
	Port                *int    `pulumi:"port"`
	Preference          *int    `pulumi:"preference"`
	Priority            *int    `pulumi:"priority"`
	PriorityIncrement   *int    `pulumi:"priorityIncrement"`
	Protocol            *int    `pulumi:"protocol"`
	Recordtype          *string `pulumi:"recordtype"`
	Regexp              *string `pulumi:"regexp"`
	Replacement         *string `pulumi:"replacement"`
	Salt                *string `pulumi:"salt"`
	Service             *string `pulumi:"service"`
	Signature           *string `pulumi:"signature"`
	Signer              *string `pulumi:"signer"`
	Software            *string `pulumi:"software"`
	Subtype             *int    `pulumi:"subtype"`
	// — (Required) A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.
	Targets []string `pulumi:"targets"`
	// — (Required,Boolean) The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. Zero values are interpreted to mean that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.
	Ttl         *int    `pulumi:"ttl"`
	Txt         *string `pulumi:"txt"`
	TypeBitmaps *string `pulumi:"typeBitmaps"`
	TypeCovered *string `pulumi:"typeCovered"`
	Weight      *int    `pulumi:"weight"`
	// — (Required) Domain zone, encapsulating any nested subdomains.
	Zone *string `pulumi:"zone"`
}

type DnsRecordState struct {
	// — (Required,Boolean) Whether the record is active.
	Active          pulumi.BoolPtrInput
	Algorithm       pulumi.IntPtrInput
	Digest          pulumi.StringPtrInput
	DigestType      pulumi.IntPtrInput
	Expiration      pulumi.StringPtrInput
	Fingerprint     pulumi.StringPtrInput
	FingerprintType pulumi.IntPtrInput
	Flags           pulumi.IntPtrInput
	Flagsnaptr      pulumi.StringPtrInput
	Hardware        pulumi.StringPtrInput
	Inception       pulumi.StringPtrInput
	Iterations      pulumi.IntPtrInput
	Key             pulumi.StringPtrInput
	Keytag          pulumi.IntPtrInput
	Labels          pulumi.IntPtrInput
	Mailbox         pulumi.StringPtrInput
	// — (Required) The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.
	Name                pulumi.StringPtrInput
	NextHashedOwnerName pulumi.StringPtrInput
	Order               pulumi.IntPtrInput
	OriginalTtl         pulumi.IntPtrInput
	Port                pulumi.IntPtrInput
	Preference          pulumi.IntPtrInput
	Priority            pulumi.IntPtrInput
	PriorityIncrement   pulumi.IntPtrInput
	Protocol            pulumi.IntPtrInput
	Recordtype          pulumi.StringPtrInput
	Regexp              pulumi.StringPtrInput
	Replacement         pulumi.StringPtrInput
	Salt                pulumi.StringPtrInput
	Service             pulumi.StringPtrInput
	Signature           pulumi.StringPtrInput
	Signer              pulumi.StringPtrInput
	Software            pulumi.StringPtrInput
	Subtype             pulumi.IntPtrInput
	// — (Required) A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.
	Targets pulumi.StringArrayInput
	// — (Required,Boolean) The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. Zero values are interpreted to mean that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.
	Ttl         pulumi.IntPtrInput
	Txt         pulumi.StringPtrInput
	TypeBitmaps pulumi.StringPtrInput
	TypeCovered pulumi.StringPtrInput
	Weight      pulumi.IntPtrInput
	// — (Required) Domain zone, encapsulating any nested subdomains.
	Zone pulumi.StringPtrInput
}

func (DnsRecordState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordState)(nil)).Elem()
}

type dnsRecordArgs struct {
	// — (Required,Boolean) Whether the record is active.
	Active          bool    `pulumi:"active"`
	Algorithm       *int    `pulumi:"algorithm"`
	Digest          *string `pulumi:"digest"`
	DigestType      *int    `pulumi:"digestType"`
	Expiration      *string `pulumi:"expiration"`
	Fingerprint     *string `pulumi:"fingerprint"`
	FingerprintType *int    `pulumi:"fingerprintType"`
	Flags           *int    `pulumi:"flags"`
	Flagsnaptr      *string `pulumi:"flagsnaptr"`
	Hardware        *string `pulumi:"hardware"`
	Inception       *string `pulumi:"inception"`
	Iterations      *int    `pulumi:"iterations"`
	Key             *string `pulumi:"key"`
	Keytag          *int    `pulumi:"keytag"`
	Labels          *int    `pulumi:"labels"`
	Mailbox         *string `pulumi:"mailbox"`
	// — (Required) The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.
	Name                *string `pulumi:"name"`
	NextHashedOwnerName *string `pulumi:"nextHashedOwnerName"`
	Order               *int    `pulumi:"order"`
	OriginalTtl         *int    `pulumi:"originalTtl"`
	Port                *int    `pulumi:"port"`
	Preference          *int    `pulumi:"preference"`
	Priority            *int    `pulumi:"priority"`
	PriorityIncrement   *int    `pulumi:"priorityIncrement"`
	Protocol            *int    `pulumi:"protocol"`
	Recordtype          string  `pulumi:"recordtype"`
	Regexp              *string `pulumi:"regexp"`
	Replacement         *string `pulumi:"replacement"`
	Salt                *string `pulumi:"salt"`
	Service             *string `pulumi:"service"`
	Signature           *string `pulumi:"signature"`
	Signer              *string `pulumi:"signer"`
	Software            *string `pulumi:"software"`
	Subtype             *int    `pulumi:"subtype"`
	// — (Required) A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.
	Targets []string `pulumi:"targets"`
	// — (Required,Boolean) The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. Zero values are interpreted to mean that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.
	Ttl         int     `pulumi:"ttl"`
	Txt         *string `pulumi:"txt"`
	TypeBitmaps *string `pulumi:"typeBitmaps"`
	TypeCovered *string `pulumi:"typeCovered"`
	Weight      *int    `pulumi:"weight"`
	// — (Required) Domain zone, encapsulating any nested subdomains.
	Zone string `pulumi:"zone"`
}

// The set of arguments for constructing a DnsRecord resource.
type DnsRecordArgs struct {
	// — (Required,Boolean) Whether the record is active.
	Active          pulumi.BoolInput
	Algorithm       pulumi.IntPtrInput
	Digest          pulumi.StringPtrInput
	DigestType      pulumi.IntPtrInput
	Expiration      pulumi.StringPtrInput
	Fingerprint     pulumi.StringPtrInput
	FingerprintType pulumi.IntPtrInput
	Flags           pulumi.IntPtrInput
	Flagsnaptr      pulumi.StringPtrInput
	Hardware        pulumi.StringPtrInput
	Inception       pulumi.StringPtrInput
	Iterations      pulumi.IntPtrInput
	Key             pulumi.StringPtrInput
	Keytag          pulumi.IntPtrInput
	Labels          pulumi.IntPtrInput
	Mailbox         pulumi.StringPtrInput
	// — (Required) The name of the record. The name is an owner name, that is, the name of the node to which this resource record pertains.
	Name                pulumi.StringPtrInput
	NextHashedOwnerName pulumi.StringPtrInput
	Order               pulumi.IntPtrInput
	OriginalTtl         pulumi.IntPtrInput
	Port                pulumi.IntPtrInput
	Preference          pulumi.IntPtrInput
	Priority            pulumi.IntPtrInput
	PriorityIncrement   pulumi.IntPtrInput
	Protocol            pulumi.IntPtrInput
	Recordtype          pulumi.StringInput
	Regexp              pulumi.StringPtrInput
	Replacement         pulumi.StringPtrInput
	Salt                pulumi.StringPtrInput
	Service             pulumi.StringPtrInput
	Signature           pulumi.StringPtrInput
	Signer              pulumi.StringPtrInput
	Software            pulumi.StringPtrInput
	Subtype             pulumi.IntPtrInput
	// — (Required) A domain name that specifies the canonical or primary name for the owner. The owner name is an alias.
	Targets pulumi.StringArrayInput
	// — (Required,Boolean) The TTL is a 32-bit signed integer that specifies the time interval that the resource record may be cached before the source of the information should be consulted again. Zero values are interpreted to mean that the RR can only be used for the transaction in progress, and should not be cached. Zero values can also be used for extremely volatile data.
	Ttl         pulumi.IntInput
	Txt         pulumi.StringPtrInput
	TypeBitmaps pulumi.StringPtrInput
	TypeCovered pulumi.StringPtrInput
	Weight      pulumi.IntPtrInput
	// — (Required) Domain zone, encapsulating any nested subdomains.
	Zone pulumi.StringInput
}

func (DnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsRecordArgs)(nil)).Elem()
}
