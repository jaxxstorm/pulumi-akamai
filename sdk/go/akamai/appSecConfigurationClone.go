// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `resourceAkamaiAppsecConfigurationClone` resource allows you to create a new version of a given security configuration.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt1 := _var.Contractid
// 		opt2 := _var.Groupid
// 		contractsGroups, err := akamai.GetAppSecContractsGroups(ctx, &akamai.GetAppSecContractsGroupsArgs{
// 			Contractid: &opt1,
// 			Groupid:    &opt2,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		opt3 := configuration.ConfigId
// 		opt4 := configuration.LatestVersion
// 		selectableHostnames, err := akamai.GetAppSecSelectableHostnames(ctx, &akamai.GetAppSecSelectableHostnamesArgs{
// 			ConfigId: &opt3,
// 			Version:  &opt4,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		cloneConfig, err := akamai.NewAppSecConfigurationClone(ctx, "cloneConfig", &akamai.AppSecConfigurationCloneArgs{
// 			CreateFromConfigId: pulumi.Int(configuration.ConfigId),
// 			CreateFromVersion:  pulumi.Int(configuration.LatestVersion),
// 			Description:        pulumi.Any(_var.Description),
// 			ContractId:         pulumi.String(contractsGroups.DefaultContractid),
// 			GroupId:            pulumi.Int(contractsGroups.DefaultGroupid),
// 			HostNames:          toPulumiStringArray(selectableHostnames.Hostnames),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("cloneConfigId", cloneConfig.ConfigId)
// 		ctx.Export("cloneConfigVersion", cloneConfig.Version)
// 		return nil
// 	})
// }
// func toPulumiStringArray(arr []string) pulumi.StringArray {
// 	var pulumiArr pulumi.StringArray
// 	for _, v := range arr {
// 		pulumiArr = append(pulumiArr, pulumi.String(v))
// 	}
// 	return pulumiArr
// }
// ```
type AppSecConfigurationClone struct {
	pulumi.CustomResourceState

	// The ID of the newly created configuration.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The contract id to use.
	ContractId pulumi.StringOutput `pulumi:"contractId"`
	// The ID of the configuration to be cloned.
	CreateFromConfigId pulumi.IntOutput `pulumi:"createFromConfigId"`
	// The version number of the configuration to be cloned.
	CreateFromVersion pulumi.IntOutput `pulumi:"createFromVersion"`
	// A description of the new configuration.
	Description pulumi.StringOutput `pulumi:"description"`
	// The group id to use.
	GroupId pulumi.IntOutput `pulumi:"groupId"`
	// The hostnames to be protected under the new configuration.
	HostNames pulumi.StringArrayOutput `pulumi:"hostNames"`
	// The name to be applied to the new configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// The version number of the newly created configuration.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAppSecConfigurationClone registers a new resource with the given unique name, arguments, and options.
func NewAppSecConfigurationClone(ctx *pulumi.Context,
	name string, args *AppSecConfigurationCloneArgs, opts ...pulumi.ResourceOption) (*AppSecConfigurationClone, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContractId == nil {
		return nil, errors.New("invalid value for required argument 'ContractId'")
	}
	if args.CreateFromConfigId == nil {
		return nil, errors.New("invalid value for required argument 'CreateFromConfigId'")
	}
	if args.CreateFromVersion == nil {
		return nil, errors.New("invalid value for required argument 'CreateFromVersion'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.HostNames == nil {
		return nil, errors.New("invalid value for required argument 'HostNames'")
	}
	var resource AppSecConfigurationClone
	err := ctx.RegisterResource("akamai:index/appSecConfigurationClone:AppSecConfigurationClone", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecConfigurationClone gets an existing AppSecConfigurationClone resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecConfigurationClone(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecConfigurationCloneState, opts ...pulumi.ResourceOption) (*AppSecConfigurationClone, error) {
	var resource AppSecConfigurationClone
	err := ctx.ReadResource("akamai:index/appSecConfigurationClone:AppSecConfigurationClone", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecConfigurationClone resources.
type appSecConfigurationCloneState struct {
	// The ID of the newly created configuration.
	ConfigId *int `pulumi:"configId"`
	// The contract id to use.
	ContractId *string `pulumi:"contractId"`
	// The ID of the configuration to be cloned.
	CreateFromConfigId *int `pulumi:"createFromConfigId"`
	// The version number of the configuration to be cloned.
	CreateFromVersion *int `pulumi:"createFromVersion"`
	// A description of the new configuration.
	Description *string `pulumi:"description"`
	// The group id to use.
	GroupId *int `pulumi:"groupId"`
	// The hostnames to be protected under the new configuration.
	HostNames []string `pulumi:"hostNames"`
	// The name to be applied to the new configuration.
	Name *string `pulumi:"name"`
	// The version number of the newly created configuration.
	Version *int `pulumi:"version"`
}

type AppSecConfigurationCloneState struct {
	// The ID of the newly created configuration.
	ConfigId pulumi.IntPtrInput
	// The contract id to use.
	ContractId pulumi.StringPtrInput
	// The ID of the configuration to be cloned.
	CreateFromConfigId pulumi.IntPtrInput
	// The version number of the configuration to be cloned.
	CreateFromVersion pulumi.IntPtrInput
	// A description of the new configuration.
	Description pulumi.StringPtrInput
	// The group id to use.
	GroupId pulumi.IntPtrInput
	// The hostnames to be protected under the new configuration.
	HostNames pulumi.StringArrayInput
	// The name to be applied to the new configuration.
	Name pulumi.StringPtrInput
	// The version number of the newly created configuration.
	Version pulumi.IntPtrInput
}

func (AppSecConfigurationCloneState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecConfigurationCloneState)(nil)).Elem()
}

type appSecConfigurationCloneArgs struct {
	// The contract id to use.
	ContractId string `pulumi:"contractId"`
	// The ID of the configuration to be cloned.
	CreateFromConfigId int `pulumi:"createFromConfigId"`
	// The version number of the configuration to be cloned.
	CreateFromVersion int `pulumi:"createFromVersion"`
	// A description of the new configuration.
	Description string `pulumi:"description"`
	// The group id to use.
	GroupId int `pulumi:"groupId"`
	// The hostnames to be protected under the new configuration.
	HostNames []string `pulumi:"hostNames"`
	// The name to be applied to the new configuration.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AppSecConfigurationClone resource.
type AppSecConfigurationCloneArgs struct {
	// The contract id to use.
	ContractId pulumi.StringInput
	// The ID of the configuration to be cloned.
	CreateFromConfigId pulumi.IntInput
	// The version number of the configuration to be cloned.
	CreateFromVersion pulumi.IntInput
	// A description of the new configuration.
	Description pulumi.StringInput
	// The group id to use.
	GroupId pulumi.IntInput
	// The hostnames to be protected under the new configuration.
	HostNames pulumi.StringArrayInput
	// The name to be applied to the new configuration.
	Name pulumi.StringPtrInput
}

func (AppSecConfigurationCloneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecConfigurationCloneArgs)(nil)).Elem()
}

type AppSecConfigurationCloneInput interface {
	pulumi.Input

	ToAppSecConfigurationCloneOutput() AppSecConfigurationCloneOutput
	ToAppSecConfigurationCloneOutputWithContext(ctx context.Context) AppSecConfigurationCloneOutput
}

func (*AppSecConfigurationClone) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecConfigurationClone)(nil))
}

func (i *AppSecConfigurationClone) ToAppSecConfigurationCloneOutput() AppSecConfigurationCloneOutput {
	return i.ToAppSecConfigurationCloneOutputWithContext(context.Background())
}

func (i *AppSecConfigurationClone) ToAppSecConfigurationCloneOutputWithContext(ctx context.Context) AppSecConfigurationCloneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecConfigurationCloneOutput)
}

func (i *AppSecConfigurationClone) ToAppSecConfigurationClonePtrOutput() AppSecConfigurationClonePtrOutput {
	return i.ToAppSecConfigurationClonePtrOutputWithContext(context.Background())
}

func (i *AppSecConfigurationClone) ToAppSecConfigurationClonePtrOutputWithContext(ctx context.Context) AppSecConfigurationClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecConfigurationClonePtrOutput)
}

type AppSecConfigurationClonePtrInput interface {
	pulumi.Input

	ToAppSecConfigurationClonePtrOutput() AppSecConfigurationClonePtrOutput
	ToAppSecConfigurationClonePtrOutputWithContext(ctx context.Context) AppSecConfigurationClonePtrOutput
}

type appSecConfigurationClonePtrType AppSecConfigurationCloneArgs

func (*appSecConfigurationClonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecConfigurationClone)(nil))
}

func (i *appSecConfigurationClonePtrType) ToAppSecConfigurationClonePtrOutput() AppSecConfigurationClonePtrOutput {
	return i.ToAppSecConfigurationClonePtrOutputWithContext(context.Background())
}

func (i *appSecConfigurationClonePtrType) ToAppSecConfigurationClonePtrOutputWithContext(ctx context.Context) AppSecConfigurationClonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecConfigurationClonePtrOutput)
}

// AppSecConfigurationCloneArrayInput is an input type that accepts AppSecConfigurationCloneArray and AppSecConfigurationCloneArrayOutput values.
// You can construct a concrete instance of `AppSecConfigurationCloneArrayInput` via:
//
//          AppSecConfigurationCloneArray{ AppSecConfigurationCloneArgs{...} }
type AppSecConfigurationCloneArrayInput interface {
	pulumi.Input

	ToAppSecConfigurationCloneArrayOutput() AppSecConfigurationCloneArrayOutput
	ToAppSecConfigurationCloneArrayOutputWithContext(context.Context) AppSecConfigurationCloneArrayOutput
}

type AppSecConfigurationCloneArray []AppSecConfigurationCloneInput

func (AppSecConfigurationCloneArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecConfigurationClone)(nil))
}

func (i AppSecConfigurationCloneArray) ToAppSecConfigurationCloneArrayOutput() AppSecConfigurationCloneArrayOutput {
	return i.ToAppSecConfigurationCloneArrayOutputWithContext(context.Background())
}

func (i AppSecConfigurationCloneArray) ToAppSecConfigurationCloneArrayOutputWithContext(ctx context.Context) AppSecConfigurationCloneArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecConfigurationCloneArrayOutput)
}

// AppSecConfigurationCloneMapInput is an input type that accepts AppSecConfigurationCloneMap and AppSecConfigurationCloneMapOutput values.
// You can construct a concrete instance of `AppSecConfigurationCloneMapInput` via:
//
//          AppSecConfigurationCloneMap{ "key": AppSecConfigurationCloneArgs{...} }
type AppSecConfigurationCloneMapInput interface {
	pulumi.Input

	ToAppSecConfigurationCloneMapOutput() AppSecConfigurationCloneMapOutput
	ToAppSecConfigurationCloneMapOutputWithContext(context.Context) AppSecConfigurationCloneMapOutput
}

type AppSecConfigurationCloneMap map[string]AppSecConfigurationCloneInput

func (AppSecConfigurationCloneMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecConfigurationClone)(nil))
}

func (i AppSecConfigurationCloneMap) ToAppSecConfigurationCloneMapOutput() AppSecConfigurationCloneMapOutput {
	return i.ToAppSecConfigurationCloneMapOutputWithContext(context.Background())
}

func (i AppSecConfigurationCloneMap) ToAppSecConfigurationCloneMapOutputWithContext(ctx context.Context) AppSecConfigurationCloneMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecConfigurationCloneMapOutput)
}

type AppSecConfigurationCloneOutput struct {
	*pulumi.OutputState
}

func (AppSecConfigurationCloneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecConfigurationClone)(nil))
}

func (o AppSecConfigurationCloneOutput) ToAppSecConfigurationCloneOutput() AppSecConfigurationCloneOutput {
	return o
}

func (o AppSecConfigurationCloneOutput) ToAppSecConfigurationCloneOutputWithContext(ctx context.Context) AppSecConfigurationCloneOutput {
	return o
}

func (o AppSecConfigurationCloneOutput) ToAppSecConfigurationClonePtrOutput() AppSecConfigurationClonePtrOutput {
	return o.ToAppSecConfigurationClonePtrOutputWithContext(context.Background())
}

func (o AppSecConfigurationCloneOutput) ToAppSecConfigurationClonePtrOutputWithContext(ctx context.Context) AppSecConfigurationClonePtrOutput {
	return o.ApplyT(func(v AppSecConfigurationClone) *AppSecConfigurationClone {
		return &v
	}).(AppSecConfigurationClonePtrOutput)
}

type AppSecConfigurationClonePtrOutput struct {
	*pulumi.OutputState
}

func (AppSecConfigurationClonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecConfigurationClone)(nil))
}

func (o AppSecConfigurationClonePtrOutput) ToAppSecConfigurationClonePtrOutput() AppSecConfigurationClonePtrOutput {
	return o
}

func (o AppSecConfigurationClonePtrOutput) ToAppSecConfigurationClonePtrOutputWithContext(ctx context.Context) AppSecConfigurationClonePtrOutput {
	return o
}

type AppSecConfigurationCloneArrayOutput struct{ *pulumi.OutputState }

func (AppSecConfigurationCloneArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecConfigurationClone)(nil))
}

func (o AppSecConfigurationCloneArrayOutput) ToAppSecConfigurationCloneArrayOutput() AppSecConfigurationCloneArrayOutput {
	return o
}

func (o AppSecConfigurationCloneArrayOutput) ToAppSecConfigurationCloneArrayOutputWithContext(ctx context.Context) AppSecConfigurationCloneArrayOutput {
	return o
}

func (o AppSecConfigurationCloneArrayOutput) Index(i pulumi.IntInput) AppSecConfigurationCloneOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecConfigurationClone {
		return vs[0].([]AppSecConfigurationClone)[vs[1].(int)]
	}).(AppSecConfigurationCloneOutput)
}

type AppSecConfigurationCloneMapOutput struct{ *pulumi.OutputState }

func (AppSecConfigurationCloneMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecConfigurationClone)(nil))
}

func (o AppSecConfigurationCloneMapOutput) ToAppSecConfigurationCloneMapOutput() AppSecConfigurationCloneMapOutput {
	return o
}

func (o AppSecConfigurationCloneMapOutput) ToAppSecConfigurationCloneMapOutputWithContext(ctx context.Context) AppSecConfigurationCloneMapOutput {
	return o
}

func (o AppSecConfigurationCloneMapOutput) MapIndex(k pulumi.StringInput) AppSecConfigurationCloneOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecConfigurationClone {
		return vs[0].(map[string]AppSecConfigurationClone)[vs[1].(string)]
	}).(AppSecConfigurationCloneOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecConfigurationCloneOutput{})
	pulumi.RegisterOutputType(AppSecConfigurationClonePtrOutput{})
	pulumi.RegisterOutputType(AppSecConfigurationCloneArrayOutput{})
	pulumi.RegisterOutputType(AppSecConfigurationCloneMapOutput{})
}
