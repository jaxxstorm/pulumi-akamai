// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use the `getAppSecAttackGroupActions` data source to retrieve a list of attack groups and actions associated with a security policy or a specific attack group and action associated with a security policy.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		attackGroupActions, err := akamai.GetAppSecAttackGroupActions(ctx, &akamai.GetAppSecAttackGroupActionsArgs{
// 			ConfigId:         configuration.ConfigId,
// 			Version:          configuration.LatestVersion,
// 			SecurityPolicyId: _var.Security_policy_id,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("attackGroupActionsText", attackGroupActions.OutputText)
// 		ctx.Export("attackGroupActionsJson", attackGroupActions.Json)
// 		opt1 := _var.Attack_group
// 		attackGroupActionAppSecAttackGroupActions, err := akamai.GetAppSecAttackGroupActions(ctx, &akamai.GetAppSecAttackGroupActionsArgs{
// 			ConfigId:         configuration.ConfigId,
// 			Version:          configuration.LatestVersion,
// 			SecurityPolicyId: _var.Security_policy_id,
// 			AttackGroup:      &opt1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("attackGroupAction", attackGroupActionAppSecAttackGroupActions.Action)
// 		return nil
// 	})
// }
// ```
func GetAppSecAttackGroupActions(ctx *pulumi.Context, args *GetAppSecAttackGroupActionsArgs, opts ...pulumi.InvokeOption) (*GetAppSecAttackGroupActionsResult, error) {
	var rv GetAppSecAttackGroupActionsResult
	err := ctx.Invoke("akamai:index/getAppSecAttackGroupActions:getAppSecAttackGroupActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAppSecAttackGroupActions.
type GetAppSecAttackGroupActionsArgs struct {
	// The attack group to use. If not supplied, information about all attack groups will be returned.
	AttackGroup *string `pulumi:"attackGroup"`
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The ID of the security policy to use.
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	// The version number of the security configuration to use.
	Version int `pulumi:"version"`
}

// A collection of values returned by getAppSecAttackGroupActions.
type GetAppSecAttackGroupActionsResult struct {
	// The attack group action for the attack group if one was specified: `alert`, `deny`, or `none`. If the action is none, the attack group is inactive in the security policy.
	Action      string  `pulumi:"action"`
	AttackGroup *string `pulumi:"attackGroup"`
	ConfigId    int     `pulumi:"configId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The attack group information in JSON format.
	Json string `pulumi:"json"`
	// A tabular display showing the `action` and `group` name for each attack group.
	OutputText       string `pulumi:"outputText"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	Version          int    `pulumi:"version"`
}
