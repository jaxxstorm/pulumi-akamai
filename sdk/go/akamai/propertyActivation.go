// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The `PropertyActivation` resource lets you activate a property version. An activation deploys the version to either the Akamai staging or production network. You can activate a specific version multiple times if you need to.
//
// Before activating on production, activate on staging first. This way you can detect any problems in staging before your changes progress to production.
//
// ## Argument reference
//
// The following arguments are supported:
//
// * `propertyId` - (Required) The property’s unique identifier, including the `prp_` prefix.
// * `contact` - (Required) One or more email addresses to send activation status changes to.
// * `version` - (Required) The property version to activate. Previously this field was optional. It now depends on the `Property` resource to identify latest instead of calculating it locally.  This association helps keep the dependency tree properly aligned. To always use the latest version, enter this value `{resource}.{resource identifier}.{field name}`. Using the example code above, the entry would be `akamai_property.example.latest_version` since we want the value of the `latestVersion` attribute in the `Property` resource labeled `example`.
// * `network` - (Optional) Akamai network to activate on, either `STAGING` or `PRODUCTION`. `STAGING` is the default.
// * `property` - (Deprecated) Replaced by `propertyId`. Maintained for legacy purposes.
//
// ## Attribute reference
//
// The following attributes are returned:
//
// * `id` - The unique identifier for this activation.
// * `warnings` - The contents of `warnings` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.
// * `errors` - The contents of `errors` field returned by the API. For more information see [Errors](https://developer.akamai.com/api/core_features/property_manager/v1.html#errors) in the PAPI documentation.
// * `activationId` - The ID given to the activation event while it's in progress.
// * `status` - The property version’s activation status on the selected network.
type PropertyActivation struct {
	pulumi.CustomResourceState

	ActivationId pulumi.StringOutput      `pulumi:"activationId"`
	Contacts     pulumi.StringArrayOutput `pulumi:"contacts"`
	Errors       pulumi.StringOutput      `pulumi:"errors"`
	Network      pulumi.StringPtrOutput   `pulumi:"network"`
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringOutput `pulumi:"property"`
	PropertyId pulumi.StringOutput `pulumi:"propertyId"`
	Status     pulumi.StringOutput `pulumi:"status"`
	Version    pulumi.IntOutput    `pulumi:"version"`
	Warnings   pulumi.StringOutput `pulumi:"warnings"`
}

// NewPropertyActivation registers a new resource with the given unique name, arguments, and options.
func NewPropertyActivation(ctx *pulumi.Context,
	name string, args *PropertyActivationArgs, opts ...pulumi.ResourceOption) (*PropertyActivation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Contacts == nil {
		return nil, errors.New("invalid value for required argument 'Contacts'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("akamai:properties/propertyActivation:PropertyActivation"),
		},
	})
	opts = append(opts, aliases)
	var resource PropertyActivation
	err := ctx.RegisterResource("akamai:index/propertyActivation:PropertyActivation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPropertyActivation gets an existing PropertyActivation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPropertyActivation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PropertyActivationState, opts ...pulumi.ResourceOption) (*PropertyActivation, error) {
	var resource PropertyActivation
	err := ctx.ReadResource("akamai:index/propertyActivation:PropertyActivation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PropertyActivation resources.
type propertyActivationState struct {
	ActivationId *string  `pulumi:"activationId"`
	Contacts     []string `pulumi:"contacts"`
	Errors       *string  `pulumi:"errors"`
	Network      *string  `pulumi:"network"`
	// Deprecated: The setting "property" has been deprecated.
	Property   *string `pulumi:"property"`
	PropertyId *string `pulumi:"propertyId"`
	Status     *string `pulumi:"status"`
	Version    *int    `pulumi:"version"`
	Warnings   *string `pulumi:"warnings"`
}

type PropertyActivationState struct {
	ActivationId pulumi.StringPtrInput
	Contacts     pulumi.StringArrayInput
	Errors       pulumi.StringPtrInput
	Network      pulumi.StringPtrInput
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringPtrInput
	PropertyId pulumi.StringPtrInput
	Status     pulumi.StringPtrInput
	Version    pulumi.IntPtrInput
	Warnings   pulumi.StringPtrInput
}

func (PropertyActivationState) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyActivationState)(nil)).Elem()
}

type propertyActivationArgs struct {
	ActivationId *string  `pulumi:"activationId"`
	Contacts     []string `pulumi:"contacts"`
	Network      *string  `pulumi:"network"`
	// Deprecated: The setting "property" has been deprecated.
	Property   *string `pulumi:"property"`
	PropertyId *string `pulumi:"propertyId"`
	Version    int     `pulumi:"version"`
}

// The set of arguments for constructing a PropertyActivation resource.
type PropertyActivationArgs struct {
	ActivationId pulumi.StringPtrInput
	Contacts     pulumi.StringArrayInput
	Network      pulumi.StringPtrInput
	// Deprecated: The setting "property" has been deprecated.
	Property   pulumi.StringPtrInput
	PropertyId pulumi.StringPtrInput
	Version    pulumi.IntInput
}

func (PropertyActivationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*propertyActivationArgs)(nil)).Elem()
}

type PropertyActivationInput interface {
	pulumi.Input

	ToPropertyActivationOutput() PropertyActivationOutput
	ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput
}

func (PropertyActivation) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivation)(nil)).Elem()
}

func (i PropertyActivation) ToPropertyActivationOutput() PropertyActivationOutput {
	return i.ToPropertyActivationOutputWithContext(context.Background())
}

func (i PropertyActivation) ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropertyActivationOutput)
}

type PropertyActivationOutput struct {
	*pulumi.OutputState
}

func (PropertyActivationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropertyActivationOutput)(nil)).Elem()
}

func (o PropertyActivationOutput) ToPropertyActivationOutput() PropertyActivationOutput {
	return o
}

func (o PropertyActivationOutput) ToPropertyActivationOutputWithContext(ctx context.Context) PropertyActivationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PropertyActivationOutput{})
}
