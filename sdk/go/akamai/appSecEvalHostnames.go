// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `resourceAkamaiAppsecEvalHostnames` resource allows you to update the list of hostnames you want to evaluate for a configuration.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-akamai/sdk/v2/go/akamai"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := _var.Security_configuration
// 		configuration, err := akamai.LookupAppSecConfiguration(ctx, &akamai.LookupAppSecConfigurationArgs{
// 			Name: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = akamai.NewAppSecEvalHostnames(ctx, "evalHostnames", &akamai.AppSecEvalHostnamesArgs{
// 			ConfigId:  pulumi.Int(configuration.ConfigId),
// 			Hostnames: _var.Hostnames,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type AppSecEvalHostnames struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// A list of evaluation hostnames to be used for the specified configuration version.
	Hostnames pulumi.StringArrayOutput `pulumi:"hostnames"`
}

// NewAppSecEvalHostnames registers a new resource with the given unique name, arguments, and options.
func NewAppSecEvalHostnames(ctx *pulumi.Context,
	name string, args *AppSecEvalHostnamesArgs, opts ...pulumi.ResourceOption) (*AppSecEvalHostnames, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.Hostnames == nil {
		return nil, errors.New("invalid value for required argument 'Hostnames'")
	}
	var resource AppSecEvalHostnames
	err := ctx.RegisterResource("akamai:index/appSecEvalHostnames:AppSecEvalHostnames", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecEvalHostnames gets an existing AppSecEvalHostnames resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecEvalHostnames(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecEvalHostnamesState, opts ...pulumi.ResourceOption) (*AppSecEvalHostnames, error) {
	var resource AppSecEvalHostnames
	err := ctx.ReadResource("akamai:index/appSecEvalHostnames:AppSecEvalHostnames", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecEvalHostnames resources.
type appSecEvalHostnamesState struct {
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// A list of evaluation hostnames to be used for the specified configuration version.
	Hostnames []string `pulumi:"hostnames"`
}

type AppSecEvalHostnamesState struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// A list of evaluation hostnames to be used for the specified configuration version.
	Hostnames pulumi.StringArrayInput
}

func (AppSecEvalHostnamesState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalHostnamesState)(nil)).Elem()
}

type appSecEvalHostnamesArgs struct {
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// A list of evaluation hostnames to be used for the specified configuration version.
	Hostnames []string `pulumi:"hostnames"`
}

// The set of arguments for constructing a AppSecEvalHostnames resource.
type AppSecEvalHostnamesArgs struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// A list of evaluation hostnames to be used for the specified configuration version.
	Hostnames pulumi.StringArrayInput
}

func (AppSecEvalHostnamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecEvalHostnamesArgs)(nil)).Elem()
}

type AppSecEvalHostnamesInput interface {
	pulumi.Input

	ToAppSecEvalHostnamesOutput() AppSecEvalHostnamesOutput
	ToAppSecEvalHostnamesOutputWithContext(ctx context.Context) AppSecEvalHostnamesOutput
}

func (*AppSecEvalHostnames) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalHostnames)(nil))
}

func (i *AppSecEvalHostnames) ToAppSecEvalHostnamesOutput() AppSecEvalHostnamesOutput {
	return i.ToAppSecEvalHostnamesOutputWithContext(context.Background())
}

func (i *AppSecEvalHostnames) ToAppSecEvalHostnamesOutputWithContext(ctx context.Context) AppSecEvalHostnamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalHostnamesOutput)
}

func (i *AppSecEvalHostnames) ToAppSecEvalHostnamesPtrOutput() AppSecEvalHostnamesPtrOutput {
	return i.ToAppSecEvalHostnamesPtrOutputWithContext(context.Background())
}

func (i *AppSecEvalHostnames) ToAppSecEvalHostnamesPtrOutputWithContext(ctx context.Context) AppSecEvalHostnamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalHostnamesPtrOutput)
}

type AppSecEvalHostnamesPtrInput interface {
	pulumi.Input

	ToAppSecEvalHostnamesPtrOutput() AppSecEvalHostnamesPtrOutput
	ToAppSecEvalHostnamesPtrOutputWithContext(ctx context.Context) AppSecEvalHostnamesPtrOutput
}

type appSecEvalHostnamesPtrType AppSecEvalHostnamesArgs

func (*appSecEvalHostnamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalHostnames)(nil))
}

func (i *appSecEvalHostnamesPtrType) ToAppSecEvalHostnamesPtrOutput() AppSecEvalHostnamesPtrOutput {
	return i.ToAppSecEvalHostnamesPtrOutputWithContext(context.Background())
}

func (i *appSecEvalHostnamesPtrType) ToAppSecEvalHostnamesPtrOutputWithContext(ctx context.Context) AppSecEvalHostnamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalHostnamesPtrOutput)
}

// AppSecEvalHostnamesArrayInput is an input type that accepts AppSecEvalHostnamesArray and AppSecEvalHostnamesArrayOutput values.
// You can construct a concrete instance of `AppSecEvalHostnamesArrayInput` via:
//
//          AppSecEvalHostnamesArray{ AppSecEvalHostnamesArgs{...} }
type AppSecEvalHostnamesArrayInput interface {
	pulumi.Input

	ToAppSecEvalHostnamesArrayOutput() AppSecEvalHostnamesArrayOutput
	ToAppSecEvalHostnamesArrayOutputWithContext(context.Context) AppSecEvalHostnamesArrayOutput
}

type AppSecEvalHostnamesArray []AppSecEvalHostnamesInput

func (AppSecEvalHostnamesArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecEvalHostnames)(nil))
}

func (i AppSecEvalHostnamesArray) ToAppSecEvalHostnamesArrayOutput() AppSecEvalHostnamesArrayOutput {
	return i.ToAppSecEvalHostnamesArrayOutputWithContext(context.Background())
}

func (i AppSecEvalHostnamesArray) ToAppSecEvalHostnamesArrayOutputWithContext(ctx context.Context) AppSecEvalHostnamesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalHostnamesArrayOutput)
}

// AppSecEvalHostnamesMapInput is an input type that accepts AppSecEvalHostnamesMap and AppSecEvalHostnamesMapOutput values.
// You can construct a concrete instance of `AppSecEvalHostnamesMapInput` via:
//
//          AppSecEvalHostnamesMap{ "key": AppSecEvalHostnamesArgs{...} }
type AppSecEvalHostnamesMapInput interface {
	pulumi.Input

	ToAppSecEvalHostnamesMapOutput() AppSecEvalHostnamesMapOutput
	ToAppSecEvalHostnamesMapOutputWithContext(context.Context) AppSecEvalHostnamesMapOutput
}

type AppSecEvalHostnamesMap map[string]AppSecEvalHostnamesInput

func (AppSecEvalHostnamesMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecEvalHostnames)(nil))
}

func (i AppSecEvalHostnamesMap) ToAppSecEvalHostnamesMapOutput() AppSecEvalHostnamesMapOutput {
	return i.ToAppSecEvalHostnamesMapOutputWithContext(context.Background())
}

func (i AppSecEvalHostnamesMap) ToAppSecEvalHostnamesMapOutputWithContext(ctx context.Context) AppSecEvalHostnamesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecEvalHostnamesMapOutput)
}

type AppSecEvalHostnamesOutput struct {
	*pulumi.OutputState
}

func (AppSecEvalHostnamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecEvalHostnames)(nil))
}

func (o AppSecEvalHostnamesOutput) ToAppSecEvalHostnamesOutput() AppSecEvalHostnamesOutput {
	return o
}

func (o AppSecEvalHostnamesOutput) ToAppSecEvalHostnamesOutputWithContext(ctx context.Context) AppSecEvalHostnamesOutput {
	return o
}

func (o AppSecEvalHostnamesOutput) ToAppSecEvalHostnamesPtrOutput() AppSecEvalHostnamesPtrOutput {
	return o.ToAppSecEvalHostnamesPtrOutputWithContext(context.Background())
}

func (o AppSecEvalHostnamesOutput) ToAppSecEvalHostnamesPtrOutputWithContext(ctx context.Context) AppSecEvalHostnamesPtrOutput {
	return o.ApplyT(func(v AppSecEvalHostnames) *AppSecEvalHostnames {
		return &v
	}).(AppSecEvalHostnamesPtrOutput)
}

type AppSecEvalHostnamesPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecEvalHostnamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecEvalHostnames)(nil))
}

func (o AppSecEvalHostnamesPtrOutput) ToAppSecEvalHostnamesPtrOutput() AppSecEvalHostnamesPtrOutput {
	return o
}

func (o AppSecEvalHostnamesPtrOutput) ToAppSecEvalHostnamesPtrOutputWithContext(ctx context.Context) AppSecEvalHostnamesPtrOutput {
	return o
}

type AppSecEvalHostnamesArrayOutput struct{ *pulumi.OutputState }

func (AppSecEvalHostnamesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecEvalHostnames)(nil))
}

func (o AppSecEvalHostnamesArrayOutput) ToAppSecEvalHostnamesArrayOutput() AppSecEvalHostnamesArrayOutput {
	return o
}

func (o AppSecEvalHostnamesArrayOutput) ToAppSecEvalHostnamesArrayOutputWithContext(ctx context.Context) AppSecEvalHostnamesArrayOutput {
	return o
}

func (o AppSecEvalHostnamesArrayOutput) Index(i pulumi.IntInput) AppSecEvalHostnamesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecEvalHostnames {
		return vs[0].([]AppSecEvalHostnames)[vs[1].(int)]
	}).(AppSecEvalHostnamesOutput)
}

type AppSecEvalHostnamesMapOutput struct{ *pulumi.OutputState }

func (AppSecEvalHostnamesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecEvalHostnames)(nil))
}

func (o AppSecEvalHostnamesMapOutput) ToAppSecEvalHostnamesMapOutput() AppSecEvalHostnamesMapOutput {
	return o
}

func (o AppSecEvalHostnamesMapOutput) ToAppSecEvalHostnamesMapOutputWithContext(ctx context.Context) AppSecEvalHostnamesMapOutput {
	return o
}

func (o AppSecEvalHostnamesMapOutput) MapIndex(k pulumi.StringInput) AppSecEvalHostnamesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecEvalHostnames {
		return vs[0].(map[string]AppSecEvalHostnames)[vs[1].(string)]
	}).(AppSecEvalHostnamesOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecEvalHostnamesOutput{})
	pulumi.RegisterOutputType(AppSecEvalHostnamesPtrOutput{})
	pulumi.RegisterOutputType(AppSecEvalHostnamesArrayOutput{})
	pulumi.RegisterOutputType(AppSecEvalHostnamesMapOutput{})
}
