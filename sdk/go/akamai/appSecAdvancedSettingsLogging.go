// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package akamai

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The `resourceAkamaiAppsecAdvancedSettingsLogging` resource allows you to enable, disable, or update HTTP header logging settings for a configuration. This operation applies at the configuration level, and therefore applies to all policies within a configuration. You may override these settings for a particular policy by specifying the policy using the securityPolicyId parameter.
type AppSecAdvancedSettingsLogging struct {
	pulumi.CustomResourceState

	// The ID of the security configuration to use.
	ConfigId pulumi.IntOutput `pulumi:"configId"`
	// The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).
	Logging pulumi.StringOutput `pulumi:"logging"`
	// The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.
	SecurityPolicyId pulumi.StringPtrOutput `pulumi:"securityPolicyId"`
}

// NewAppSecAdvancedSettingsLogging registers a new resource with the given unique name, arguments, and options.
func NewAppSecAdvancedSettingsLogging(ctx *pulumi.Context,
	name string, args *AppSecAdvancedSettingsLoggingArgs, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsLogging, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigId'")
	}
	if args.Logging == nil {
		return nil, errors.New("invalid value for required argument 'Logging'")
	}
	var resource AppSecAdvancedSettingsLogging
	err := ctx.RegisterResource("akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppSecAdvancedSettingsLogging gets an existing AppSecAdvancedSettingsLogging resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppSecAdvancedSettingsLogging(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppSecAdvancedSettingsLoggingState, opts ...pulumi.ResourceOption) (*AppSecAdvancedSettingsLogging, error) {
	var resource AppSecAdvancedSettingsLogging
	err := ctx.ReadResource("akamai:index/appSecAdvancedSettingsLogging:AppSecAdvancedSettingsLogging", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppSecAdvancedSettingsLogging resources.
type appSecAdvancedSettingsLoggingState struct {
	// The ID of the security configuration to use.
	ConfigId *int `pulumi:"configId"`
	// The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).
	Logging *string `pulumi:"logging"`
	// The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

type AppSecAdvancedSettingsLoggingState struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntPtrInput
	// The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).
	Logging pulumi.StringPtrInput
	// The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecAdvancedSettingsLoggingState) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsLoggingState)(nil)).Elem()
}

type appSecAdvancedSettingsLoggingArgs struct {
	// The ID of the security configuration to use.
	ConfigId int `pulumi:"configId"`
	// The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).
	Logging string `pulumi:"logging"`
	// The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.
	SecurityPolicyId *string `pulumi:"securityPolicyId"`
}

// The set of arguments for constructing a AppSecAdvancedSettingsLogging resource.
type AppSecAdvancedSettingsLoggingArgs struct {
	// The ID of the security configuration to use.
	ConfigId pulumi.IntInput
	// The logging settings to apply ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#puthttpheaderloggingforaconfiguration)).
	Logging pulumi.StringInput
	// The ID of a specific security policy to which the logging settings should be applied. If not supplied, the indicated settings will be applied to all policies within the configuration.
	SecurityPolicyId pulumi.StringPtrInput
}

func (AppSecAdvancedSettingsLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appSecAdvancedSettingsLoggingArgs)(nil)).Elem()
}

type AppSecAdvancedSettingsLoggingInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsLoggingOutput() AppSecAdvancedSettingsLoggingOutput
	ToAppSecAdvancedSettingsLoggingOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingOutput
}

func (*AppSecAdvancedSettingsLogging) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecAdvancedSettingsLogging)(nil))
}

func (i *AppSecAdvancedSettingsLogging) ToAppSecAdvancedSettingsLoggingOutput() AppSecAdvancedSettingsLoggingOutput {
	return i.ToAppSecAdvancedSettingsLoggingOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsLogging) ToAppSecAdvancedSettingsLoggingOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsLoggingOutput)
}

func (i *AppSecAdvancedSettingsLogging) ToAppSecAdvancedSettingsLoggingPtrOutput() AppSecAdvancedSettingsLoggingPtrOutput {
	return i.ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(context.Background())
}

func (i *AppSecAdvancedSettingsLogging) ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsLoggingPtrOutput)
}

type AppSecAdvancedSettingsLoggingPtrInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsLoggingPtrOutput() AppSecAdvancedSettingsLoggingPtrOutput
	ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingPtrOutput
}

type appSecAdvancedSettingsLoggingPtrType AppSecAdvancedSettingsLoggingArgs

func (*appSecAdvancedSettingsLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsLogging)(nil))
}

func (i *appSecAdvancedSettingsLoggingPtrType) ToAppSecAdvancedSettingsLoggingPtrOutput() AppSecAdvancedSettingsLoggingPtrOutput {
	return i.ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(context.Background())
}

func (i *appSecAdvancedSettingsLoggingPtrType) ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsLoggingPtrOutput)
}

// AppSecAdvancedSettingsLoggingArrayInput is an input type that accepts AppSecAdvancedSettingsLoggingArray and AppSecAdvancedSettingsLoggingArrayOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsLoggingArrayInput` via:
//
//          AppSecAdvancedSettingsLoggingArray{ AppSecAdvancedSettingsLoggingArgs{...} }
type AppSecAdvancedSettingsLoggingArrayInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsLoggingArrayOutput() AppSecAdvancedSettingsLoggingArrayOutput
	ToAppSecAdvancedSettingsLoggingArrayOutputWithContext(context.Context) AppSecAdvancedSettingsLoggingArrayOutput
}

type AppSecAdvancedSettingsLoggingArray []AppSecAdvancedSettingsLoggingInput

func (AppSecAdvancedSettingsLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*AppSecAdvancedSettingsLogging)(nil))
}

func (i AppSecAdvancedSettingsLoggingArray) ToAppSecAdvancedSettingsLoggingArrayOutput() AppSecAdvancedSettingsLoggingArrayOutput {
	return i.ToAppSecAdvancedSettingsLoggingArrayOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsLoggingArray) ToAppSecAdvancedSettingsLoggingArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsLoggingArrayOutput)
}

// AppSecAdvancedSettingsLoggingMapInput is an input type that accepts AppSecAdvancedSettingsLoggingMap and AppSecAdvancedSettingsLoggingMapOutput values.
// You can construct a concrete instance of `AppSecAdvancedSettingsLoggingMapInput` via:
//
//          AppSecAdvancedSettingsLoggingMap{ "key": AppSecAdvancedSettingsLoggingArgs{...} }
type AppSecAdvancedSettingsLoggingMapInput interface {
	pulumi.Input

	ToAppSecAdvancedSettingsLoggingMapOutput() AppSecAdvancedSettingsLoggingMapOutput
	ToAppSecAdvancedSettingsLoggingMapOutputWithContext(context.Context) AppSecAdvancedSettingsLoggingMapOutput
}

type AppSecAdvancedSettingsLoggingMap map[string]AppSecAdvancedSettingsLoggingInput

func (AppSecAdvancedSettingsLoggingMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*AppSecAdvancedSettingsLogging)(nil))
}

func (i AppSecAdvancedSettingsLoggingMap) ToAppSecAdvancedSettingsLoggingMapOutput() AppSecAdvancedSettingsLoggingMapOutput {
	return i.ToAppSecAdvancedSettingsLoggingMapOutputWithContext(context.Background())
}

func (i AppSecAdvancedSettingsLoggingMap) ToAppSecAdvancedSettingsLoggingMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSecAdvancedSettingsLoggingMapOutput)
}

type AppSecAdvancedSettingsLoggingOutput struct {
	*pulumi.OutputState
}

func (AppSecAdvancedSettingsLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSecAdvancedSettingsLogging)(nil))
}

func (o AppSecAdvancedSettingsLoggingOutput) ToAppSecAdvancedSettingsLoggingOutput() AppSecAdvancedSettingsLoggingOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingOutput) ToAppSecAdvancedSettingsLoggingOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingOutput) ToAppSecAdvancedSettingsLoggingPtrOutput() AppSecAdvancedSettingsLoggingPtrOutput {
	return o.ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(context.Background())
}

func (o AppSecAdvancedSettingsLoggingOutput) ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingPtrOutput {
	return o.ApplyT(func(v AppSecAdvancedSettingsLogging) *AppSecAdvancedSettingsLogging {
		return &v
	}).(AppSecAdvancedSettingsLoggingPtrOutput)
}

type AppSecAdvancedSettingsLoggingPtrOutput struct {
	*pulumi.OutputState
}

func (AppSecAdvancedSettingsLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSecAdvancedSettingsLogging)(nil))
}

func (o AppSecAdvancedSettingsLoggingPtrOutput) ToAppSecAdvancedSettingsLoggingPtrOutput() AppSecAdvancedSettingsLoggingPtrOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingPtrOutput) ToAppSecAdvancedSettingsLoggingPtrOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingPtrOutput {
	return o
}

type AppSecAdvancedSettingsLoggingArrayOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSecAdvancedSettingsLogging)(nil))
}

func (o AppSecAdvancedSettingsLoggingArrayOutput) ToAppSecAdvancedSettingsLoggingArrayOutput() AppSecAdvancedSettingsLoggingArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingArrayOutput) ToAppSecAdvancedSettingsLoggingArrayOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingArrayOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingArrayOutput) Index(i pulumi.IntInput) AppSecAdvancedSettingsLoggingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSecAdvancedSettingsLogging {
		return vs[0].([]AppSecAdvancedSettingsLogging)[vs[1].(int)]
	}).(AppSecAdvancedSettingsLoggingOutput)
}

type AppSecAdvancedSettingsLoggingMapOutput struct{ *pulumi.OutputState }

func (AppSecAdvancedSettingsLoggingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AppSecAdvancedSettingsLogging)(nil))
}

func (o AppSecAdvancedSettingsLoggingMapOutput) ToAppSecAdvancedSettingsLoggingMapOutput() AppSecAdvancedSettingsLoggingMapOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingMapOutput) ToAppSecAdvancedSettingsLoggingMapOutputWithContext(ctx context.Context) AppSecAdvancedSettingsLoggingMapOutput {
	return o
}

func (o AppSecAdvancedSettingsLoggingMapOutput) MapIndex(k pulumi.StringInput) AppSecAdvancedSettingsLoggingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AppSecAdvancedSettingsLogging {
		return vs[0].(map[string]AppSecAdvancedSettingsLogging)[vs[1].(string)]
	}).(AppSecAdvancedSettingsLoggingOutput)
}

func init() {
	pulumi.RegisterOutputType(AppSecAdvancedSettingsLoggingOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsLoggingPtrOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsLoggingArrayOutput{})
	pulumi.RegisterOutputType(AppSecAdvancedSettingsLoggingMapOutput{})
}
