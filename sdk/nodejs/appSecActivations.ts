// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `akamai.AppSecActivations` resource allows you to activate or deactivate a given security configuration version.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Akamai Tools",
 * });
 * const activation = new akamai.AppSecActivations("activation", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     version: configuration.then(configuration => configuration.latestVersion),
 *     network: "STAGING",
 *     notes: "TEST Notes",
 *     notificationEmails: ["user@example.com"],
 * });
 * ```
 *
 * * `configId` - (Required) The ID of the security configuration to use.
 *
 * * `version` - (Required) The version number of the security configuration to use.
 *
 * * `notificationEmails` - (Required) A bracketed, comma-separated list of email addresses that will be notified when the operation is complete.
 *
 * * `network` - The network in which the security configuration should be activated. If supplied, must be either STAGING or PRODUCTION. If not supplied, STAGING will be assumed.
 *
 * * `notes` - An optional text note describing this operation.
 *
 * * `activate` - A boolean indicating whether to activate the specified configuration version. If not supplied, True is assumed.
 */
export class AppSecActivations extends pulumi.CustomResource {
    /**
     * Get an existing AppSecActivations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecActivationsState, opts?: pulumi.CustomResourceOptions): AppSecActivations {
        return new AppSecActivations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecActivations:AppSecActivations';

    /**
     * Returns true if the given object is an instance of AppSecActivations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecActivations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecActivations.__pulumiType;
    }

    public readonly activate!: pulumi.Output<boolean | undefined>;
    public readonly configId!: pulumi.Output<number>;
    public readonly network!: pulumi.Output<string | undefined>;
    public readonly notes!: pulumi.Output<string | undefined>;
    public readonly notificationEmails!: pulumi.Output<string[]>;
    /**
     * The status of the operation. The following values are may be returned:
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a AppSecActivations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecActivationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecActivationsArgs | AppSecActivationsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AppSecActivationsState | undefined;
            inputs["activate"] = state ? state.activate : undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["network"] = state ? state.network : undefined;
            inputs["notes"] = state ? state.notes : undefined;
            inputs["notificationEmails"] = state ? state.notificationEmails : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AppSecActivationsArgs | undefined;
            if ((!args || args.configId === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.notificationEmails === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'notificationEmails'");
            }
            if ((!args || args.version === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'version'");
            }
            inputs["activate"] = args ? args.activate : undefined;
            inputs["configId"] = args ? args.configId : undefined;
            inputs["network"] = args ? args.network : undefined;
            inputs["notes"] = args ? args.notes : undefined;
            inputs["notificationEmails"] = args ? args.notificationEmails : undefined;
            inputs["version"] = args ? args.version : undefined;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AppSecActivations.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecActivations resources.
 */
export interface AppSecActivationsState {
    readonly activate?: pulumi.Input<boolean>;
    readonly configId?: pulumi.Input<number>;
    readonly network?: pulumi.Input<string>;
    readonly notes?: pulumi.Input<string>;
    readonly notificationEmails?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the operation. The following values are may be returned:
     */
    readonly status?: pulumi.Input<string>;
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecActivations resource.
 */
export interface AppSecActivationsArgs {
    readonly activate?: pulumi.Input<boolean>;
    readonly configId: pulumi.Input<number>;
    readonly network?: pulumi.Input<string>;
    readonly notes?: pulumi.Input<string>;
    readonly notificationEmails: pulumi.Input<pulumi.Input<string>[]>;
    readonly version: pulumi.Input<number>;
}
