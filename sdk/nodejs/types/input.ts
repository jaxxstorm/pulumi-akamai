// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export interface CpsDvEnrollmentAdminContact {
    addressLineOne: pulumi.Input<string>;
    addressLineTwo?: pulumi.Input<string>;
    city: pulumi.Input<string>;
    countryCode: pulumi.Input<string>;
    email: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    phone: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    region: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}

export interface CpsDvEnrollmentCsr {
    city: pulumi.Input<string>;
    countryCode: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    organizationalUnit: pulumi.Input<string>;
    state: pulumi.Input<string>;
}

export interface CpsDvEnrollmentDnsChallenge {
    domain?: pulumi.Input<string>;
    fullPath?: pulumi.Input<string>;
    responseBody?: pulumi.Input<string>;
}

export interface CpsDvEnrollmentHttpChallenge {
    domain?: pulumi.Input<string>;
    fullPath?: pulumi.Input<string>;
    responseBody?: pulumi.Input<string>;
}

export interface CpsDvEnrollmentNetworkConfiguration {
    clientMutualAuthentication?: pulumi.Input<inputs.CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication>;
    cloneDnsNames?: pulumi.Input<boolean>;
    disallowedTlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    geography: pulumi.Input<string>;
    mustHaveCiphers?: pulumi.Input<string>;
    ocspStapling?: pulumi.Input<string>;
    preferredCiphers?: pulumi.Input<string>;
    quicEnabled?: pulumi.Input<boolean>;
}

export interface CpsDvEnrollmentNetworkConfigurationClientMutualAuthentication {
    ocspEnabled?: pulumi.Input<boolean>;
    sendCaListToClient?: pulumi.Input<boolean>;
    setId?: pulumi.Input<string>;
}

export interface CpsDvEnrollmentOrganization {
    addressLineOne: pulumi.Input<string>;
    addressLineTwo?: pulumi.Input<string>;
    city: pulumi.Input<string>;
    countryCode: pulumi.Input<string>;
    name: pulumi.Input<string>;
    phone: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface CpsDvEnrollmentTechContact {
    addressLineOne: pulumi.Input<string>;
    addressLineTwo?: pulumi.Input<string>;
    city: pulumi.Input<string>;
    countryCode: pulumi.Input<string>;
    email: pulumi.Input<string>;
    firstName: pulumi.Input<string>;
    lastName: pulumi.Input<string>;
    organization: pulumi.Input<string>;
    phone: pulumi.Input<string>;
    postalCode: pulumi.Input<string>;
    region: pulumi.Input<string>;
    title?: pulumi.Input<string>;
}

export interface DnsZoneTsigKey {
    algorithm: pulumi.Input<string>;
    name: pulumi.Input<string>;
    secret: pulumi.Input<string>;
}

export interface GetPropertyRulesTemplateTemplate {
    templateData: string;
    templateDir: string;
}

export interface GetPropertyRulesTemplateTemplateArgs {
    templateData: pulumi.Input<string>;
    templateDir: pulumi.Input<string>;
}

export interface GetPropertyRulesTemplateVariable {
    name: string;
    type?: string;
    value: string;
}

export interface GetPropertyRulesTemplateVariableArgs {
    name: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    value: pulumi.Input<string>;
}

export interface GtmAsmapAssignment {
    asNumbers: pulumi.Input<pulumi.Input<number>[]>;
    datacenterId: pulumi.Input<number>;
    nickname: pulumi.Input<string>;
}

export interface GtmAsmapDefaultDatacenter {
    datacenterId: pulumi.Input<number>;
    nickname?: pulumi.Input<string>;
}

export interface GtmCidrmapAssignment {
    blocks?: pulumi.Input<pulumi.Input<string>[]>;
    datacenterId: pulumi.Input<number>;
    nickname: pulumi.Input<string>;
}

export interface GtmCidrmapDefaultDatacenter {
    datacenterId: pulumi.Input<number>;
    nickname?: pulumi.Input<string>;
}

export interface GtmDatacenterDefaultLoadObject {
    loadObject?: pulumi.Input<string>;
    loadObjectPort?: pulumi.Input<number>;
    loadServers?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GtmGeomapAssignment {
    countries?: pulumi.Input<pulumi.Input<string>[]>;
    datacenterId: pulumi.Input<number>;
    nickname: pulumi.Input<string>;
}

export interface GtmGeomapDefaultDatacenter {
    datacenterId: pulumi.Input<number>;
    nickname?: pulumi.Input<string>;
}

export interface GtmPropertyLivenessTest {
    answersRequired?: pulumi.Input<boolean>;
    disableNonstandardPortWarning?: pulumi.Input<boolean>;
    disabled?: pulumi.Input<boolean>;
    errorPenalty?: pulumi.Input<number>;
    httpError3xx?: pulumi.Input<boolean>;
    httpError4xx?: pulumi.Input<boolean>;
    httpError5xx?: pulumi.Input<boolean>;
    httpHeaders?: pulumi.Input<pulumi.Input<inputs.GtmPropertyLivenessTestHttpHeader>[]>;
    name: pulumi.Input<string>;
    peerCertificateVerification?: pulumi.Input<boolean>;
    recursionRequested?: pulumi.Input<boolean>;
    requestString?: pulumi.Input<string>;
    resourceType?: pulumi.Input<string>;
    responseString?: pulumi.Input<string>;
    sslClientCertificate?: pulumi.Input<string>;
    sslClientPrivateKey?: pulumi.Input<string>;
    testInterval: pulumi.Input<number>;
    testObject: pulumi.Input<string>;
    testObjectPassword?: pulumi.Input<string>;
    testObjectPort?: pulumi.Input<number>;
    testObjectProtocol: pulumi.Input<string>;
    testObjectUsername?: pulumi.Input<string>;
    testTimeout: pulumi.Input<number>;
    timeoutPenalty?: pulumi.Input<number>;
}

export interface GtmPropertyLivenessTestHttpHeader {
    name?: pulumi.Input<string>;
    value?: pulumi.Input<string>;
}

export interface GtmPropertyStaticRrSet {
    rdatas?: pulumi.Input<pulumi.Input<string>[]>;
    ttl?: pulumi.Input<number>;
    type?: pulumi.Input<string>;
}

export interface GtmPropertyTrafficTarget {
    datacenterId?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
    handoutCname?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    servers?: pulumi.Input<pulumi.Input<string>[]>;
    weight?: pulumi.Input<number>;
}

export interface GtmResourceResourceInstance {
    datacenterId: pulumi.Input<number>;
    loadObject?: pulumi.Input<string>;
    loadObjectPort?: pulumi.Input<number>;
    loadServers?: pulumi.Input<pulumi.Input<string>[]>;
    useDefaultLoadObject?: pulumi.Input<boolean>;
}

export interface PropertyActivationRuleError {
    behaviorName?: pulumi.Input<string>;
    detail?: pulumi.Input<string>;
    errorLocation?: pulumi.Input<string>;
    instance?: pulumi.Input<string>;
    statusCode?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PropertyActivationRuleWarning {
    behaviorName?: pulumi.Input<string>;
    detail?: pulumi.Input<string>;
    errorLocation?: pulumi.Input<string>;
    instance?: pulumi.Input<string>;
    statusCode?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PropertyHostname {
    certProvisioningType: pulumi.Input<string>;
    certStatuses?: pulumi.Input<pulumi.Input<inputs.PropertyHostnameCertStatus>[]>;
    cnameFrom: pulumi.Input<string>;
    cnameTo: pulumi.Input<string>;
    cnameType?: pulumi.Input<string>;
    edgeHostnameId?: pulumi.Input<string>;
}

export interface PropertyHostnameCertStatus {
    hostname?: pulumi.Input<string>;
    productionStatus?: pulumi.Input<string>;
    stagingStatus?: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface PropertyOrigin {
    cacheKeyHostname?: pulumi.Input<string>;
    compress?: pulumi.Input<boolean>;
    enableTrueClientIp?: pulumi.Input<boolean>;
    forwardHostname?: pulumi.Input<string>;
    hostname?: pulumi.Input<string>;
    port?: pulumi.Input<number>;
}

export interface PropertyRuleError {
    behaviorName?: pulumi.Input<string>;
    detail?: pulumi.Input<string>;
    errorLocation?: pulumi.Input<string>;
    instance?: pulumi.Input<string>;
    statusCode?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PropertyRuleWarning {
    behaviorName?: pulumi.Input<string>;
    detail?: pulumi.Input<string>;
    errorLocation?: pulumi.Input<string>;
    instance?: pulumi.Input<string>;
    statusCode?: pulumi.Input<number>;
    title?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
}

export interface PropertyVariablesVariable {
    variables?: pulumi.Input<pulumi.Input<inputs.PropertyVariablesVariableVariable>[]>;
}

export interface PropertyVariablesVariableVariable {
    description?: pulumi.Input<string>;
    hidden: pulumi.Input<boolean>;
    name: pulumi.Input<string>;
    sensitive: pulumi.Input<boolean>;
    value?: pulumi.Input<string>;
}

export interface ProviderAppsec {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export interface ProviderConfig {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export interface ProviderDns {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export interface ProviderGtm {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export interface ProviderNetwork {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export interface ProviderProperty {
    accessToken?: pulumi.Input<string>;
    accountKey?: pulumi.Input<string>;
    clientSecret?: pulumi.Input<string>;
    clientToken?: pulumi.Input<string>;
    host?: pulumi.Input<string>;
    maxBody?: pulumi.Input<number>;
}

export namespace config {
}

export namespace edgedns {
    export interface DnsZoneTsigKey {
        algorithm: pulumi.Input<string>;
        name: pulumi.Input<string>;
        secret: pulumi.Input<string>;
    }
}

export namespace properties {
    export interface PropertyActivationRuleError {
        behaviorName?: pulumi.Input<string>;
        detail?: pulumi.Input<string>;
        errorLocation?: pulumi.Input<string>;
        instance?: pulumi.Input<string>;
        statusCode?: pulumi.Input<number>;
        title?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface PropertyActivationRuleWarning {
        behaviorName?: pulumi.Input<string>;
        detail?: pulumi.Input<string>;
        errorLocation?: pulumi.Input<string>;
        instance?: pulumi.Input<string>;
        statusCode?: pulumi.Input<number>;
        title?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface PropertyHostname {
        certProvisioningType: pulumi.Input<string>;
        certStatuses?: pulumi.Input<pulumi.Input<inputs.properties.PropertyHostnameCertStatus>[]>;
        cnameFrom: pulumi.Input<string>;
        cnameTo: pulumi.Input<string>;
        cnameType?: pulumi.Input<string>;
        edgeHostnameId?: pulumi.Input<string>;
    }

    export interface PropertyHostnameCertStatus {
        hostname?: pulumi.Input<string>;
        productionStatus?: pulumi.Input<string>;
        stagingStatus?: pulumi.Input<string>;
        target?: pulumi.Input<string>;
    }

    export interface PropertyOrigin {
        cacheKeyHostname?: pulumi.Input<string>;
        compress?: pulumi.Input<boolean>;
        enableTrueClientIp?: pulumi.Input<boolean>;
        forwardHostname?: pulumi.Input<string>;
        hostname?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
    }

    export interface PropertyRuleError {
        behaviorName?: pulumi.Input<string>;
        detail?: pulumi.Input<string>;
        errorLocation?: pulumi.Input<string>;
        instance?: pulumi.Input<string>;
        statusCode?: pulumi.Input<number>;
        title?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface PropertyRuleWarning {
        behaviorName?: pulumi.Input<string>;
        detail?: pulumi.Input<string>;
        errorLocation?: pulumi.Input<string>;
        instance?: pulumi.Input<string>;
        statusCode?: pulumi.Input<number>;
        title?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface PropertyVariablesVariable {
        variables?: pulumi.Input<pulumi.Input<inputs.properties.PropertyVariablesVariableVariable>[]>;
    }

    export interface PropertyVariablesVariableVariable {
        description?: pulumi.Input<string>;
        hidden: pulumi.Input<boolean>;
        name: pulumi.Input<string>;
        sensitive: pulumi.Input<boolean>;
        value?: pulumi.Input<string>;
    }
}

export namespace trafficmanagement {
    export interface GtmASmapAssignment {
        asNumbers: pulumi.Input<pulumi.Input<number>[]>;
        datacenterId: pulumi.Input<number>;
        nickname: pulumi.Input<string>;
    }

    export interface GtmASmapDefaultDatacenter {
        datacenterId: pulumi.Input<number>;
        nickname?: pulumi.Input<string>;
    }

    export interface GtmCidrmapAssignment {
        blocks?: pulumi.Input<pulumi.Input<string>[]>;
        datacenterId: pulumi.Input<number>;
        nickname: pulumi.Input<string>;
    }

    export interface GtmCidrmapDefaultDatacenter {
        datacenterId: pulumi.Input<number>;
        nickname?: pulumi.Input<string>;
    }

    export interface GtmDatacenterDefaultLoadObject {
        loadObject?: pulumi.Input<string>;
        loadObjectPort?: pulumi.Input<number>;
        loadServers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GtmGeomapAssignment {
        countries?: pulumi.Input<pulumi.Input<string>[]>;
        datacenterId: pulumi.Input<number>;
        nickname: pulumi.Input<string>;
    }

    export interface GtmGeomapDefaultDatacenter {
        datacenterId: pulumi.Input<number>;
        nickname?: pulumi.Input<string>;
    }

    export interface GtmPropertyLivenessTest {
        answersRequired?: pulumi.Input<boolean>;
        disableNonstandardPortWarning?: pulumi.Input<boolean>;
        disabled?: pulumi.Input<boolean>;
        errorPenalty?: pulumi.Input<number>;
        httpError3xx?: pulumi.Input<boolean>;
        httpError4xx?: pulumi.Input<boolean>;
        httpError5xx?: pulumi.Input<boolean>;
        httpHeaders?: pulumi.Input<pulumi.Input<inputs.trafficmanagement.GtmPropertyLivenessTestHttpHeader>[]>;
        name: pulumi.Input<string>;
        peerCertificateVerification?: pulumi.Input<boolean>;
        recursionRequested?: pulumi.Input<boolean>;
        requestString?: pulumi.Input<string>;
        resourceType?: pulumi.Input<string>;
        responseString?: pulumi.Input<string>;
        sslClientCertificate?: pulumi.Input<string>;
        sslClientPrivateKey?: pulumi.Input<string>;
        testInterval: pulumi.Input<number>;
        testObject: pulumi.Input<string>;
        testObjectPassword?: pulumi.Input<string>;
        testObjectPort?: pulumi.Input<number>;
        testObjectProtocol: pulumi.Input<string>;
        testObjectUsername?: pulumi.Input<string>;
        testTimeout: pulumi.Input<number>;
        timeoutPenalty?: pulumi.Input<number>;
    }

    export interface GtmPropertyLivenessTestHttpHeader {
        name?: pulumi.Input<string>;
        value?: pulumi.Input<string>;
    }

    export interface GtmPropertyStaticRrSet {
        rdatas?: pulumi.Input<pulumi.Input<string>[]>;
        ttl?: pulumi.Input<number>;
        type?: pulumi.Input<string>;
    }

    export interface GtmPropertyTrafficTarget {
        datacenterId?: pulumi.Input<number>;
        enabled?: pulumi.Input<boolean>;
        handoutCname?: pulumi.Input<string>;
        name?: pulumi.Input<string>;
        servers?: pulumi.Input<pulumi.Input<string>[]>;
        weight?: pulumi.Input<number>;
    }

    export interface GtmResourceResourceInstance {
        datacenterId: pulumi.Input<number>;
        loadObject?: pulumi.Input<string>;
        loadObjectPort?: pulumi.Input<number>;
        loadServers?: pulumi.Input<pulumi.Input<string>[]>;
        useDefaultLoadObject?: pulumi.Input<boolean>;
    }
}
