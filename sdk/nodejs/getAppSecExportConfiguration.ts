// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Use the `akamai.getAppSecExportConfiguration` data source to retrieve comprehensive details about a security configuration version, including rate and security policies, rules, hostnames, and other settings. You can retrieve the entire set of information in JSON format, or a subset of the information in tabular format.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Akamai Tools",
 * });
 * const export = Promise.all([configuration, configuration]).then(([configuration, configuration1]) => akamai.getAppSecExportConfiguration({
 *     configId: configuration.configId,
 *     version: configuration1.latestVersion,
 *     searches: [
 *         "securityPolicies",
 *         "selectedHosts",
 *     ],
 * }));
 * export const json = _export.then(_export => _export.json);
 * export const text = _export.then(_export => _export.outputText);
 * ```
 */
export function getAppSecExportConfiguration(args: GetAppSecExportConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecExportConfigurationResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("akamai:index/getAppSecExportConfiguration:getAppSecExportConfiguration", {
        "configId": args.configId,
        "searches": args.searches,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecExportConfiguration.
 */
export interface GetAppSecExportConfigurationArgs {
    /**
     * The ID of the security configuration to use.
     */
    configId: number;
    /**
     * A bracket-delimited list of quoted strings specifying the types of information to be retrieved and made available for display in the `outputText` format. The following types are available:
     * * customRules
     * * matchTargets
     * * ratePolicies
     * * reputationProfiles
     * * rulesets
     * * securityPolicies
     * * selectableHosts
     * * selectedHosts
     */
    searches?: string[];
    /**
     * The version number of the security configuration to use.
     */
    version: number;
}

/**
 * A collection of values returned by getAppSecExportConfiguration.
 */
export interface GetAppSecExportConfigurationResult {
    readonly configId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The complete set of information about the specified security configuration version, in JSON format. This includes the types available for the `search` parameter, plus several additional fields such as createDate and createdBy.
     */
    readonly json: string;
    /**
     * A tabular display showing the types of data specified in the `search` parameter. Included only if the `search` parameter specifies at least one type.
     */
    readonly outputText: string;
    readonly searches?: string[];
    readonly version: number;
}
