// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.AppSecAdvancedSettingsPragmaHeader` data source to retrieve pragma header settings for a configuration or a security policy. Additional information is available [here](https://developer.akamai.com/api/cloud_security/application_security/v1.html#getpragmaheaderconfiguration).
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: _var.security_configuration,
 * });
 * const pragmaHeader = configuration.then(configuration => akamai.getAppSecAdvancedSettingsPragmaHeader({
 *     configId: configuration.configId,
 * }));
 * export const advancedSettingsPragmaHeaderOutput = pragmaHeader.then(pragmaHeader => pragmaHeader.outputText);
 * export const advancedSettingsPragmaHeaderJson = pragmaHeader.then(pragmaHeader => pragmaHeader.json);
 * const policyPragmaHeader = configuration.then(configuration => akamai.getAppSecAdvancedSettingsPragmaHeader({
 *     configId: configuration.configId,
 *     securityPolicyId: _var.security_policy_id,
 * }));
 * export const advancedSettingsPolicyPragmaHeaderOutput = policyPragmaHeader.then(policyPragmaHeader => policyPragmaHeader.outputText);
 * export const advancedSettingsPolicyPragmaHeaderJson = policyPragmaHeader.then(policyPragmaHeader => policyPragmaHeader.json);
 * ```
 */
export function getAppSecAdvancedSettingsPragmaHeader(args: GetAppSecAdvancedSettingsPragmaHeaderArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecAdvancedSettingsPragmaHeaderResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("akamai:index/getAppSecAdvancedSettingsPragmaHeader:getAppSecAdvancedSettingsPragmaHeader", {
        "configId": args.configId,
        "securityPolicyId": args.securityPolicyId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.
 */
export interface GetAppSecAdvancedSettingsPragmaHeaderArgs {
    /**
     * The configuration ID.
     */
    configId: number;
    /**
     * The ID of the security policy to use.
     */
    securityPolicyId?: string;
}

/**
 * A collection of values returned by getAppSecAdvancedSettingsPragmaHeader.
 */
export interface GetAppSecAdvancedSettingsPragmaHeaderResult {
    readonly configId: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A JSON-formatted ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#putpragmaheaderpolicy)) list of information about the pragma header settings.
     */
    readonly json: string;
    /**
     * A tabular display showing the pragma header settings.
     */
    readonly outputText: string;
    readonly securityPolicyId?: string;
}

export function getAppSecAdvancedSettingsPragmaHeaderOutput(args: GetAppSecAdvancedSettingsPragmaHeaderOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppSecAdvancedSettingsPragmaHeaderResult> {
    return pulumi.output(args).apply(a => getAppSecAdvancedSettingsPragmaHeader(a, opts))
}

/**
 * A collection of arguments for invoking getAppSecAdvancedSettingsPragmaHeader.
 */
export interface GetAppSecAdvancedSettingsPragmaHeaderOutputArgs {
    /**
     * The configuration ID.
     */
    configId: pulumi.Input<number>;
    /**
     * The ID of the security policy to use.
     */
    securityPolicyId?: pulumi.Input<string>;
}
