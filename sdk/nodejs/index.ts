// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./appSecActivations";
export * from "./appSecConfigurationVersionClone";
export * from "./appSecCustomRule";
export * from "./appSecCustomRuleAction";
export * from "./appSecMatchTarget";
export * from "./appSecMatchTargetSequence";
export * from "./appSecSecurityPolicyClone";
export * from "./appSecSelectedHostnames";
export * from "./cpCode";
export * from "./dnsRecord";
export * from "./dnsZone";
export * from "./edgeHostName";
export * from "./getAppSecConfiguration";
export * from "./getAppSecConfigurationVersion";
export * from "./getAppSecCustomRuleActions";
export * from "./getAppSecCustomRules";
export * from "./getAppSecExportConfiguration";
export * from "./getAppSecMatchTargets";
export * from "./getAppSecSecurityPolicy";
export * from "./getAppSecSelectableHostnames";
export * from "./getAppSecSelectedHostnames";
export * from "./getAuthoritiesSet";
export * from "./getContract";
export * from "./getContracts";
export * from "./getCpCode";
export * from "./getDnsRecordSet";
export * from "./getGroup";
export * from "./getGroups";
export * from "./getGtmDefaultDatacenter";
export * from "./getProperties";
export * from "./getProperty";
export * from "./getPropertyProducts";
export * from "./getPropertyRuleFormats";
export * from "./getPropertyRules";
export * from "./getPropertyRulesTemplate";
export * from "./gtmAsmap";
export * from "./gtmCidrmap";
export * from "./gtmDatacenter";
export * from "./gtmDomain";
export * from "./gtmGeomap";
export * from "./gtmProperty";
export * from "./gtmResource";
export * from "./property";
export * from "./propertyActivation";
export * from "./propertyVariables";
export * from "./provider";

// Export sub-modules:
import * as config from "./config";
import * as edgedns from "./edgedns";
import * as properties from "./properties";
import * as trafficmanagement from "./trafficmanagement";
import * as types from "./types";

export {
    config,
    edgedns,
    properties,
    trafficmanagement,
    types,
};

// Import resources to register:
import { AppSecActivations } from "./appSecActivations";
import { AppSecConfigurationVersionClone } from "./appSecConfigurationVersionClone";
import { AppSecCustomRule } from "./appSecCustomRule";
import { AppSecCustomRuleAction } from "./appSecCustomRuleAction";
import { AppSecMatchTarget } from "./appSecMatchTarget";
import { AppSecMatchTargetSequence } from "./appSecMatchTargetSequence";
import { AppSecSecurityPolicyClone } from "./appSecSecurityPolicyClone";
import { AppSecSelectedHostnames } from "./appSecSelectedHostnames";
import { CpCode } from "./cpCode";
import { DnsRecord } from "./dnsRecord";
import { DnsZone } from "./dnsZone";
import { EdgeHostName } from "./edgeHostName";
import { GtmAsmap } from "./gtmAsmap";
import { GtmCidrmap } from "./gtmCidrmap";
import { GtmDatacenter } from "./gtmDatacenter";
import { GtmDomain } from "./gtmDomain";
import { GtmGeomap } from "./gtmGeomap";
import { GtmProperty } from "./gtmProperty";
import { GtmResource } from "./gtmResource";
import { Property } from "./property";
import { PropertyActivation } from "./propertyActivation";
import { PropertyVariables } from "./propertyVariables";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "akamai:index/appSecActivations:AppSecActivations":
                return new AppSecActivations(name, <any>undefined, { urn })
            case "akamai:index/appSecConfigurationVersionClone:AppSecConfigurationVersionClone":
                return new AppSecConfigurationVersionClone(name, <any>undefined, { urn })
            case "akamai:index/appSecCustomRule:AppSecCustomRule":
                return new AppSecCustomRule(name, <any>undefined, { urn })
            case "akamai:index/appSecCustomRuleAction:AppSecCustomRuleAction":
                return new AppSecCustomRuleAction(name, <any>undefined, { urn })
            case "akamai:index/appSecMatchTarget:AppSecMatchTarget":
                return new AppSecMatchTarget(name, <any>undefined, { urn })
            case "akamai:index/appSecMatchTargetSequence:AppSecMatchTargetSequence":
                return new AppSecMatchTargetSequence(name, <any>undefined, { urn })
            case "akamai:index/appSecSecurityPolicyClone:AppSecSecurityPolicyClone":
                return new AppSecSecurityPolicyClone(name, <any>undefined, { urn })
            case "akamai:index/appSecSelectedHostnames:AppSecSelectedHostnames":
                return new AppSecSelectedHostnames(name, <any>undefined, { urn })
            case "akamai:index/cpCode:CpCode":
                return new CpCode(name, <any>undefined, { urn })
            case "akamai:index/dnsRecord:DnsRecord":
                return new DnsRecord(name, <any>undefined, { urn })
            case "akamai:index/dnsZone:DnsZone":
                return new DnsZone(name, <any>undefined, { urn })
            case "akamai:index/edgeHostName:EdgeHostName":
                return new EdgeHostName(name, <any>undefined, { urn })
            case "akamai:index/gtmAsmap:GtmAsmap":
                return new GtmAsmap(name, <any>undefined, { urn })
            case "akamai:index/gtmCidrmap:GtmCidrmap":
                return new GtmCidrmap(name, <any>undefined, { urn })
            case "akamai:index/gtmDatacenter:GtmDatacenter":
                return new GtmDatacenter(name, <any>undefined, { urn })
            case "akamai:index/gtmDomain:GtmDomain":
                return new GtmDomain(name, <any>undefined, { urn })
            case "akamai:index/gtmGeomap:GtmGeomap":
                return new GtmGeomap(name, <any>undefined, { urn })
            case "akamai:index/gtmProperty:GtmProperty":
                return new GtmProperty(name, <any>undefined, { urn })
            case "akamai:index/gtmResource:GtmResource":
                return new GtmResource(name, <any>undefined, { urn })
            case "akamai:index/property:Property":
                return new Property(name, <any>undefined, { urn })
            case "akamai:index/propertyActivation:PropertyActivation":
                return new PropertyActivation(name, <any>undefined, { urn })
            case "akamai:index/propertyVariables:PropertyVariables":
                return new PropertyVariables(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("akamai", "index/appSecActivations", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecConfigurationVersionClone", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecCustomRule", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecCustomRuleAction", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecMatchTarget", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecMatchTargetSequence", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecSecurityPolicyClone", _module)
pulumi.runtime.registerResourceModule("akamai", "index/appSecSelectedHostnames", _module)
pulumi.runtime.registerResourceModule("akamai", "index/cpCode", _module)
pulumi.runtime.registerResourceModule("akamai", "index/dnsRecord", _module)
pulumi.runtime.registerResourceModule("akamai", "index/dnsZone", _module)
pulumi.runtime.registerResourceModule("akamai", "index/edgeHostName", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmAsmap", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmCidrmap", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmDatacenter", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmDomain", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmGeomap", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmProperty", _module)
pulumi.runtime.registerResourceModule("akamai", "index/gtmResource", _module)
pulumi.runtime.registerResourceModule("akamai", "index/property", _module)
pulumi.runtime.registerResourceModule("akamai", "index/propertyActivation", _module)
pulumi.runtime.registerResourceModule("akamai", "index/propertyVariables", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("akamai", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:akamai") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
