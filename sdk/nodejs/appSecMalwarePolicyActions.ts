// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * **Scopes**: Malware protection
 *
 * Creates, modifies, or deletes the actions associated with one or more policies within a given security policy.
 * By default, malware policies take no action when triggered.
 * Note that you must set separate actions for requests that are scanned according to the specified malware policy and those that are unscanned.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 * import * as fs from "fs";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: "Documentation",
 * });
 * const appsecMalwarePolicy = new akamai.AppSecMalwarePolicy("appsecMalwarePolicy", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     malwarePolicy: fs.readFileSync(`${path.module}/malware_policy.json`),
 * });
 * const appsecMalwarePolicyActions = new akamai.AppSecMalwarePolicyActions("appsecMalwarePolicyActions", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     securityPolicyId: "gms1_134637",
 *     malwarePolicyActions: fs.readFileSync(`${path.module}/malware_policy_actions.json`),
 * });
 * ```
 */
export class AppSecMalwarePolicyActions extends pulumi.CustomResource {
    /**
     * Get an existing AppSecMalwarePolicyActions resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecMalwarePolicyActionsState, opts?: pulumi.CustomResourceOptions): AppSecMalwarePolicyActions {
        return new AppSecMalwarePolicyActions(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecMalwarePolicyActions:AppSecMalwarePolicyActions';

    /**
     * Returns true if the given object is an instance of AppSecMalwarePolicyActions.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecMalwarePolicyActions {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecMalwarePolicyActions.__pulumiType;
    }

    /**
     * . Unique identifier of the security configuration associated with the malware policy action being modified.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
     */
    public readonly malwarePolicyActions!: pulumi.Output<string>;
    /**
     * . Unique identifier of the security policy associated with the malware policy whose action is being modified.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;

    /**
     * Create a AppSecMalwarePolicyActions resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecMalwarePolicyActionsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecMalwarePolicyActionsArgs | AppSecMalwarePolicyActionsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecMalwarePolicyActionsState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["malwarePolicyActions"] = state ? state.malwarePolicyActions : undefined;
            resourceInputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
        } else {
            const args = argsOrState as AppSecMalwarePolicyActionsArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.malwarePolicyActions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'malwarePolicyActions'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["malwarePolicyActions"] = args ? args.malwarePolicyActions : undefined;
            resourceInputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppSecMalwarePolicyActions.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecMalwarePolicyActions resources.
 */
export interface AppSecMalwarePolicyActionsState {
    /**
     * . Unique identifier of the security configuration associated with the malware policy action being modified.
     */
    configId?: pulumi.Input<number>;
    /**
     * . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
     */
    malwarePolicyActions?: pulumi.Input<string>;
    /**
     * . Unique identifier of the security policy associated with the malware policy whose action is being modified.
     */
    securityPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppSecMalwarePolicyActions resource.
 */
export interface AppSecMalwarePolicyActionsArgs {
    /**
     * . Unique identifier of the security configuration associated with the malware policy action being modified.
     */
    configId: pulumi.Input<number>;
    /**
     * . Path to a JSON file containing the malware policy IDs and their respective actions. A sample JSON file can be found in the [Modify malware policy actions for a security policy](https://techdocs.akamai.com/application-security/reference/put-policy) section of the Application Security API documentation.
     */
    malwarePolicyActions: pulumi.Input<string>;
    /**
     * . Unique identifier of the security policy associated with the malware policy whose action is being modified.
     */
    securityPolicyId: pulumi.Input<string>;
}
