// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `resourceAkamaiAppsecConfigurationClone` resource allows you to create a new version of a given security configuration.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: _var.security_configuration,
 * });
 * const contractsGroups = akamai.getAppSecContractsGroups({
 *     contractid: _var.contractid,
 *     groupid: _var.groupid,
 * });
 * const selectableHostnames = Promise.all([configuration, configuration]).then(([configuration, configuration1]) => akamai.getAppSecSelectableHostnames({
 *     configId: configuration.configId,
 *     version: configuration1.latestVersion,
 * }));
 * const cloneConfig = new akamai.AppSecConfigurationClone("cloneConfig", {
 *     createFromConfigId: configuration.then(configuration => configuration.configId),
 *     createFromVersion: configuration.then(configuration => configuration.latestVersion),
 *     description: _var.description,
 *     contractId: contractsGroups.then(contractsGroups => contractsGroups.defaultContractid),
 *     groupId: contractsGroups.then(contractsGroups => contractsGroups.defaultGroupid),
 *     hostNames: selectableHostnames.then(selectableHostnames => selectableHostnames.hostnames),
 * });
 * export const cloneConfigId = cloneConfig.configId;
 * export const cloneConfigVersion = cloneConfig.version;
 * ```
 */
export class AppSecConfigurationClone extends pulumi.CustomResource {
    /**
     * Get an existing AppSecConfigurationClone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecConfigurationCloneState, opts?: pulumi.CustomResourceOptions): AppSecConfigurationClone {
        return new AppSecConfigurationClone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecConfigurationClone:AppSecConfigurationClone';

    /**
     * Returns true if the given object is an instance of AppSecConfigurationClone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecConfigurationClone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecConfigurationClone.__pulumiType;
    }

    /**
     * The ID of the newly created configuration.
     */
    public /*out*/ readonly configId!: pulumi.Output<number>;
    /**
     * The contract id to use.
     */
    public readonly contractId!: pulumi.Output<string>;
    /**
     * The ID of the configuration to be cloned.
     */
    public readonly createFromConfigId!: pulumi.Output<number>;
    /**
     * The version number of the configuration to be cloned.
     */
    public readonly createFromVersion!: pulumi.Output<number>;
    /**
     * A description of the new configuration.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The group id to use.
     */
    public readonly groupId!: pulumi.Output<number>;
    /**
     * The hostnames to be protected under the new configuration.
     */
    public readonly hostNames!: pulumi.Output<string[]>;
    /**
     * The name to be applied to the new configuration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The version number of the newly created configuration.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a AppSecConfigurationClone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecConfigurationCloneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecConfigurationCloneArgs | AppSecConfigurationCloneState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecConfigurationCloneState | undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["contractId"] = state ? state.contractId : undefined;
            inputs["createFromConfigId"] = state ? state.createFromConfigId : undefined;
            inputs["createFromVersion"] = state ? state.createFromVersion : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["groupId"] = state ? state.groupId : undefined;
            inputs["hostNames"] = state ? state.hostNames : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AppSecConfigurationCloneArgs | undefined;
            if ((!args || args.contractId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contractId'");
            }
            if ((!args || args.createFromConfigId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'createFromConfigId'");
            }
            if ((!args || args.createFromVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'createFromVersion'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.hostNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostNames'");
            }
            inputs["contractId"] = args ? args.contractId : undefined;
            inputs["createFromConfigId"] = args ? args.createFromConfigId : undefined;
            inputs["createFromVersion"] = args ? args.createFromVersion : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["groupId"] = args ? args.groupId : undefined;
            inputs["hostNames"] = args ? args.hostNames : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["configId"] = undefined /*out*/;
            inputs["version"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AppSecConfigurationClone.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecConfigurationClone resources.
 */
export interface AppSecConfigurationCloneState {
    /**
     * The ID of the newly created configuration.
     */
    readonly configId?: pulumi.Input<number>;
    /**
     * The contract id to use.
     */
    readonly contractId?: pulumi.Input<string>;
    /**
     * The ID of the configuration to be cloned.
     */
    readonly createFromConfigId?: pulumi.Input<number>;
    /**
     * The version number of the configuration to be cloned.
     */
    readonly createFromVersion?: pulumi.Input<number>;
    /**
     * A description of the new configuration.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The group id to use.
     */
    readonly groupId?: pulumi.Input<number>;
    /**
     * The hostnames to be protected under the new configuration.
     */
    readonly hostNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name to be applied to the new configuration.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The version number of the newly created configuration.
     */
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecConfigurationClone resource.
 */
export interface AppSecConfigurationCloneArgs {
    /**
     * The contract id to use.
     */
    readonly contractId: pulumi.Input<string>;
    /**
     * The ID of the configuration to be cloned.
     */
    readonly createFromConfigId: pulumi.Input<number>;
    /**
     * The version number of the configuration to be cloned.
     */
    readonly createFromVersion: pulumi.Input<number>;
    /**
     * A description of the new configuration.
     */
    readonly description: pulumi.Input<string>;
    /**
     * The group id to use.
     */
    readonly groupId: pulumi.Input<number>;
    /**
     * The hostnames to be protected under the new configuration.
     */
    readonly hostNames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name to be applied to the new configuration.
     */
    readonly name?: pulumi.Input<string>;
}
