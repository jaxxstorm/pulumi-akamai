// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.AppSecReputationProfile` resource to create or modify a reputation profile for a specific security configuration.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 * import * from "fs";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: _var.security_configuration,
 * });
 * // USE CASE: user wants to create a reputation profile for a given configuration and version, using a JSON definition
 * const reputationProfile = new akamai.AppSecReputationProfile("reputationProfile", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     reputationProfile: fs.readFileSync(`${path.module}/reputation_profile.json`),
 * });
 * export const reputationProfileId = akamai_appsec_reputation_profile.reputation_profile_id;
 * ```
 */
export class AppSecReputationProfile extends pulumi.CustomResource {
    /**
     * Get an existing AppSecReputationProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecReputationProfileState, opts?: pulumi.CustomResourceOptions): AppSecReputationProfile {
        return new AppSecReputationProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecReputationProfile:AppSecReputationProfile';

    /**
     * Returns true if the given object is an instance of AppSecReputationProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecReputationProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecReputationProfile.__pulumiType;
    }

    /**
     * The ID of the security configuration to use.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))
     */
    public readonly reputationProfile!: pulumi.Output<string>;
    /**
     * The ID of the newly created or modified reputation profile.
     */
    public /*out*/ readonly reputationProfileId!: pulumi.Output<number>;

    /**
     * Create a AppSecReputationProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecReputationProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecReputationProfileArgs | AppSecReputationProfileState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecReputationProfileState | undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["reputationProfile"] = state ? state.reputationProfile : undefined;
            inputs["reputationProfileId"] = state ? state.reputationProfileId : undefined;
        } else {
            const args = argsOrState as AppSecReputationProfileArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.reputationProfile === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reputationProfile'");
            }
            inputs["configId"] = args ? args.configId : undefined;
            inputs["reputationProfile"] = args ? args.reputationProfile : undefined;
            inputs["reputationProfileId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AppSecReputationProfile.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecReputationProfile resources.
 */
export interface AppSecReputationProfileState {
    /**
     * The ID of the security configuration to use.
     */
    configId?: pulumi.Input<number>;
    /**
     * The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))
     */
    reputationProfile?: pulumi.Input<string>;
    /**
     * The ID of the newly created or modified reputation profile.
     */
    reputationProfileId?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecReputationProfile resource.
 */
export interface AppSecReputationProfileArgs {
    /**
     * The ID of the security configuration to use.
     */
    configId: pulumi.Input<number>;
    /**
     * The name of a file containing a JSON-formatted definition of the reputation profile. ([format](https://developer.akamai.com/api/cloud_security/application_security/v1.html#postreputationprofiles))
     */
    reputationProfile: pulumi.Input<string>;
}
