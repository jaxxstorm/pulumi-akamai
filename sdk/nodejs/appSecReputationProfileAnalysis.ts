// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `resourceAkamaiAppsecReputationProfileAnalysis` resource allows you to toggle the reputation analysis settings for a given security policy. The `forwardToHttpHeader` parameter indicates whether to add client reputation details to requests forwarded to origin in an HTTP header. The `forwardSharedIpToHttpHeaderSiem` parameter indicates whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: _var.security_configuration,
 * });
 * // USE CASE: user wants to set reputation analysis settings
 * const reputationAnalysis = new akamai.AppSecReputationProfileAnalysis("reputationAnalysis", {
 *     configId: configuration.then(configuration => configuration.configId),
 *     version: configuration.then(configuration => configuration.latestVersion),
 *     securityPolicyId: _var.security_policy_id,
 *     forwardToHttpHeader: true,
 *     forwardSharedIpToHttpHeaderSiem: true,
 * });
 * ```
 */
export class AppSecReputationProfileAnalysis extends pulumi.CustomResource {
    /**
     * Get an existing AppSecReputationProfileAnalysis resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppSecReputationProfileAnalysisState, opts?: pulumi.CustomResourceOptions): AppSecReputationProfileAnalysis {
        return new AppSecReputationProfileAnalysis(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:index/appSecReputationProfileAnalysis:AppSecReputationProfileAnalysis';

    /**
     * Returns true if the given object is an instance of AppSecReputationProfileAnalysis.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppSecReputationProfileAnalysis {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppSecReputationProfileAnalysis.__pulumiType;
    }

    /**
     * The ID of the security configuration to use.
     */
    public readonly configId!: pulumi.Output<number>;
    /**
     * Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.
     */
    public readonly forwardSharedIpToHttpHeaderSiem!: pulumi.Output<boolean>;
    /**
     * Whether to add client reputation details to requests forwarded to origin in an HTTP header.
     */
    public readonly forwardToHttpHeader!: pulumi.Output<boolean>;
    /**
     * The ID of the securityPolicyId to which the settings should be applied.
     */
    public readonly securityPolicyId!: pulumi.Output<string>;
    /**
     * The version number of the security configuration to use.
     */
    public readonly version!: pulumi.Output<number>;

    /**
     * Create a AppSecReputationProfileAnalysis resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppSecReputationProfileAnalysisArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppSecReputationProfileAnalysisArgs | AppSecReputationProfileAnalysisState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppSecReputationProfileAnalysisState | undefined;
            inputs["configId"] = state ? state.configId : undefined;
            inputs["forwardSharedIpToHttpHeaderSiem"] = state ? state.forwardSharedIpToHttpHeaderSiem : undefined;
            inputs["forwardToHttpHeader"] = state ? state.forwardToHttpHeader : undefined;
            inputs["securityPolicyId"] = state ? state.securityPolicyId : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as AppSecReputationProfileAnalysisArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.forwardSharedIpToHttpHeaderSiem === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardSharedIpToHttpHeaderSiem'");
            }
            if ((!args || args.forwardToHttpHeader === undefined) && !opts.urn) {
                throw new Error("Missing required property 'forwardToHttpHeader'");
            }
            if ((!args || args.securityPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityPolicyId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            inputs["configId"] = args ? args.configId : undefined;
            inputs["forwardSharedIpToHttpHeaderSiem"] = args ? args.forwardSharedIpToHttpHeaderSiem : undefined;
            inputs["forwardToHttpHeader"] = args ? args.forwardToHttpHeader : undefined;
            inputs["securityPolicyId"] = args ? args.securityPolicyId : undefined;
            inputs["version"] = args ? args.version : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AppSecReputationProfileAnalysis.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppSecReputationProfileAnalysis resources.
 */
export interface AppSecReputationProfileAnalysisState {
    /**
     * The ID of the security configuration to use.
     */
    readonly configId?: pulumi.Input<number>;
    /**
     * Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.
     */
    readonly forwardSharedIpToHttpHeaderSiem?: pulumi.Input<boolean>;
    /**
     * Whether to add client reputation details to requests forwarded to origin in an HTTP header.
     */
    readonly forwardToHttpHeader?: pulumi.Input<boolean>;
    /**
     * The ID of the securityPolicyId to which the settings should be applied.
     */
    readonly securityPolicyId?: pulumi.Input<string>;
    /**
     * The version number of the security configuration to use.
     */
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AppSecReputationProfileAnalysis resource.
 */
export interface AppSecReputationProfileAnalysisArgs {
    /**
     * The ID of the security configuration to use.
     */
    readonly configId: pulumi.Input<number>;
    /**
     * Whether to add value indicating that shared IPs are included in HTTP header and SIEM integration.
     */
    readonly forwardSharedIpToHttpHeaderSiem: pulumi.Input<boolean>;
    /**
     * Whether to add client reputation details to requests forwarded to origin in an HTTP header.
     */
    readonly forwardToHttpHeader: pulumi.Input<boolean>;
    /**
     * The ID of the securityPolicyId to which the settings should be applied.
     */
    readonly securityPolicyId: pulumi.Input<string>;
    /**
     * The version number of the security configuration to use.
     */
    readonly version: pulumi.Input<number>;
}
