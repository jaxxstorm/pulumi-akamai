// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use the `akamai.AppSecEvalHostnames` data source to retrieve the evaluation hostnames for a configuration. Evaluation mode for hostnames is only available for Web Application Protector. Run hostnames in evaluation mode to see how your configuration settings protect traffic for that hostname before adding a hostname directly to a live configuration. An evaluation period lasts four weeks unless you stop the evaluation. Once you begin, the hostnames you evaluate start responding to traffic as if they are your current hostnames. However, instead of taking an action the evaluation hostnames log which action they would have taken if they were your actively-protected hostnames and not a test.
 *
 * ## Example Usage
 *
 * Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const configuration = akamai.getAppSecConfiguration({
 *     name: _var.security_configuration,
 * });
 * const evalHostnamesAppSecEvalHostnames = configuration.then(configuration => akamai.getAppSecEvalHostnames({
 *     configId: configuration.configId,
 * }));
 * export const evalHostnames = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames => evalHostnamesAppSecEvalHostnames.hostnames);
 * export const evalHostnamesOutput = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames => evalHostnamesAppSecEvalHostnames.outputText);
 * export const evalHostnamesJson = evalHostnamesAppSecEvalHostnames.then(evalHostnamesAppSecEvalHostnames => evalHostnamesAppSecEvalHostnames.json);
 * ```
 */
export function getAppSecEvalHostnames(args: GetAppSecEvalHostnamesArgs, opts?: pulumi.InvokeOptions): Promise<GetAppSecEvalHostnamesResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("akamai:index/getAppSecEvalHostnames:getAppSecEvalHostnames", {
        "configId": args.configId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppSecEvalHostnames.
 */
export interface GetAppSecEvalHostnamesArgs {
    /**
     * The ID of the security configuration to use.
     */
    configId: number;
}

/**
 * A collection of values returned by getAppSecEvalHostnames.
 */
export interface GetAppSecEvalHostnamesResult {
    readonly configId: number;
    /**
     * A list of the evaluation hostnames.
     */
    readonly hostnames: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A JSON-formatted list of the evaluation hostnames.
     */
    readonly json: string;
    /**
     * A tabular display showing the evaluation hostnames.
     */
    readonly outputText: string;
}

export function getAppSecEvalHostnamesOutput(args: GetAppSecEvalHostnamesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppSecEvalHostnamesResult> {
    return pulumi.output(args).apply(a => getAppSecEvalHostnames(a, opts))
}

/**
 * A collection of arguments for invoking getAppSecEvalHostnames.
 */
export interface GetAppSecEvalHostnamesOutputArgs {
    /**
     * The ID of the security configuration to use.
     */
    configId: pulumi.Input<number>;
}
