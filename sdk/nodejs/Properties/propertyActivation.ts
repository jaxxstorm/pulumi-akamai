// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The `akamai.Properties.PropertyActivation` provides the resource for activating a property in the appropriate environment. Once you are satisfied with any version of a property, an activation deploys it, either to the Akamai staging or production network. You activate a specific version, but the same version can be activated separately more than once.
 * 
 * ## Example Usage
 * 
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 * 
 * const example = new akamai.Properties.PropertyActivation("example", {
 *     activate: (var_akamai_property_activate === "true"),
 *     contacts: ["user@example.org"],
 *     network: "STAGING",
 *     property: akamai_property_example.id,
 * });
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-akamai/blob/master/website/docs/r/property_activation.html.markdown.
 */
export class PropertyActivation extends pulumi.CustomResource {
    /**
     * Get an existing PropertyActivation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PropertyActivationState, opts?: pulumi.CustomResourceOptions): PropertyActivation {
        return new PropertyActivation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:Properties/propertyActivation:PropertyActivation';

    /**
     * Returns true if the given object is an instance of PropertyActivation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PropertyActivation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PropertyActivation.__pulumiType;
    }

    /**
     * — (Optional, boolean) Whether to activate the property on the network. (Default: `true`).
     */
    public readonly activate!: pulumi.Output<boolean | undefined>;
    /**
     * — (Required) One or more email addresses to inform about activation changes.
     */
    public readonly contacts!: pulumi.Output<string[]>;
    /**
     * — (Optional) Akamai network to activate on. Allowed values `staging` or `production` (Default: `staging`).
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * — (Required) The property ID.
     */
    public readonly property!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * — (Optional) The version to activate. When unset it will activate the latest version of the property.
     */
    public readonly version!: pulumi.Output<number | undefined>;

    /**
     * Create a PropertyActivation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PropertyActivationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PropertyActivationArgs | PropertyActivationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PropertyActivationState | undefined;
            inputs["activate"] = state ? state.activate : undefined;
            inputs["contacts"] = state ? state.contacts : undefined;
            inputs["network"] = state ? state.network : undefined;
            inputs["property"] = state ? state.property : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as PropertyActivationArgs | undefined;
            if (!args || args.contacts === undefined) {
                throw new Error("Missing required property 'contacts'");
            }
            if (!args || args.property === undefined) {
                throw new Error("Missing required property 'property'");
            }
            inputs["activate"] = args ? args.activate : undefined;
            inputs["contacts"] = args ? args.contacts : undefined;
            inputs["network"] = args ? args.network : undefined;
            inputs["property"] = args ? args.property : undefined;
            inputs["version"] = args ? args.version : undefined;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PropertyActivation.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PropertyActivation resources.
 */
export interface PropertyActivationState {
    /**
     * — (Optional, boolean) Whether to activate the property on the network. (Default: `true`).
     */
    readonly activate?: pulumi.Input<boolean>;
    /**
     * — (Required) One or more email addresses to inform about activation changes.
     */
    readonly contacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * — (Optional) Akamai network to activate on. Allowed values `staging` or `production` (Default: `staging`).
     */
    readonly network?: pulumi.Input<string>;
    /**
     * — (Required) The property ID.
     */
    readonly property?: pulumi.Input<string>;
    readonly status?: pulumi.Input<string>;
    /**
     * — (Optional) The version to activate. When unset it will activate the latest version of the property.
     */
    readonly version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PropertyActivation resource.
 */
export interface PropertyActivationArgs {
    /**
     * — (Optional, boolean) Whether to activate the property on the network. (Default: `true`).
     */
    readonly activate?: pulumi.Input<boolean>;
    /**
     * — (Required) One or more email addresses to inform about activation changes.
     */
    readonly contacts: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * — (Optional) Akamai network to activate on. Allowed values `staging` or `production` (Default: `staging`).
     */
    readonly network?: pulumi.Input<string>;
    /**
     * — (Required) The property ID.
     */
    readonly property: pulumi.Input<string>;
    /**
     * — (Optional) The version to activate. When unset it will activate the latest version of the property.
     */
    readonly version?: pulumi.Input<number>;
}
