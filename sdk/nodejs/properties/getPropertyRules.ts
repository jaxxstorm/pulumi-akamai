// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * The `akamai.Properties.PropertyRules` data source allows you to configure a nested block of property rules, criteria, and behaviors. A propertyâ€™s main functionality is encapsulated in its set of rules and rules are composed of the matches and the behavior that applies under those matches.
 *
 * ## Example Usage
 * ### Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const examplePropertyRules = pulumi.output(akamai.Properties.getPropertyRules({
 *     rules: [{
 *         behaviors: [{
 *             name: "downstreamCache", // Downstream Cache behavior
 *             options: [{
 *                 key: "behavior", // behavior option
 *                 value: "TUNNEL_ORIGIN",
 *             }],
 *         }],
 *         rules: [{
 *             name: "Performance", // "Performance" child rule
 *             rules: [{
 *                 behaviors: [{
 *                     name: "adaptiveImageCompression", // Adaptive Image Compression behavior
 *                     options: [
 *                         // Options
 *                         {
 *                             key: "tier1MobileCompressionMethod",
 *                             value: "COMPRESS",
 *                         },
 *                         {
 *                             key: "tier1MobileCompressionValue",
 *                             value: "80",
 *                         },
 *                         {
 *                             key: "tier2MobileCompressionMethod",
 *                             value: "COMPRESS",
 *                         },
 *                     ],
 *                 }],
 *                 name: "JPEG Images", // "JPEG Images" child rule 
 *             }],
 *         }],
 *     }],
 * }, { async: true }));
 * const exampleProperty = new akamai.Properties.Property("example", {
 *     rules: examplePropertyRules.json,
 * });
 * ```
 */
export function getPropertyRules(args?: GetPropertyRulesArgs, opts?: pulumi.InvokeOptions): Promise<GetPropertyRulesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("akamai:Properties/getPropertyRules:getPropertyRules", {
        "rules": args.rules,
        "variables": args.variables,
    }, opts);
}

/**
 * A collection of arguments for invoking getPropertyRules.
 */
export interface GetPropertyRulesArgs {
    readonly rules?: inputs.Properties.GetPropertyRulesRule[];
    readonly variables?: string;
}

/**
 * A collection of values returned by getPropertyRules.
 */
export interface GetPropertyRulesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
    readonly rules?: outputs.Properties.GetPropertyRulesRule[];
    readonly variables?: string;
}
