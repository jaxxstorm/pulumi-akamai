// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The `akamai.Properties.EdgeHostName` provides the resource for configuring a secure edge hostname that determines how requests for your site, app, or content are mapped to Akamai edge servers.
 *
 * An edge hostname is the CNAME target you use when directing your end user traffic to Akamai. In a typical DNS CNAME, your www.customer.com hostname corresponds to an edge hostname of www.customer.com.edgesuite.net.
 *
 * ## Example Usage
 * ### Basic usage:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as akamai from "@pulumi/akamai";
 *
 * const terraform_demo = new akamai.Properties.EdgeHostName("terraform-demo", {
 *     contract: "ctr_####",
 *     edgeHostname: "www.example.org.edgesuite.net",
 *     group: "grp_####",
 *     product: "prd_####",
 * });
 * ```
 */
export class EdgeHostName extends pulumi.CustomResource {
    /**
     * Get an existing EdgeHostName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EdgeHostNameState, opts?: pulumi.CustomResourceOptions): EdgeHostName {
        return new EdgeHostName(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'akamai:Properties/edgeHostName:EdgeHostName';

    /**
     * Returns true if the given object is an instance of EdgeHostName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EdgeHostName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EdgeHostName.__pulumiType;
    }

    /**
     * — (Optional) The certificate enrollment ID.
     */
    public readonly certificate!: pulumi.Output<number | undefined>;
    /**
     * — (Required) The contract ID.
     */
    public readonly contract!: pulumi.Output<string>;
    /**
     * — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
     */
    public readonly edgeHostname!: pulumi.Output<string>;
    /**
     * — (Required) The group ID.
     */
    public readonly group!: pulumi.Output<string>;
    public /*out*/ readonly ipBehavior!: pulumi.Output<string>;
    /**
     * — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
     */
    public readonly ipv4!: pulumi.Output<boolean | undefined>;
    /**
     * —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
     */
    public readonly ipv6!: pulumi.Output<boolean | undefined>;
    /**
     * — (Required) The product ID.
     */
    public readonly product!: pulumi.Output<string>;

    /**
     * Create a EdgeHostName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EdgeHostNameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EdgeHostNameArgs | EdgeHostNameState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as EdgeHostNameState | undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["contract"] = state ? state.contract : undefined;
            inputs["edgeHostname"] = state ? state.edgeHostname : undefined;
            inputs["group"] = state ? state.group : undefined;
            inputs["ipBehavior"] = state ? state.ipBehavior : undefined;
            inputs["ipv4"] = state ? state.ipv4 : undefined;
            inputs["ipv6"] = state ? state.ipv6 : undefined;
            inputs["product"] = state ? state.product : undefined;
        } else {
            const args = argsOrState as EdgeHostNameArgs | undefined;
            if (!args || args.contract === undefined) {
                throw new Error("Missing required property 'contract'");
            }
            if (!args || args.edgeHostname === undefined) {
                throw new Error("Missing required property 'edgeHostname'");
            }
            if (!args || args.group === undefined) {
                throw new Error("Missing required property 'group'");
            }
            if (!args || args.product === undefined) {
                throw new Error("Missing required property 'product'");
            }
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["contract"] = args ? args.contract : undefined;
            inputs["edgeHostname"] = args ? args.edgeHostname : undefined;
            inputs["group"] = args ? args.group : undefined;
            inputs["ipv4"] = args ? args.ipv4 : undefined;
            inputs["ipv6"] = args ? args.ipv6 : undefined;
            inputs["product"] = args ? args.product : undefined;
            inputs["ipBehavior"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(EdgeHostName.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EdgeHostName resources.
 */
export interface EdgeHostNameState {
    /**
     * — (Optional) The certificate enrollment ID.
     */
    readonly certificate?: pulumi.Input<number>;
    /**
     * — (Required) The contract ID.
     */
    readonly contract?: pulumi.Input<string>;
    /**
     * — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
     */
    readonly edgeHostname?: pulumi.Input<string>;
    /**
     * — (Required) The group ID.
     */
    readonly group?: pulumi.Input<string>;
    readonly ipBehavior?: pulumi.Input<string>;
    /**
     * — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
     */
    readonly ipv4?: pulumi.Input<boolean>;
    /**
     * —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
     */
    readonly ipv6?: pulumi.Input<boolean>;
    /**
     * — (Required) The product ID.
     */
    readonly product?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EdgeHostName resource.
 */
export interface EdgeHostNameArgs {
    /**
     * — (Optional) The certificate enrollment ID.
     */
    readonly certificate?: pulumi.Input<number>;
    /**
     * — (Required) The contract ID.
     */
    readonly contract: pulumi.Input<string>;
    /**
     * — (Required) One or more edge hostnames (must be <= to the number of public hostnames).
     */
    readonly edgeHostname: pulumi.Input<string>;
    /**
     * — (Required) The group ID.
     */
    readonly group: pulumi.Input<string>;
    /**
     * — (Optional) Whether the property supports IPv4 to origin.  (Default: `true`).
     */
    readonly ipv4?: pulumi.Input<boolean>;
    /**
     * —  (Optional) Whether the property supports IPv6 to origin. (Default: `false`).
     */
    readonly ipv6?: pulumi.Input<boolean>;
    /**
     * — (Required) The product ID.
     */
    readonly product: pulumi.Input<string>;
}
